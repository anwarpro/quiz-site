-- Adminer 4.7.1 MySQL dump

SET NAMES utf8;
SET time_zone = '+00:00';
SET foreign_key_checks = 0;
SET sql_mode = 'NO_AUTO_VALUE_ON_ZERO';

SET NAMES utf8mb4;

DROP TABLE IF EXISTS `admin_menu`;
CREATE TABLE `admin_menu` (
  `id` int unsigned NOT NULL AUTO_INCREMENT,
  `parent_id` int NOT NULL DEFAULT '0',
  `order` int NOT NULL DEFAULT '0',
  `title` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `icon` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `uri` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `permission` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO `admin_menu` (`id`, `parent_id`, `order`, `title`, `icon`, `uri`, `permission`, `created_at`, `updated_at`) VALUES
(1,	0,	1,	'Dashboard',	'fa-bar-chart',	'/',	NULL,	NULL,	'2020-07-15 04:45:23'),
(2,	0,	11,	'Admin',	'fa-tasks',	'',	NULL,	NULL,	'2020-07-15 04:47:11'),
(3,	2,	12,	'Users',	'fa-users',	'auth/users',	NULL,	NULL,	'2020-07-15 04:47:11'),
(4,	2,	13,	'Roles',	'fa-user',	'auth/roles',	NULL,	NULL,	'2020-07-15 04:47:11'),
(5,	2,	14,	'Permission',	'fa-ban',	'auth/permissions',	NULL,	NULL,	'2020-07-15 04:47:11'),
(6,	2,	15,	'Menu',	'fa-bars',	'auth/menu',	NULL,	NULL,	'2020-07-15 04:47:11'),
(7,	2,	16,	'Operation log',	'fa-history',	'auth/logs',	NULL,	NULL,	'2020-07-15 04:47:11'),
(8,	16,	3,	'Courses',	'fa-graduation-cap',	'courses',	'*',	'2020-04-18 01:08:53',	'2020-07-15 04:47:11'),
(9,	16,	4,	'Planets',	'fa-bookmark-o',	'planets',	'*',	'2020-04-18 02:28:55',	'2020-07-15 04:47:11'),
(10,	16,	5,	'Sub Planets',	'fa-adjust',	'sub-planets',	'*',	'2020-04-18 02:29:25',	'2020-07-15 04:47:11'),
(11,	16,	6,	'Planet Contents',	'fa-angle-double-left',	'planet-contents',	'*',	'2020-04-18 09:56:12',	'2020-07-15 04:47:11'),
(12,	15,	8,	'Units',	'fa-video-camera',	'/units',	'*',	'2020-07-15 04:42:07',	'2020-07-15 04:48:38'),
(13,	15,	9,	'Questions',	'fa-question-circle-o',	'/questions',	'*',	'2020-07-15 04:42:32',	'2020-07-15 04:49:00'),
(14,	15,	10,	'Marks',	'fa-gift',	'/marks',	'*',	'2020-07-15 04:42:59',	'2020-07-15 04:49:20'),
(15,	0,	7,	'Quizes',	'fa-bars',	NULL,	NULL,	'2020-07-15 04:44:43',	'2020-07-15 04:47:11'),
(16,	0,	2,	'Android Courses',	'fa-android',	NULL,	NULL,	'2020-07-15 04:46:41',	'2020-07-15 04:47:11');

DROP TABLE IF EXISTS `admin_operation_log`;
CREATE TABLE `admin_operation_log` (
  `id` int unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int NOT NULL,
  `path` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `method` varchar(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `ip` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `input` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `admin_operation_log_user_id_index` (`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO `admin_operation_log` (`id`, `user_id`, `path`, `method`, `ip`, `input`, `created_at`, `updated_at`) VALUES
(1,	1,	'admin',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 00:47:31',	'2020-04-18 00:47:31'),
(2,	1,	'admin',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 01:07:22',	'2020-04-18 01:07:22'),
(3,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 01:08:05',	'2020-04-18 01:08:05'),
(4,	1,	'admin/auth/menu',	'POST',	'127.0.0.1',	'{\"parent_id\":\"0\",\"title\":\"Courses\",\"icon\":\"fa-graduation-cap\",\"uri\":\"courses\",\"roles\":[\"1\",null],\"permission\":\"*\",\"_token\":\"S5CmZPInVWY3xQMZL0WDgKOAYvuG4qFm4D6Uh0Y8\"}',	'2020-04-18 01:08:53',	'2020-04-18 01:08:53'),
(5,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 01:08:54',	'2020-04-18 01:08:54'),
(6,	1,	'admin/courses',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 01:08:57',	'2020-04-18 01:08:57'),
(7,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 01:09:21',	'2020-04-18 01:09:21'),
(8,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 02:25:51',	'2020-04-18 02:25:51'),
(9,	1,	'admin/courses',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 02:25:55',	'2020-04-18 02:25:55'),
(10,	1,	'admin/courses/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 02:25:58',	'2020-04-18 02:25:58'),
(11,	1,	'admin',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 02:26:11',	'2020-04-18 02:26:11'),
(12,	1,	'admin/courses',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 02:28:19',	'2020-04-18 02:28:19'),
(13,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 02:28:23',	'2020-04-18 02:28:23'),
(14,	1,	'admin/auth/menu',	'POST',	'127.0.0.1',	'{\"parent_id\":\"0\",\"title\":\"Planets\",\"icon\":\"fa-bookmark-o\",\"uri\":\"planets\",\"roles\":[\"1\",null],\"permission\":\"*\",\"_token\":\"S5CmZPInVWY3xQMZL0WDgKOAYvuG4qFm4D6Uh0Y8\"}',	'2020-04-18 02:28:55',	'2020-04-18 02:28:55'),
(15,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 02:28:55',	'2020-04-18 02:28:55'),
(16,	1,	'admin/auth/menu',	'POST',	'127.0.0.1',	'{\"parent_id\":\"0\",\"title\":\"Sub Planets\",\"icon\":\"fa-adjust\",\"uri\":\"sub-planets\",\"roles\":[\"1\",null],\"permission\":\"*\",\"_token\":\"S5CmZPInVWY3xQMZL0WDgKOAYvuG4qFm4D6Uh0Y8\"}',	'2020-04-18 02:29:25',	'2020-04-18 02:29:25'),
(17,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 02:29:25',	'2020-04-18 02:29:25'),
(18,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 02:29:30',	'2020-04-18 02:29:30'),
(19,	1,	'admin/courses',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 02:31:54',	'2020-04-18 02:31:54'),
(20,	1,	'admin/courses/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 02:31:56',	'2020-04-18 02:31:56'),
(21,	1,	'admin/courses/create',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 02:31:59',	'2020-04-18 02:31:59'),
(22,	1,	'admin/courses',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 02:32:02',	'2020-04-18 02:32:02'),
(23,	1,	'admin/courses/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 02:32:45',	'2020-04-18 02:32:45'),
(24,	1,	'admin/courses/create',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 02:34:16',	'2020-04-18 02:34:16'),
(25,	1,	'admin/courses',	'POST',	'127.0.0.1',	'{\"course_name\":\"Javascript Fundamentals\",\"course_id\":\"105\",\"_token\":\"S5CmZPInVWY3xQMZL0WDgKOAYvuG4qFm4D6Uh0Y8\"}',	'2020-04-18 02:34:38',	'2020-04-18 02:34:38'),
(26,	1,	'admin/courses/create',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 02:34:38',	'2020-04-18 02:34:38'),
(27,	1,	'admin/courses/create',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 02:34:51',	'2020-04-18 02:34:51'),
(28,	1,	'admin/courses/create',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 02:35:09',	'2020-04-18 02:35:09'),
(29,	1,	'admin/courses',	'POST',	'127.0.0.1',	'{\"name\":\"Javascript Fundamentals\",\"course_id\":\"105\",\"_token\":\"S5CmZPInVWY3xQMZL0WDgKOAYvuG4qFm4D6Uh0Y8\"}',	'2020-04-18 02:35:23',	'2020-04-18 02:35:23'),
(30,	1,	'admin/courses',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 02:35:23',	'2020-04-18 02:35:23'),
(31,	1,	'admin/planets',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 02:36:09',	'2020-04-18 02:36:09'),
(32,	1,	'admin/planets/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 02:36:12',	'2020-04-18 02:36:12'),
(33,	1,	'admin/planets',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 02:37:52',	'2020-04-18 02:37:52'),
(34,	1,	'admin/planets/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 02:37:58',	'2020-04-18 02:37:58'),
(35,	1,	'admin/sub-planets',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 02:39:05',	'2020-04-18 02:39:05'),
(36,	1,	'admin',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 02:39:07',	'2020-04-18 02:39:07'),
(37,	1,	'admin/courses',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 02:39:09',	'2020-04-18 02:39:09'),
(38,	1,	'admin/courses',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 02:53:17',	'2020-04-18 02:53:17'),
(39,	1,	'admin/courses',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 02:53:23',	'2020-04-18 02:53:23'),
(40,	1,	'admin/courses',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 02:53:31',	'2020-04-18 02:53:31'),
(41,	1,	'admin/courses',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 02:53:35',	'2020-04-18 02:53:35'),
(42,	1,	'admin/courses',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 02:53:48',	'2020-04-18 02:53:48'),
(43,	1,	'admin/courses',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 02:55:00',	'2020-04-18 02:55:00'),
(44,	1,	'admin/courses/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 02:55:03',	'2020-04-18 02:55:03'),
(45,	1,	'admin/courses/create',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 02:56:21',	'2020-04-18 02:56:21'),
(46,	1,	'admin/courses',	'POST',	'127.0.0.1',	'{\"course_name\":\"Javascript Fundamentals\",\"content_name\":\"day8\",\"course_id\":\"105\",\"_token\":\"S5CmZPInVWY3xQMZL0WDgKOAYvuG4qFm4D6Uh0Y8\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/courses\"}',	'2020-04-18 02:56:35',	'2020-04-18 02:56:35'),
(47,	1,	'admin/courses',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 02:56:35',	'2020-04-18 02:56:35'),
(48,	1,	'admin/courses',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 02:57:09',	'2020-04-18 02:57:09'),
(49,	1,	'admin/planets',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 03:04:40',	'2020-04-18 03:04:40'),
(50,	1,	'admin/planets/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 03:04:41',	'2020-04-18 03:04:41'),
(51,	1,	'admin',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 08:27:49',	'2020-04-18 08:27:49'),
(52,	1,	'admin',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 08:47:13',	'2020-04-18 08:47:13'),
(53,	1,	'admin/planets',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 08:47:18',	'2020-04-18 08:47:18'),
(54,	1,	'admin/planets/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 08:47:20',	'2020-04-18 08:47:20'),
(55,	1,	'admin/courses',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 09:00:47',	'2020-04-18 09:00:47'),
(56,	1,	'admin/courses/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 09:00:49',	'2020-04-18 09:00:49'),
(57,	1,	'admin/courses/create',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 09:01:25',	'2020-04-18 09:01:25'),
(58,	1,	'admin/courses',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 09:01:54',	'2020-04-18 09:01:54'),
(59,	1,	'admin/courses/1/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 09:01:56',	'2020-04-18 09:01:56'),
(60,	1,	'admin/courses/1/edit',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 09:02:51',	'2020-04-18 09:02:51'),
(61,	1,	'admin/courses/1',	'PUT',	'127.0.0.1',	'{\"course_name\":\"Javascript Fundamentals\",\"content_name\":\"day8\",\"course_id\":\"105\",\"planets\":{\"new_1\":{\"title\":null,\"type\":\"Single\",\"id\":null,\"_remove_\":\"1\"},\"new_2\":{\"title\":null,\"type\":\"Single\",\"id\":null,\"_remove_\":\"1\"},\"new_3\":{\"title\":\"Introduction\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_4\":{\"title\":\"Array\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_5\":{\"title\":\"Accessing Array\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_6\":{\"title\":\"Loops\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_7\":{\"title\":\"Type of loops\",\"type\":\"double\",\"id\":null,\"_remove_\":\"0\"},\"new_8\":{\"title\":\"Functions\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_9\":{\"title\":\"More on Function\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_10\":{\"title\":\"Important Messages\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_11\":{\"title\":\"Recap\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"aqUDHj7CDlX9e16DPHw8zqE9VPSckG0rZhc4q0p8\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/courses\\/create\"}',	'2020-04-18 09:07:17',	'2020-04-18 09:07:17'),
(62,	1,	'admin/courses/1/edit',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 09:07:17',	'2020-04-18 09:07:17'),
(63,	1,	'admin/courses/1',	'PUT',	'127.0.0.1',	'{\"course_name\":\"Javascript Fundamentals\",\"content_name\":\"day8\",\"course_id\":\"105\",\"planets\":{\"new___LA_KEY__\":{\"title\":\"Recap\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"aqUDHj7CDlX9e16DPHw8zqE9VPSckG0rZhc4q0p8\",\"_method\":\"PUT\"}',	'2020-04-18 09:08:13',	'2020-04-18 09:08:13'),
(64,	1,	'admin/courses',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 09:08:13',	'2020-04-18 09:08:13'),
(65,	1,	'admin/courses/1/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 09:11:28',	'2020-04-18 09:11:28'),
(66,	1,	'admin/courses/1',	'PUT',	'127.0.0.1',	'{\"course_name\":\"Javascript Fundamentals\",\"content_name\":\"day8\",\"course_id\":\"105\",\"planets\":{\"1\":{\"title\":\"Recap\",\"type\":\"Single\",\"id\":\"1\",\"_remove_\":\"0\"},\"new_1\":{\"title\":\"fds\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"aqUDHj7CDlX9e16DPHw8zqE9VPSckG0rZhc4q0p8\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/courses\"}',	'2020-04-18 09:12:52',	'2020-04-18 09:12:52'),
(67,	1,	'admin/courses',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 09:12:52',	'2020-04-18 09:12:52'),
(68,	1,	'admin/courses/1/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 09:12:55',	'2020-04-18 09:12:55'),
(69,	1,	'admin/courses/1',	'PUT',	'127.0.0.1',	'{\"course_name\":\"Javascript Fundamentals\",\"content_name\":\"day8\",\"course_id\":\"105\",\"planets\":{\"1\":{\"title\":\"Recap\",\"type\":\"Single\",\"id\":\"1\",\"_remove_\":\"0\"},\"2\":{\"title\":\"fds\",\"type\":\"Single\",\"id\":\"2\",\"_remove_\":\"0\"},\"new_1\":{\"title\":\"sdaf\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_2\":{\"title\":\"dsafe\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"aqUDHj7CDlX9e16DPHw8zqE9VPSckG0rZhc4q0p8\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/courses\"}',	'2020-04-18 09:13:07',	'2020-04-18 09:13:07'),
(70,	1,	'admin/courses',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 09:13:07',	'2020-04-18 09:13:07'),
(71,	1,	'admin/courses/1/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 09:13:10',	'2020-04-18 09:13:10'),
(72,	1,	'admin/courses/1',	'PUT',	'127.0.0.1',	'{\"course_name\":\"Javascript Fundamentals\",\"content_name\":\"day8\",\"course_id\":\"105\",\"planets\":{\"1\":{\"title\":\"Recap\",\"type\":\"Single\",\"id\":\"1\",\"_remove_\":\"1\"},\"2\":{\"title\":\"fds\",\"type\":\"Single\",\"id\":\"2\",\"_remove_\":\"1\"},\"3\":{\"title\":\"sdaf\",\"type\":\"Single\",\"id\":\"3\",\"_remove_\":\"1\"},\"4\":{\"title\":\"dsafe\",\"type\":\"Single\",\"id\":\"4\",\"_remove_\":\"1\"}},\"_token\":\"aqUDHj7CDlX9e16DPHw8zqE9VPSckG0rZhc4q0p8\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/courses\"}',	'2020-04-18 09:13:24',	'2020-04-18 09:13:24'),
(73,	1,	'admin/courses',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 09:13:24',	'2020-04-18 09:13:24'),
(74,	1,	'admin/courses/1/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 09:13:26',	'2020-04-18 09:13:26'),
(75,	1,	'admin/courses/1',	'PUT',	'127.0.0.1',	'{\"course_name\":\"Javascript Fundamentals\",\"content_name\":\"day8\",\"course_id\":\"105\",\"planets\":{\"new_1\":{\"title\":\"Introduction\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"aqUDHj7CDlX9e16DPHw8zqE9VPSckG0rZhc4q0p8\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/courses\"}',	'2020-04-18 09:13:46',	'2020-04-18 09:13:46'),
(76,	1,	'admin/courses',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 09:13:46',	'2020-04-18 09:13:46'),
(77,	1,	'admin/courses/1/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 09:13:48',	'2020-04-18 09:13:48'),
(78,	1,	'admin/courses/1',	'PUT',	'127.0.0.1',	'{\"course_name\":\"Javascript Fundamentals\",\"content_name\":\"day8\",\"course_id\":\"105\",\"planets\":{\"5\":{\"title\":\"Introduction\",\"type\":\"Single\",\"id\":\"5\",\"_remove_\":\"0\"},\"new_1\":{\"title\":\"Array\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"aqUDHj7CDlX9e16DPHw8zqE9VPSckG0rZhc4q0p8\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/courses\"}',	'2020-04-18 09:13:53',	'2020-04-18 09:13:53'),
(79,	1,	'admin/courses',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 09:13:54',	'2020-04-18 09:13:54'),
(80,	1,	'admin/courses/1/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 09:13:56',	'2020-04-18 09:13:56'),
(81,	1,	'admin/courses/1',	'PUT',	'127.0.0.1',	'{\"course_name\":\"Javascript Fundamentals\",\"content_name\":\"day8\",\"course_id\":\"105\",\"planets\":{\"5\":{\"title\":\"Introduction\",\"type\":\"Single\",\"id\":\"5\",\"_remove_\":\"0\"},\"6\":{\"title\":\"Array\",\"type\":\"Single\",\"id\":\"6\",\"_remove_\":\"0\"},\"new_1\":{\"title\":\"Accessing Array\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_2\":{\"title\":\"Loops\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_3\":{\"title\":\"Type of Loops\",\"type\":\"double\",\"id\":null,\"_remove_\":\"0\"},\"new_4\":{\"title\":\"Functions\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"aqUDHj7CDlX9e16DPHw8zqE9VPSckG0rZhc4q0p8\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/courses\"}',	'2020-04-18 09:14:33',	'2020-04-18 09:14:33'),
(82,	1,	'admin/courses',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 09:14:33',	'2020-04-18 09:14:33'),
(83,	1,	'admin/courses/1/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 09:14:35',	'2020-04-18 09:14:35'),
(84,	1,	'admin/courses/1',	'PUT',	'127.0.0.1',	'{\"course_name\":\"Javascript Fundamentals\",\"content_name\":\"day8\",\"course_id\":\"105\",\"planets\":{\"5\":{\"title\":\"Introduction\",\"type\":\"Single\",\"id\":\"5\",\"_remove_\":\"0\"},\"6\":{\"title\":\"Array\",\"type\":\"Single\",\"id\":\"6\",\"_remove_\":\"0\"},\"7\":{\"title\":\"Accessing Array\",\"type\":\"Single\",\"id\":\"7\",\"_remove_\":\"0\"},\"8\":{\"title\":\"Loops\",\"type\":\"Single\",\"id\":\"8\",\"_remove_\":\"0\"},\"9\":{\"title\":\"Type of Loops\",\"type\":\"double\",\"id\":\"9\",\"_remove_\":\"0\"},\"10\":{\"title\":\"Functions\",\"type\":\"Single\",\"id\":\"10\",\"_remove_\":\"0\"},\"new_1\":{\"title\":\"More on Function\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_2\":{\"title\":\"Important Messages\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_3\":{\"title\":\"Recap\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"aqUDHj7CDlX9e16DPHw8zqE9VPSckG0rZhc4q0p8\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/courses\"}',	'2020-04-18 09:15:34',	'2020-04-18 09:15:34'),
(85,	1,	'admin/courses',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 09:15:34',	'2020-04-18 09:15:34'),
(86,	1,	'admin/courses/1/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 09:15:37',	'2020-04-18 09:15:37'),
(87,	1,	'admin/courses/1',	'PUT',	'127.0.0.1',	'{\"course_name\":\"Javascript Fundamentals\",\"content_name\":\"day8\",\"course_id\":\"105\",\"planets\":{\"5\":{\"title\":\"Introduction\",\"type\":\"Single\",\"id\":\"5\",\"_remove_\":\"0\"},\"6\":{\"title\":\"Array\",\"type\":\"Single\",\"id\":\"6\",\"_remove_\":\"0\"},\"7\":{\"title\":\"Accessing Array\",\"type\":\"Single\",\"id\":\"7\",\"_remove_\":\"0\"},\"8\":{\"title\":\"Loops\",\"type\":\"Single\",\"id\":\"8\",\"_remove_\":\"0\"},\"9\":{\"title\":\"Type of Loops\",\"type\":\"double\",\"id\":\"9\",\"_remove_\":\"0\"},\"10\":{\"title\":\"Functions\",\"type\":\"Single\",\"id\":\"10\",\"_remove_\":\"0\"},\"11\":{\"title\":\"More on Function\",\"type\":\"Single\",\"id\":\"11\",\"_remove_\":\"0\"},\"12\":{\"title\":\"Important Messages\",\"type\":\"Single\",\"id\":\"12\",\"_remove_\":\"0\"},\"13\":{\"title\":\"Recap\",\"type\":\"Single\",\"id\":\"13\",\"_remove_\":\"0\"}},\"_token\":\"aqUDHj7CDlX9e16DPHw8zqE9VPSckG0rZhc4q0p8\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/courses\"}',	'2020-04-18 09:16:12',	'2020-04-18 09:16:12'),
(88,	1,	'admin/courses',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 09:16:13',	'2020-04-18 09:16:13'),
(89,	1,	'admin/courses/1/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 09:16:15',	'2020-04-18 09:16:15'),
(90,	1,	'admin/courses/1',	'PUT',	'127.0.0.1',	'{\"course_name\":\"Javascript Fundamentals\",\"content_name\":\"day8\",\"course_id\":\"105\",\"planets\":{\"5\":{\"title\":\"Introduction\",\"type\":\"Single\",\"id\":\"5\",\"_remove_\":\"0\"},\"6\":{\"title\":\"Array\",\"type\":\"Single\",\"id\":\"6\",\"_remove_\":\"0\"},\"7\":{\"title\":\"Accessing Array\",\"type\":\"Single\",\"id\":\"7\",\"_remove_\":\"0\"},\"8\":{\"title\":\"Loops\",\"type\":\"Single\",\"id\":\"8\",\"_remove_\":\"0\"},\"9\":{\"title\":\"Type of Loops\",\"type\":\"double\",\"id\":\"9\",\"_remove_\":\"0\"},\"10\":{\"title\":\"Functions\",\"type\":\"Single\",\"id\":\"10\",\"_remove_\":\"0\"},\"11\":{\"title\":\"More on Function\",\"type\":\"Single\",\"id\":\"11\",\"_remove_\":\"0\"},\"12\":{\"title\":\"Important Messages\",\"type\":\"Single\",\"id\":\"12\",\"_remove_\":\"0\"},\"13\":{\"title\":\"Recap\",\"type\":\"Single\",\"id\":\"13\",\"_remove_\":\"0\"}},\"_token\":\"aqUDHj7CDlX9e16DPHw8zqE9VPSckG0rZhc4q0p8\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/courses\"}',	'2020-04-18 09:34:19',	'2020-04-18 09:34:19'),
(91,	1,	'admin/courses',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 09:34:19',	'2020-04-18 09:34:19'),
(92,	1,	'admin/planets',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 09:34:24',	'2020-04-18 09:34:24'),
(93,	1,	'admin/planets/5/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 09:34:43',	'2020-04-18 09:34:43'),
(94,	1,	'admin/planets',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 09:34:49',	'2020-04-18 09:34:49'),
(95,	1,	'admin/planets/5/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 09:54:24',	'2020-04-18 09:54:24'),
(96,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 09:55:51',	'2020-04-18 09:55:51'),
(97,	1,	'admin/auth/menu',	'POST',	'127.0.0.1',	'{\"parent_id\":\"0\",\"title\":\"Planet Contents\",\"icon\":\"fa-angle-double-left\",\"uri\":\"planet-contents\",\"roles\":[\"1\",null],\"permission\":\"*\",\"_token\":\"aqUDHj7CDlX9e16DPHw8zqE9VPSckG0rZhc4q0p8\"}',	'2020-04-18 09:56:12',	'2020-04-18 09:56:12'),
(98,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 09:56:12',	'2020-04-18 09:56:12'),
(99,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 09:56:15',	'2020-04-18 09:56:15'),
(100,	1,	'admin/planet-contents',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 09:56:20',	'2020-04-18 09:56:20'),
(101,	1,	'admin/planet-contents/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 09:56:22',	'2020-04-18 09:56:22'),
(102,	1,	'admin/planet-contents/create',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 10:13:08',	'2020-04-18 10:13:08'),
(103,	1,	'admin/planet-contents/create',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 10:14:27',	'2020-04-18 10:14:27'),
(104,	1,	'admin/planet-contents/create',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 10:14:45',	'2020-04-18 10:14:45'),
(105,	1,	'admin/planet-contents/create',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 10:15:32',	'2020-04-18 10:15:32'),
(106,	1,	'admin/planets',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 10:22:28',	'2020-04-18 10:22:28'),
(107,	1,	'admin/planets/5/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 10:22:32',	'2020-04-18 10:22:32'),
(108,	1,	'admin/planets/5/edit',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 10:24:18',	'2020-04-18 10:24:18'),
(109,	1,	'admin/planets/5',	'PUT',	'127.0.0.1',	'{\"content\":null,\"title\":\"Introduction\",\"total\":\"0\",\"status\":\"lock\",\"planet_contents\":{\"new_1\":{\"mid\":\"105\",\"name\":\"Previously\",\"des_01\":\"Let\\u2019s level up!\\r\\nSo in the previous Galaxy, you learned the very basics of JavaScript. \\r\\n\\r\\nYou learned how to output, what are variables, operations, conditions, and comments. \\r\\n\\r\\nWow, you are really into this JavaScript thing.\",\"link01\":null,\"des_02\":null,\"link02\":null,\"code\":null,\"output\":\"null\",\"des_03\":null,\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"aqUDHj7CDlX9e16DPHw8zqE9VPSckG0rZhc4q0p8\",\"_method\":\"PUT\"}',	'2020-04-18 10:26:37',	'2020-04-18 10:26:37'),
(110,	1,	'admin/planets',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 10:26:38',	'2020-04-18 10:26:38'),
(111,	1,	'admin/planets/5/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 10:26:41',	'2020-04-18 10:26:41'),
(112,	1,	'admin/planets/5/edit',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 10:27:22',	'2020-04-18 10:27:22'),
(113,	1,	'admin/planets/5',	'PUT',	'127.0.0.1',	'{\"content\":null,\"title\":\"Introduction\",\"total\":\"0\",\"status\":\"lock\",\"planet_contents\":{\"1\":{\"mid\":\"105\",\"name\":\"Previously\",\"des_01\":\"Let\\u2019s level up!\\r\\nSo in the previous Galaxy, you learned the very basics of JavaScript. \\r\\n\\r\\nYou learned how to output, what are variables, operations, conditions, and comments. \\r\\n\\r\\nWow, you are really into this JavaScript thing.\",\"link01\":\"null\",\"des_02\":\"null\",\"link02\":\"null\",\"code\":\"code block\",\"output\":\"null\",\"des_03\":\"null\",\"id\":\"1\",\"_remove_\":\"0\"},\"new_1\":{\"mid\":\"105\",\"name\":\"Continuation\",\"des_01\":\"Now you have entered the Advanced JavaScript Galaxy. \\r\\n\\r\\nThis means you will be able to know the overall concepts of JavaScript.\",\"link01\":null,\"des_02\":null,\"link02\":null,\"code\":null,\"output\":\"null\",\"des_03\":null,\"id\":null,\"_remove_\":\"0\"},\"new_2\":{\"mid\":\"105\",\"name\":\"What will you learn?\",\"des_01\":\"You will learn about arrays, loops, functions, parameters, and objects. \\r\\nUsing all this, you will be able to master JavaScript and then you can flaunt in front of your friends.\\r\\nSo, let\'s dive in...\",\"link01\":null,\"des_02\":null,\"link02\":null,\"code\":null,\"output\":\"null\",\"des_03\":null,\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"aqUDHj7CDlX9e16DPHw8zqE9VPSckG0rZhc4q0p8\",\"_method\":\"PUT\"}',	'2020-04-18 10:28:40',	'2020-04-18 10:28:40'),
(114,	1,	'admin/planets',	'GET',	'127.0.0.1',	'[]',	'2020-04-18 10:28:40',	'2020-04-18 10:28:40'),
(115,	1,	'admin/planets/5/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-18 10:28:48',	'2020-04-18 10:28:48'),
(116,	1,	'admin',	'GET',	'127.0.0.1',	'[]',	'2020-04-19 01:00:59',	'2020-04-19 01:00:59'),
(117,	1,	'admin/sub-planets',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-19 01:01:12',	'2020-04-19 01:01:12'),
(118,	1,	'admin/sub-planets/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-19 01:01:13',	'2020-04-19 01:01:13'),
(119,	1,	'admin/courses',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-19 01:01:29',	'2020-04-19 01:01:29'),
(120,	1,	'admin/courses/1/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-19 01:01:32',	'2020-04-19 01:01:32'),
(121,	1,	'admin/courses',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-19 01:02:16',	'2020-04-19 01:02:16'),
(122,	1,	'admin/planets',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-19 01:02:21',	'2020-04-19 01:02:21'),
(123,	1,	'admin/planets/9/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-19 01:02:26',	'2020-04-19 01:02:26'),
(124,	1,	'admin/planets/9/edit',	'GET',	'127.0.0.1',	'[]',	'2020-04-19 01:08:20',	'2020-04-19 01:08:20'),
(125,	1,	'admin/planets/9/edit',	'GET',	'127.0.0.1',	'[]',	'2020-04-19 01:08:37',	'2020-04-19 01:08:37'),
(126,	1,	'admin/planets/9/edit',	'GET',	'127.0.0.1',	'[]',	'2020-04-19 01:09:23',	'2020-04-19 01:09:23'),
(127,	1,	'admin/planets/9/edit',	'GET',	'127.0.0.1',	'[]',	'2020-04-19 01:09:40',	'2020-04-19 01:09:40'),
(128,	1,	'admin/planets/9/edit',	'GET',	'127.0.0.1',	'[]',	'2020-04-19 01:10:06',	'2020-04-19 01:10:06'),
(129,	1,	'admin/planets/9/edit',	'GET',	'127.0.0.1',	'[]',	'2020-04-19 01:10:15',	'2020-04-19 01:10:15'),
(130,	1,	'admin/planets/9/edit',	'GET',	'127.0.0.1',	'[]',	'2020-04-19 01:10:32',	'2020-04-19 01:10:32'),
(131,	1,	'admin/planets/9/edit',	'GET',	'127.0.0.1',	'[]',	'2020-04-19 01:10:43',	'2020-04-19 01:10:43'),
(132,	1,	'admin/planets/9/edit',	'GET',	'127.0.0.1',	'[]',	'2020-04-19 01:10:55',	'2020-04-19 01:10:55'),
(133,	1,	'admin/planets/9',	'PUT',	'127.0.0.1',	'{\"content\":null,\"title\":\"Type of Loops\",\"total\":\"0\",\"status\":\"lock\",\"sub_planets\":{\"new_1\":{\"sid\":\"105\",\"mtitle\":\"For Loop\",\"id\":null,\"_remove_\":\"0\"},\"new_2\":{\"sid\":\"105\",\"mtitle\":\"While Loop\",\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"72nyPM5ngA9wFfGdYAnrh3945G1A0QvCdNYp6jOo\",\"_method\":\"PUT\"}',	'2020-04-19 01:11:30',	'2020-04-19 01:11:30'),
(134,	1,	'admin/planets/9/edit',	'GET',	'127.0.0.1',	'[]',	'2020-04-19 01:11:30',	'2020-04-19 01:11:30'),
(135,	1,	'admin/planets/9',	'PUT',	'127.0.0.1',	'{\"content\":null,\"title\":\"Type of Loops\",\"total\":\"0\",\"status\":\"lock\",\"sub_planets\":{\"new___LA_KEY__\":{\"sid\":\"105\",\"mtitle\":\"While Loop\",\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"72nyPM5ngA9wFfGdYAnrh3945G1A0QvCdNYp6jOo\",\"_method\":\"PUT\"}',	'2020-04-19 01:12:52',	'2020-04-19 01:12:52'),
(136,	1,	'admin/planets/9/edit',	'GET',	'127.0.0.1',	'[]',	'2020-04-19 01:12:52',	'2020-04-19 01:12:52'),
(137,	1,	'admin/planets/9',	'PUT',	'127.0.0.1',	'{\"content\":null,\"title\":\"Type of Loops\",\"total\":\"0\",\"status\":\"lock\",\"sub_planets\":{\"new___LA_KEY__\":{\"sid\":\"105\",\"mtitle\":\"While Loop\",\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"72nyPM5ngA9wFfGdYAnrh3945G1A0QvCdNYp6jOo\",\"_method\":\"PUT\"}',	'2020-04-19 01:13:16',	'2020-04-19 01:13:16'),
(138,	1,	'admin/planets/9',	'GET',	'127.0.0.1',	'[]',	'2020-04-19 01:16:39',	'2020-04-19 01:16:39'),
(139,	1,	'admin/planets',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-19 01:16:48',	'2020-04-19 01:16:48'),
(140,	1,	'admin/planets/9/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-19 01:16:53',	'2020-04-19 01:16:53'),
(141,	1,	'admin/planets/9/edit',	'GET',	'127.0.0.1',	'[]',	'2020-04-19 01:17:44',	'2020-04-19 01:17:44'),
(142,	1,	'admin/planets/9',	'PUT',	'127.0.0.1',	'{\"content\":null,\"title\":\"Type of Loops\",\"total\":\"0\",\"status\":\"lock\",\"sub_planets\":{\"new_1\":{\"sid\":\"105\",\"total\":\"0\",\"mtitle\":\"For Loop\",\"id\":null,\"_remove_\":\"0\"},\"new_2\":{\"sid\":\"105\",\"total\":\"0\",\"mtitle\":\"While Loop\",\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"72nyPM5ngA9wFfGdYAnrh3945G1A0QvCdNYp6jOo\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/planets\\/9\"}',	'2020-04-19 01:18:23',	'2020-04-19 01:18:23'),
(143,	1,	'admin/planets/9',	'GET',	'127.0.0.1',	'[]',	'2020-04-19 01:18:23',	'2020-04-19 01:18:23'),
(144,	1,	'admin/planets',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-19 01:18:33',	'2020-04-19 01:18:33'),
(145,	1,	'admin/planets/9/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-19 01:18:37',	'2020-04-19 01:18:37'),
(146,	1,	'admin/planets/9',	'PUT',	'127.0.0.1',	'{\"content\":null,\"title\":\"Type of Loops\",\"total\":\"0\",\"status\":\"lock\",\"sub_planets\":{\"1\":{\"sid\":\"105\",\"total\":\"0\",\"mtitle\":\"For Loop\",\"id\":\"1\",\"_remove_\":\"0\"},\"2\":{\"sid\":\"105\",\"total\":\"0\",\"mtitle\":\"While Loop\",\"id\":\"2\",\"_remove_\":\"0\"}},\"_token\":\"72nyPM5ngA9wFfGdYAnrh3945G1A0QvCdNYp6jOo\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/planets\"}',	'2020-04-19 01:19:37',	'2020-04-19 01:19:37'),
(147,	1,	'admin/planets',	'GET',	'127.0.0.1',	'[]',	'2020-04-19 01:19:38',	'2020-04-19 01:19:38'),
(148,	1,	'admin/sub-planets',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-19 02:00:37',	'2020-04-19 02:00:37'),
(149,	1,	'admin/sub-planets/1/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-19 02:00:40',	'2020-04-19 02:00:40'),
(150,	1,	'admin/sub-planets/1',	'PUT',	'127.0.0.1',	'{\"sid\":\"105\",\"mtitle\":\"For Loop\",\"sub_planet_contents\":{\"new_1\":{\"mid\":\"105\",\"name\":\"What is a For Loop?\",\"des_01\":\"A For Loops has different parts. A variable, a value, a condition, and a statement countering the condition.\\r\\n\\r\\nWe learned what conditions are in the last Galaxy, so now let\\u2019s bring them back.\",\"link01\":null,\"des_02\":null,\"link02\":null,\"code\":null,\"output\":\"null\",\"des_03\":null,\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"72nyPM5ngA9wFfGdYAnrh3945G1A0QvCdNYp6jOo\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/sub-planets\"}',	'2020-04-19 02:01:31',	'2020-04-19 02:01:31'),
(151,	1,	'admin/sub-planets',	'GET',	'127.0.0.1',	'[]',	'2020-04-19 02:01:31',	'2020-04-19 02:01:31'),
(152,	1,	'admin/sub-planets/1/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-19 02:01:35',	'2020-04-19 02:01:35'),
(153,	1,	'admin/sub-planets/1',	'PUT',	'127.0.0.1',	'{\"sid\":\"105\",\"mtitle\":\"For Loop\",\"sub_planet_contents\":{\"1\":{\"mid\":\"105\",\"name\":\"What is a For Loop?\",\"des_01\":\"A For Loops has different parts. A variable, a value, a condition, and a statement countering the condition.\\r\\n\\r\\nWe learned what conditions are in the last Galaxy, so now let\\u2019s bring them back.\",\"link01\":\"null\",\"des_02\":\"null\",\"link02\":\"null\",\"code\":\"code block\",\"output\":\"null\",\"des_03\":\"null\",\"id\":\"1\",\"_remove_\":\"0\"},\"new_1\":{\"mid\":\"105\",\"name\":\"How to create a For Loop?\",\"des_01\":\"To create a For Loop, you first have to create a variable.\",\"link01\":null,\"des_02\":null,\"link02\":null,\"code\":\"var x;\",\"output\":\"true\",\"des_03\":null,\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"72nyPM5ngA9wFfGdYAnrh3945G1A0QvCdNYp6jOo\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/sub-planets\"}',	'2020-04-19 02:02:26',	'2020-04-19 02:02:26'),
(154,	1,	'admin/sub-planets',	'GET',	'127.0.0.1',	'[]',	'2020-04-19 02:02:26',	'2020-04-19 02:02:26'),
(155,	1,	'admin/sub-planets/1/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-19 02:03:39',	'2020-04-19 02:03:39'),
(156,	1,	'admin/sub-planets/1',	'PUT',	'127.0.0.1',	'{\"sid\":\"105\",\"mtitle\":\"For Loop\",\"sub_planet_contents\":{\"1\":{\"mid\":\"105\",\"name\":\"What is a For Loop?\",\"des_01\":\"A For Loops has different parts. A variable, a value, a condition, and a statement countering the condition.\\r\\n\\r\\nWe learned what conditions are in the last Galaxy, so now let\\u2019s bring them back.\",\"link01\":\"null\",\"des_02\":\"null\",\"link02\":\"null\",\"code\":\"code block\",\"output\":\"null\",\"des_03\":\"null\",\"id\":\"1\",\"_remove_\":\"0\"},\"2\":{\"mid\":\"105\",\"name\":\"How to create a For Loop?\",\"des_01\":\"To create a For Loop, you first have to create a variable.\",\"link01\":\"null\",\"des_02\":\"null\",\"link02\":\"null\",\"code\":\"var x;\",\"output\":\"true\",\"des_03\":\"Now, you can define a for loop,\\r\\n\\r\\nfor(var x = 1; i <= 10; i++) {\\r\\n\\r\\n}\",\"id\":\"2\",\"_remove_\":\"0\"},\"new_1\":{\"mid\":\"105\",\"name\":\"How to create a For Loop?\",\"des_01\":\"Keep in mind that in a For Loop, things are separated by semicolons(\\\";\\\").\\r\\n\\r\\nNow, to repeat our previous task 10 times, we have to use curly brackets(\\u201c{}\\u201d) to put the code we want to repeat.\",\"link01\":null,\"des_02\":null,\"link02\":null,\"code\":null,\"output\":\"null\",\"des_03\":null,\"id\":null,\"_remove_\":\"0\"},\"new_2\":{\"mid\":\"105\",\"name\":\"Example\",\"des_01\":null,\"link01\":null,\"des_02\":null,\"link02\":null,\"code\":\"for(var x = 1; i <= 10; i++) {\\r\\n    console.log(\\u201cI love you\\u201d);\\r\\n}\",\"output\":\"true\",\"des_03\":\"The above code now will repeat outputting \\u201cI love you\\u201d.\",\"id\":null,\"_remove_\":\"0\"},\"new_3\":{\"mid\":\"105\",\"name\":\"Final Code\",\"des_01\":null,\"link01\":null,\"des_02\":null,\"link02\":null,\"code\":\"for(var x = 1; i <= 10; i++) {\\r\\n    console.log(\\u201cI love you\\u201d);\\r\\n}\",\"output\":\"true\",\"des_03\":\"Don\\u2019t forget to always declare the variables because the For loop will not do it for you. It\'s not your Mom. \\ud83d\\ude01\",\"id\":null,\"_remove_\":\"0\"},\"new_4\":{\"mid\":\"105\",\"name\":\"Completed\",\"des_01\":\"You have to declare a variable for a for loop.\",\"link01\":null,\"des_02\":null,\"link02\":null,\"code\":null,\"output\":\"null\",\"des_03\":null,\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"72nyPM5ngA9wFfGdYAnrh3945G1A0QvCdNYp6jOo\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/sub-planets\"}',	'2020-04-19 02:08:59',	'2020-04-19 02:08:59'),
(157,	1,	'admin/sub-planets',	'GET',	'127.0.0.1',	'[]',	'2020-04-19 02:08:59',	'2020-04-19 02:08:59'),
(158,	1,	'admin/sub-planets/2/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-19 02:09:07',	'2020-04-19 02:09:07'),
(159,	1,	'admin',	'GET',	'127.0.0.1',	'[]',	'2020-04-19 04:28:53',	'2020-04-19 04:28:53'),
(160,	1,	'admin/planets',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-19 05:34:09',	'2020-04-19 05:34:09'),
(161,	1,	'admin/planets/5/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-19 05:34:12',	'2020-04-19 05:34:12'),
(162,	1,	'admin/planets/5/edit',	'GET',	'127.0.0.1',	'[]',	'2020-04-19 05:54:15',	'2020-04-19 05:54:15'),
(163,	1,	'admin',	'GET',	'127.0.0.1',	'[]',	'2020-04-20 23:11:02',	'2020-04-20 23:11:02'),
(164,	1,	'admin/courses',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-20 23:11:05',	'2020-04-20 23:11:05'),
(165,	1,	'admin/courses/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-20 23:11:07',	'2020-04-20 23:11:07'),
(166,	1,	'admin/courses',	'POST',	'127.0.0.1',	'{\"course_name\":\"DOM Manipulation\",\"content_name\":\"day9\",\"course_id\":\"106\",\"planets\":{\"new_1\":{\"title\":\"Introduction\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_2\":{\"title\":\"Methods\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_3\":{\"title\":\"Document\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_4\":{\"title\":\"Elements\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_5\":{\"title\":\"HTML\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_6\":{\"title\":\"CSS\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_7\":{\"title\":\"Events\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_8\":{\"title\":\"Collections\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_9\":{\"title\":\"Nodes\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_10\":{\"title\":\"Recap\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"VpxRUAuM3QOqeh4buxOjYY559SZ4TAf7htkq23Hb\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/courses\"}',	'2020-04-20 23:18:02',	'2020-04-20 23:18:02'),
(167,	1,	'admin/courses',	'GET',	'127.0.0.1',	'[]',	'2020-04-20 23:18:02',	'2020-04-20 23:18:02'),
(168,	1,	'admin',	'GET',	'127.0.0.1',	'[]',	'2020-04-21 03:32:56',	'2020-04-21 03:32:56'),
(169,	1,	'admin/planets',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-21 03:33:11',	'2020-04-21 03:33:11'),
(170,	1,	'admin/courses',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-21 03:33:12',	'2020-04-21 03:33:12'),
(171,	1,	'admin/courses/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-21 03:33:13',	'2020-04-21 03:33:13'),
(172,	1,	'admin/courses',	'POST',	'127.0.0.1',	'{\"course_name\":\"ES6\",\"content_name\":\"day10\",\"course_id\":\"107\",\"planets\":{\"new_1\":{\"title\":\"What is ES6?\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_2\":{\"title\":\"Template Strings\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_3\":{\"title\":\"Let\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_4\":{\"title\":\"Contrants\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_5\":{\"title\":\"for...of\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_6\":{\"title\":\"Arrow Functions\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_7\":{\"title\":\"Rest Parameters\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_8\":{\"title\":\"Modules\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_9\":{\"title\":\"WeakSet\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_10\":{\"title\":\"Recap\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"27so9YgeUD31OnnBfBImZEZfBFBaUQ8HhgH1J4O1\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/courses\"}',	'2020-04-21 03:35:04',	'2020-04-21 03:35:04'),
(173,	1,	'admin/courses',	'GET',	'127.0.0.1',	'[]',	'2020-04-21 03:35:04',	'2020-04-21 03:35:04'),
(174,	1,	'admin',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-21 03:35:08',	'2020-04-21 03:35:08'),
(175,	1,	'admin',	'GET',	'103.126.148.18',	'[]',	'2020-04-21 04:43:16',	'2020-04-21 04:43:16'),
(176,	1,	'admin',	'GET',	'103.126.148.18',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-21 04:43:21',	'2020-04-21 04:43:21'),
(177,	1,	'admin/auth/setting',	'GET',	'103.126.148.18',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-21 04:43:26',	'2020-04-21 04:43:26'),
(178,	1,	'admin',	'GET',	'103.126.148.18',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-21 04:43:29',	'2020-04-21 04:43:29'),
(179,	1,	'admin',	'GET',	'103.126.148.18',	'[]',	'2020-04-21 04:43:33',	'2020-04-21 04:43:33'),
(180,	1,	'admin',	'GET',	'103.126.148.19',	'[]',	'2020-04-25 01:46:45',	'2020-04-25 01:46:45'),
(181,	1,	'admin/courses',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-25 01:48:42',	'2020-04-25 01:48:42'),
(182,	1,	'admin/courses/create',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-25 01:48:44',	'2020-04-25 01:48:44'),
(183,	1,	'admin/courses',	'POST',	'103.126.148.19',	'{\"course_name\":\"Bootstrap\",\"content_name\":\"day6\",\"course_id\":\"103\",\"_token\":\"dzHviLLHA2Be7ZYWVaLfsU6wbFa2zNb0B608dEJi\",\"_previous_\":\"http:\\/\\/courses.programming-hero.com\\/admin\\/courses\"}',	'2020-04-25 01:51:54',	'2020-04-25 01:51:54'),
(184,	1,	'admin/courses',	'GET',	'103.126.148.19',	'[]',	'2020-04-25 01:51:54',	'2020-04-25 01:51:54'),
(185,	1,	'admin/courses/4/edit',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-25 01:51:58',	'2020-04-25 01:51:58'),
(186,	1,	'admin/courses/4',	'PUT',	'103.126.148.19',	'{\"course_name\":\"Bootstrap\",\"content_name\":\"day6\",\"course_id\":\"103\",\"planets\":{\"new_1\":{\"title\":\"Bootstrap\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_2\":{\"title\":\"Typography\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_3\":{\"title\":\"Buttons\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_4\":{\"title\":\"Tables\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_5\":{\"title\":\"Form Layout\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_6\":{\"title\":\"Cards\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_7\":{\"title\":\"Images\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_8\":{\"title\":\"Alerts\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_9\":{\"title\":\"Grid Layout\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_10\":{\"title\":\"Navbar\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_11\":{\"title\":\"Recap\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"dzHviLLHA2Be7ZYWVaLfsU6wbFa2zNb0B608dEJi\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/courses.programming-hero.com\\/admin\\/courses\"}',	'2020-04-25 01:54:49',	'2020-04-25 01:54:49'),
(187,	1,	'admin/courses',	'GET',	'103.126.148.19',	'[]',	'2020-04-25 01:54:49',	'2020-04-25 01:54:49'),
(188,	1,	'admin',	'GET',	'103.126.148.19',	'[]',	'2020-04-25 01:55:20',	'2020-04-25 01:55:20'),
(189,	1,	'admin/courses/4/edit',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-25 02:00:22',	'2020-04-25 02:00:22'),
(190,	1,	'admin/courses/4',	'PUT',	'103.126.148.19',	'{\"course_name\":\"Bootstrap\",\"content_name\":\"day6\",\"course_id\":\"103\",\"planets\":{\"34\":{\"title\":\"Introduction\",\"type\":\"Single\",\"id\":\"34\",\"_remove_\":\"0\"},\"35\":{\"title\":\"Typography\",\"type\":\"Single\",\"id\":\"35\",\"_remove_\":\"0\"},\"36\":{\"title\":\"Buttons\",\"type\":\"Single\",\"id\":\"36\",\"_remove_\":\"0\"},\"37\":{\"title\":\"Tables\",\"type\":\"Single\",\"id\":\"37\",\"_remove_\":\"0\"},\"38\":{\"title\":\"Form Layout\",\"type\":\"Single\",\"id\":\"38\",\"_remove_\":\"0\"},\"39\":{\"title\":\"Cards\",\"type\":\"Single\",\"id\":\"39\",\"_remove_\":\"0\"},\"40\":{\"title\":\"Images\",\"type\":\"Single\",\"id\":\"40\",\"_remove_\":\"0\"},\"41\":{\"title\":\"Alerts\",\"type\":\"Single\",\"id\":\"41\",\"_remove_\":\"0\"},\"42\":{\"title\":\"Grid Layout\",\"type\":\"Single\",\"id\":\"42\",\"_remove_\":\"0\"},\"43\":{\"title\":\"Navbar\",\"type\":\"Single\",\"id\":\"43\",\"_remove_\":\"0\"},\"44\":{\"title\":\"Recap\",\"type\":\"Single\",\"id\":\"44\",\"_remove_\":\"0\"}},\"_token\":\"dzHviLLHA2Be7ZYWVaLfsU6wbFa2zNb0B608dEJi\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/courses.programming-hero.com\\/admin\\/courses\"}',	'2020-04-25 02:00:34',	'2020-04-25 02:00:34'),
(191,	1,	'admin/courses',	'GET',	'103.126.148.19',	'[]',	'2020-04-25 02:00:34',	'2020-04-25 02:00:34'),
(192,	1,	'admin',	'GET',	'103.126.148.19',	'[]',	'2020-04-26 01:23:27',	'2020-04-26 01:23:27'),
(193,	1,	'admin/courses',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-26 01:28:22',	'2020-04-26 01:28:22'),
(194,	1,	'admin/courses/create',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-26 01:28:29',	'2020-04-26 01:28:29'),
(195,	1,	'admin/courses',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-26 01:28:41',	'2020-04-26 01:28:41'),
(196,	1,	'admin/courses/create',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-26 01:28:44',	'2020-04-26 01:28:44'),
(197,	1,	'admin/courses',	'POST',	'103.126.148.19',	'{\"course_name\":\"JS Basic\",\"content_name\":\"day7\",\"course_id\":\"104\",\"_token\":\"KjzpHeGWDbZYHpWYUTRUQDRk88rGgDYrSWsluvtw\",\"_previous_\":\"http:\\/\\/courses.programming-hero.com\\/admin\\/courses\"}',	'2020-04-26 01:29:06',	'2020-04-26 01:29:06'),
(198,	1,	'admin/courses',	'GET',	'103.126.148.19',	'[]',	'2020-04-26 01:29:06',	'2020-04-26 01:29:06'),
(199,	1,	'admin/courses/5/edit',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-26 01:44:48',	'2020-04-26 01:44:48'),
(200,	1,	'admin/courses/5/edit',	'GET',	'103.126.148.19',	'[]',	'2020-04-26 01:49:08',	'2020-04-26 01:49:08'),
(201,	1,	'admin/courses',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-26 01:49:23',	'2020-04-26 01:49:23'),
(202,	1,	'admin/courses/5/edit',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-26 01:49:28',	'2020-04-26 01:49:28'),
(203,	1,	'admin/courses/5',	'PUT',	'103.126.148.19',	'{\"course_name\":\"JS Basic\",\"content_name\":\"day7\",\"course_id\":\"104\",\"planets\":{\"new_1\":{\"title\":\"Introduction\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_2\":{\"title\":\"Input and Output\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_3\":{\"title\":\"Variable\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_4\":{\"title\":\"Types of Variable\",\"type\":\"double\",\"id\":null,\"_remove_\":\"0\"},\"new_5\":{\"title\":\"Storing Words(String)\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"1\"},\"new_6\":{\"title\":null,\"type\":\"Single\",\"id\":null,\"_remove_\":\"1\"},\"new_7\":{\"title\":\"Decision Making\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_8\":{\"title\":\"Comments\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_9\":{\"title\":\"Recap\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"KjzpHeGWDbZYHpWYUTRUQDRk88rGgDYrSWsluvtw\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/courses.programming-hero.com\\/admin\\/courses\"}',	'2020-04-26 01:50:59',	'2020-04-26 01:50:59'),
(204,	1,	'admin/courses',	'GET',	'103.126.148.19',	'[]',	'2020-04-26 01:50:59',	'2020-04-26 01:50:59'),
(205,	1,	'admin/planet-contents',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-26 01:51:01',	'2020-04-26 01:51:01'),
(206,	1,	'admin/sub-planets',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-26 01:51:02',	'2020-04-26 01:51:02'),
(207,	1,	'admin/planets',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-26 01:51:11',	'2020-04-26 01:51:11'),
(208,	1,	'admin/planets',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-26 01:51:18',	'2020-04-26 01:51:18'),
(209,	1,	'admin/planets',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\",\"page\":\"2\"}',	'2020-04-26 01:51:27',	'2020-04-26 01:51:27'),
(210,	1,	'admin/planets',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\",\"page\":\"3\"}',	'2020-04-26 01:51:31',	'2020-04-26 01:51:31'),
(211,	1,	'admin',	'GET',	'103.126.148.19',	'[]',	'2020-04-26 01:51:45',	'2020-04-26 01:51:45'),
(212,	1,	'admin/courses',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-26 01:51:49',	'2020-04-26 01:51:49'),
(213,	1,	'admin/planets/48/edit',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-26 01:52:09',	'2020-04-26 01:52:09'),
(214,	1,	'admin/planets/48',	'PUT',	'103.126.148.19',	'{\"content\":null,\"title\":\"Types of Variable\",\"total\":\"0\",\"status\":\"lock\",\"sub_planets\":{\"new_1\":{\"sid\":\"105\",\"total\":\"0\",\"mtitle\":\"Storing Words(String)\",\"id\":null,\"_remove_\":\"0\"},\"new_2\":{\"sid\":\"105\",\"total\":\"0\",\"mtitle\":\"True Or False(Boolean)\",\"id\":null,\"_remove_\":\"0\"},\"new_3\":{\"sid\":\"105\",\"total\":\"0\",\"mtitle\":\"Storing Numbers(val)\",\"id\":null,\"_remove_\":\"0\"},\"new_4\":{\"sid\":\"105\",\"total\":\"0\",\"mtitle\":\"Operations\",\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"KjzpHeGWDbZYHpWYUTRUQDRk88rGgDYrSWsluvtw\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/courses.programming-hero.com\\/admin\\/planets?&page=3\"}',	'2020-04-26 01:53:05',	'2020-04-26 01:53:05'),
(215,	1,	'admin/planets',	'GET',	'103.126.148.19',	'{\"page\":\"3\"}',	'2020-04-26 01:53:06',	'2020-04-26 01:53:06'),
(216,	1,	'admin',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-26 01:53:33',	'2020-04-26 01:53:33'),
(217,	1,	'admin',	'GET',	'103.126.148.17',	'[]',	'2020-04-26 13:59:18',	'2020-04-26 13:59:18'),
(218,	1,	'admin/planets',	'GET',	'103.126.148.17',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-26 13:59:24',	'2020-04-26 13:59:24'),
(219,	1,	'admin/courses',	'GET',	'103.126.148.17',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-26 13:59:28',	'2020-04-26 13:59:28'),
(220,	1,	'admin/courses/3/edit',	'GET',	'103.126.148.17',	'{\"_pjax\":\"#pjax-container\"}',	'2020-04-26 13:59:33',	'2020-04-26 13:59:33'),
(221,	1,	'admin/courses/3',	'PUT',	'103.126.148.17',	'{\"course_name\":\"ES6\",\"content_name\":\"day10\",\"course_id\":\"107\",\"planets\":{\"24\":{\"title\":\"What is ES6?\",\"type\":\"Single\",\"id\":\"24\",\"_remove_\":\"0\"},\"25\":{\"title\":\"Let\",\"type\":\"Single\",\"id\":\"25\",\"_remove_\":\"0\"},\"26\":{\"title\":\"Template Strings\",\"type\":\"Single\",\"id\":\"26\",\"_remove_\":\"0\"},\"27\":{\"title\":\"Contrants\",\"type\":\"Single\",\"id\":\"27\",\"_remove_\":\"0\"},\"28\":{\"title\":\"for...of\",\"type\":\"Single\",\"id\":\"28\",\"_remove_\":\"0\"},\"29\":{\"title\":\"Arrow Functions\",\"type\":\"Single\",\"id\":\"29\",\"_remove_\":\"0\"},\"30\":{\"title\":\"Rest Parameters\",\"type\":\"Single\",\"id\":\"30\",\"_remove_\":\"0\"},\"31\":{\"title\":\"Modules\",\"type\":\"Single\",\"id\":\"31\",\"_remove_\":\"0\"},\"32\":{\"title\":\"WeakSet\",\"type\":\"Single\",\"id\":\"32\",\"_remove_\":\"0\"},\"33\":{\"title\":\"Recap\",\"type\":\"Single\",\"id\":\"33\",\"_remove_\":\"0\"}},\"_token\":\"ki54XkUbkXtgEdysztnmE1wMlyELfWI98WsHkvaf\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/courses.programming-hero.com\\/admin\\/courses\"}',	'2020-04-26 13:59:49',	'2020-04-26 13:59:49'),
(222,	1,	'admin/courses',	'GET',	'103.126.148.17',	'[]',	'2020-04-26 13:59:49',	'2020-04-26 13:59:49'),
(223,	1,	'admin',	'GET',	'103.126.148.19',	'[]',	'2020-06-08 02:48:55',	'2020-06-08 02:48:55'),
(224,	1,	'admin/courses',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-06-08 02:49:10',	'2020-06-08 02:49:10'),
(225,	1,	'admin/courses/create',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-06-08 02:49:18',	'2020-06-08 02:49:18'),
(226,	1,	'admin/courses',	'GET',	'103.126.148.19',	'[]',	'2020-06-08 02:50:34',	'2020-06-08 02:50:34'),
(227,	1,	'admin/courses',	'POST',	'103.126.148.19',	'{\"course_name\":\"Java Basic\",\"content_name\":\"javabs\",\"course_id\":\"108\",\"_token\":\"A4woaFTqP0fbFfQYhSLUQ8oxIUT3O2S8CYE6x3Av\",\"_previous_\":\"http:\\/\\/courses.programming-hero.com\\/admin\\/courses\"}',	'2020-06-08 02:51:12',	'2020-06-08 02:51:12'),
(228,	1,	'admin/courses',	'GET',	'103.126.148.19',	'[]',	'2020-06-08 02:51:12',	'2020-06-08 02:51:12'),
(229,	1,	'admin',	'GET',	'103.126.148.19',	'[]',	'2020-06-08 02:51:24',	'2020-06-08 02:51:24'),
(230,	1,	'admin/courses/6/edit',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-06-08 02:51:49',	'2020-06-08 02:51:49'),
(231,	1,	'admin/courses/6',	'PUT',	'103.126.148.19',	'{\"course_name\":\"Java Basic\",\"content_name\":\"javabs\",\"course_id\":\"108\",\"planets\":{\"new_1\":{\"title\":\"Introduction\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_2\":{\"title\":\"Output\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_3\":{\"title\":\"Variable\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_4\":{\"title\":\"Variable Types\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_5\":{\"title\":\"Data Types\",\"type\":\"double\",\"id\":null,\"_remove_\":\"0\"},\"new_6\":{\"title\":\"Recap\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"A4woaFTqP0fbFfQYhSLUQ8oxIUT3O2S8CYE6x3Av\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/courses.programming-hero.com\\/admin\\/courses\"}',	'2020-06-08 02:56:51',	'2020-06-08 02:56:51'),
(232,	1,	'admin/courses',	'GET',	'103.126.148.19',	'[]',	'2020-06-08 02:56:51',	'2020-06-08 02:56:51'),
(233,	1,	'admin/sub-planets',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-06-08 02:57:24',	'2020-06-08 02:57:24'),
(234,	1,	'admin/planet-contents',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-06-08 02:57:43',	'2020-06-08 02:57:43'),
(235,	1,	'admin/planets',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-06-08 02:57:49',	'2020-06-08 02:57:49'),
(236,	1,	'admin/planets',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\",\"page\":\"3\"}',	'2020-06-08 02:57:55',	'2020-06-08 02:57:55'),
(237,	1,	'admin/planets/56/edit',	'GET',	'103.126.148.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-06-08 02:58:10',	'2020-06-08 02:58:10'),
(238,	1,	'admin/planets/56',	'PUT',	'103.126.148.19',	'{\"content\":null,\"title\":\"Data Types\",\"total\":\"0\",\"status\":\"lock\",\"sub_planets\":{\"new_1\":{\"sid\":\"108\",\"total\":\"0\",\"mtitle\":\"Data Types 1\",\"id\":null,\"_remove_\":\"0\"},\"new_2\":{\"sid\":\"105\",\"total\":\"0\",\"mtitle\":\"Data Types 2\",\"id\":null,\"_remove_\":\"0\"},\"new_3\":{\"sid\":\"105\",\"total\":\"0\",\"mtitle\":\"Data Types 3\",\"id\":null,\"_remove_\":\"0\"},\"new_4\":{\"sid\":\"105\",\"total\":\"0\",\"mtitle\":\"Strings\",\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"A4woaFTqP0fbFfQYhSLUQ8oxIUT3O2S8CYE6x3Av\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/courses.programming-hero.com\\/admin\\/planets?&page=3\"}',	'2020-06-08 02:59:15',	'2020-06-08 02:59:15'),
(239,	1,	'admin/planets',	'GET',	'103.126.148.19',	'{\"page\":\"3\"}',	'2020-06-08 02:59:15',	'2020-06-08 02:59:15'),
(240,	1,	'admin',	'GET',	'103.126.148.17',	'[]',	'2020-06-08 07:37:37',	'2020-06-08 07:37:37'),
(241,	1,	'admin/courses',	'GET',	'103.126.148.17',	'{\"_pjax\":\"#pjax-container\"}',	'2020-06-08 07:41:36',	'2020-06-08 07:41:36'),
(242,	1,	'admin/courses/create',	'GET',	'103.126.148.17',	'{\"_pjax\":\"#pjax-container\"}',	'2020-06-08 07:44:25',	'2020-06-08 07:44:25'),
(243,	1,	'admin/courses',	'GET',	'103.126.148.17',	'{\"_pjax\":\"#pjax-container\"}',	'2020-06-08 07:44:29',	'2020-06-08 07:44:29'),
(244,	1,	'admin/courses/create',	'GET',	'103.126.148.17',	'{\"_pjax\":\"#pjax-container\"}',	'2020-06-08 07:44:33',	'2020-06-08 07:44:33'),
(245,	1,	'admin/courses',	'POST',	'103.126.148.17',	'{\"course_name\":\"Java Fundamentals\",\"content_name\":\"javafs\",\"course_id\":\"109\",\"planets\":{\"new_1\":{\"title\":\"Operators\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_2\":{\"title\":\"Comments\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_3\":{\"title\":\"Conditions\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_4\":{\"title\":\"Arrays\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_5\":{\"title\":\"Loops\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_6\":{\"title\":\"While Loops\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"A4woaFTqP0fbFfQYhSLUQ8oxIUT3O2S8CYE6x3Av\",\"_previous_\":\"http:\\/\\/courses.programming-hero.com\\/admin\\/courses\"}',	'2020-06-08 07:47:43',	'2020-06-08 07:47:43'),
(246,	1,	'admin/courses',	'GET',	'103.126.148.17',	'[]',	'2020-06-08 07:47:44',	'2020-06-08 07:47:44'),
(247,	1,	'admin',	'GET',	'103.126.149.17',	'[]',	'2020-06-10 05:35:06',	'2020-06-10 05:35:06'),
(248,	1,	'admin/courses',	'GET',	'103.126.149.17',	'[]',	'2020-06-10 05:35:11',	'2020-06-10 05:35:11'),
(249,	1,	'admin/courses/create',	'GET',	'103.126.149.17',	'{\"_pjax\":\"#pjax-container\"}',	'2020-06-10 05:35:17',	'2020-06-10 05:35:17'),
(250,	1,	'admin/courses',	'POST',	'103.126.149.17',	'{\"course_name\":\"Java OOP\",\"content_name\":\"javaoop\",\"course_id\":\"110\",\"planets\":{\"new_1\":{\"title\":\"OOP\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_2\":{\"title\":\"Classes\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_3\":{\"title\":\"Constructors\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_4\":{\"title\":\"Objects\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_5\":{\"title\":\"Methods\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_6\":{\"title\":\"Inheritance\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_7\":{\"title\":\"Overriding\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_8\":{\"title\":\"Interface\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_9\":{\"title\":\"Encapsulation\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_10\":{\"title\":\"Polymorphism\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"Jw4vNspiXFEZR78OimiW4oeu5c9LMf5MeVERHv27\",\"_previous_\":\"http:\\/\\/courses.programming-hero.com\\/admin\\/courses\"}',	'2020-06-10 05:37:53',	'2020-06-10 05:37:53'),
(251,	1,	'admin/courses',	'GET',	'103.126.149.17',	'[]',	'2020-06-10 05:37:53',	'2020-06-10 05:37:53'),
(252,	1,	'admin',	'GET',	'103.126.149.19',	'[]',	'2020-06-10 21:21:22',	'2020-06-10 21:21:22'),
(253,	1,	'admin/courses',	'GET',	'103.126.149.19',	'[]',	'2020-06-10 21:21:26',	'2020-06-10 21:21:26'),
(254,	1,	'admin/courses/create',	'GET',	'103.126.149.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-06-10 21:21:29',	'2020-06-10 21:21:29'),
(255,	1,	'admin/courses',	'POST',	'103.126.149.19',	'{\"course_name\":\"Android Basic\",\"content_name\":\"andbs\",\"course_id\":\"111\",\"planets\":{\"new_1\":{\"title\":\"Introduction\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_2\":{\"title\":\"Android Studio\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_3\":{\"title\":\"Emulators\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_4\":{\"title\":\"UI\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_5\":{\"title\":\"Manifest\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_6\":{\"title\":\"Resources\",\"type\":\"double\",\"id\":null,\"_remove_\":\"0\"},\"new_7\":{\"title\":\"Colors.xml\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"1\"},\"new_8\":{\"title\":\"Strings.xml\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"1\"},\"new_9\":{\"title\":\"Gradle\",\"type\":\"double\",\"id\":null,\"_remove_\":\"0\"},\"new_10\":{\"title\":\"App Level Gradle\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"1\"},\"new_11\":{\"title\":\"Project Level Gradle\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"1\"},\"new_12\":{\"title\":null,\"type\":\"Single\",\"id\":null,\"_remove_\":\"1\"}},\"_token\":\"R6IjGLhVaavsvEH0NZxP3Ek0RZiHkrAGeou4Y4Iq\",\"_previous_\":\"http:\\/\\/courses.programming-hero.com\\/admin\\/courses\"}',	'2020-06-10 21:25:41',	'2020-06-10 21:25:41'),
(256,	1,	'admin/courses',	'GET',	'103.126.149.19',	'[]',	'2020-06-10 21:25:41',	'2020-06-10 21:25:41'),
(257,	1,	'admin/planets',	'GET',	'103.126.149.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-06-10 21:26:04',	'2020-06-10 21:26:04'),
(258,	1,	'admin/planets',	'GET',	'103.126.149.19',	'{\"_pjax\":\"#pjax-container\",\"page\":\"2\"}',	'2020-06-10 21:26:26',	'2020-06-10 21:26:26'),
(259,	1,	'admin/planets',	'GET',	'103.126.149.19',	'{\"_pjax\":\"#pjax-container\",\"page\":\"3\"}',	'2020-06-10 21:26:32',	'2020-06-10 21:26:32'),
(260,	1,	'admin/planets',	'GET',	'103.126.149.19',	'{\"_pjax\":\"#pjax-container\",\"page\":\"4\"}',	'2020-06-10 21:26:34',	'2020-06-10 21:26:34'),
(261,	1,	'admin/planets/79/edit',	'GET',	'103.126.149.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-06-10 21:26:42',	'2020-06-10 21:26:42'),
(262,	1,	'admin/planets/79',	'PUT',	'103.126.149.19',	'{\"content\":null,\"title\":\"Resources\",\"total\":\"0\",\"status\":\"lock\",\"sub_planets\":{\"new_1\":{\"sid\":\"111\",\"total\":\"0\",\"mtitle\":\"Folders\",\"id\":null,\"_remove_\":\"0\"},\"new_2\":{\"sid\":\"111\",\"total\":\"0\",\"mtitle\":\"Colors.xml\",\"id\":null,\"_remove_\":\"0\"},\"new_3\":{\"sid\":\"111\",\"total\":\"0\",\"mtitle\":\"Strings.xml\",\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"R6IjGLhVaavsvEH0NZxP3Ek0RZiHkrAGeou4Y4Iq\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/courses.programming-hero.com\\/admin\\/planets?&page=4\"}',	'2020-06-10 21:27:30',	'2020-06-10 21:27:30'),
(263,	1,	'admin/planets',	'GET',	'103.126.149.19',	'{\"page\":\"4\"}',	'2020-06-10 21:27:30',	'2020-06-10 21:27:30'),
(264,	1,	'admin/planets/80/edit',	'GET',	'103.126.149.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-06-10 21:27:36',	'2020-06-10 21:27:36'),
(265,	1,	'admin/planets/80',	'PUT',	'103.126.149.19',	'{\"content\":null,\"title\":\"Gradle\",\"total\":\"0\",\"status\":\"lock\",\"sub_planets\":{\"new_1\":{\"sid\":\"111\",\"total\":\"0\",\"mtitle\":\"Gradle\",\"id\":null,\"_remove_\":\"0\"},\"new_2\":{\"sid\":\"111\",\"total\":\"0\",\"mtitle\":\"App Level Gradle\",\"id\":null,\"_remove_\":\"0\"},\"new_3\":{\"sid\":\"111\",\"total\":\"0\",\"mtitle\":\"Project Level Gradle\",\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"R6IjGLhVaavsvEH0NZxP3Ek0RZiHkrAGeou4Y4Iq\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/courses.programming-hero.com\\/admin\\/planets?&page=4\"}',	'2020-06-10 21:28:18',	'2020-06-10 21:28:18'),
(266,	1,	'admin/planets',	'GET',	'103.126.149.19',	'{\"page\":\"4\"}',	'2020-06-10 21:28:18',	'2020-06-10 21:28:18'),
(267,	1,	'admin',	'GET',	'103.126.149.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-06-10 21:28:28',	'2020-06-10 21:28:28'),
(268,	1,	'admin',	'GET',	'103.126.149.19',	'[]',	'2020-06-10 22:54:12',	'2020-06-10 22:54:12'),
(269,	1,	'admin/courses',	'GET',	'103.126.149.17',	'[]',	'2020-06-10 22:54:16',	'2020-06-10 22:54:16'),
(270,	1,	'admin/courses/create',	'GET',	'103.126.149.17',	'{\"_pjax\":\"#pjax-container\"}',	'2020-06-10 22:54:28',	'2020-06-10 22:54:28'),
(271,	1,	'admin/courses',	'POST',	'103.126.149.19',	'{\"course_name\":\"Android Fundamentals\",\"content_name\":\"andfun\",\"course_id\":\"112\",\"planets\":{\"new_1\":{\"title\":\"Continution\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_2\":{\"title\":\"Comments\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_3\":{\"title\":\"Log\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_4\":{\"title\":\"Activity\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_5\":{\"title\":\"Intents\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_6\":{\"title\":\"Services\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_7\":{\"title\":\"Layouts\",\"type\":\"double\",\"id\":null,\"_remove_\":\"0\"},\"new_8\":{\"title\":\"Views\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"R6IjGLhVaavsvEH0NZxP3Ek0RZiHkrAGeou4Y4Iq\",\"_previous_\":\"http:\\/\\/courses.programming-hero.com\\/admin\\/courses\"}',	'2020-06-10 23:05:13',	'2020-06-10 23:05:13'),
(272,	1,	'admin/courses',	'GET',	'103.126.149.19',	'[]',	'2020-06-10 23:05:14',	'2020-06-10 23:05:14'),
(273,	1,	'admin/planets',	'GET',	'103.126.149.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-06-10 23:05:21',	'2020-06-10 23:05:21'),
(274,	1,	'admin/planets',	'GET',	'103.126.149.19',	'{\"_pjax\":\"#pjax-container\",\"page\":\"5\"}',	'2020-06-10 23:05:24',	'2020-06-10 23:05:24'),
(275,	1,	'admin/planets/87/edit',	'GET',	'103.126.149.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-06-10 23:05:29',	'2020-06-10 23:05:29'),
(276,	1,	'admin/planets/87',	'PUT',	'103.126.149.19',	'{\"content\":null,\"title\":\"Layouts\",\"total\":\"0\",\"status\":\"lock\",\"sub_planets\":{\"new_1\":{\"sid\":\"112\",\"total\":\"0\",\"mtitle\":\"Layouts\",\"id\":null,\"_remove_\":\"0\"},\"new_2\":{\"sid\":\"112\",\"total\":\"0\",\"mtitle\":\"Linear Layout\",\"id\":null,\"_remove_\":\"0\"},\"new_3\":{\"sid\":\"105\",\"total\":\"0\",\"mtitle\":\"Relative Layout\",\"id\":null,\"_remove_\":\"0\"},\"new_4\":{\"sid\":\"105\",\"total\":\"0\",\"mtitle\":\"Constrain Layout\",\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"R6IjGLhVaavsvEH0NZxP3Ek0RZiHkrAGeou4Y4Iq\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/courses.programming-hero.com\\/admin\\/planets?&page=5\"}',	'2020-06-10 23:07:13',	'2020-06-10 23:07:13'),
(277,	1,	'admin/planets',	'GET',	'103.126.149.19',	'{\"page\":\"5\"}',	'2020-06-10 23:07:13',	'2020-06-10 23:07:13'),
(278,	1,	'admin',	'GET',	'103.126.149.19',	'{\"_pjax\":\"#pjax-container\"}',	'2020-06-10 23:07:16',	'2020-06-10 23:07:16'),
(279,	1,	'admin',	'GET',	'103.126.149.17',	'[]',	'2020-06-11 01:00:53',	'2020-06-11 01:00:53'),
(280,	1,	'admin/courses',	'GET',	'103.126.149.21',	'{\"_pjax\":\"#pjax-container\"}',	'2020-06-11 01:00:57',	'2020-06-11 01:00:57'),
(281,	1,	'admin/courses/create',	'GET',	'103.126.149.21',	'{\"_pjax\":\"#pjax-container\"}',	'2020-06-11 01:01:02',	'2020-06-11 01:01:02'),
(282,	1,	'admin/courses',	'POST',	'103.126.149.21',	'{\"course_name\":\"Android Advanced\",\"content_name\":\"andadv\",\"course_id\":\"113\",\"_token\":\"R6IjGLhVaavsvEH0NZxP3Ek0RZiHkrAGeou4Y4Iq\",\"_previous_\":\"http:\\/\\/courses.programming-hero.com\\/admin\\/courses\"}',	'2020-06-11 01:02:29',	'2020-06-11 01:02:29'),
(283,	1,	'admin/courses',	'GET',	'103.126.149.21',	'[]',	'2020-06-11 01:02:29',	'2020-06-11 01:02:29'),
(284,	1,	'admin/courses/11/edit',	'GET',	'103.126.149.21',	'{\"_pjax\":\"#pjax-container\"}',	'2020-06-11 01:02:34',	'2020-06-11 01:02:34'),
(285,	1,	'admin/courses',	'GET',	'103.126.149.21',	'{\"_pjax\":\"#pjax-container\"}',	'2020-06-11 01:02:40',	'2020-06-11 01:02:40'),
(286,	1,	'admin/courses/11/edit',	'GET',	'103.126.149.21',	'{\"_pjax\":\"#pjax-container\"}',	'2020-06-11 01:02:45',	'2020-06-11 01:02:45'),
(287,	1,	'admin/courses/11',	'PUT',	'103.126.149.21',	'{\"course_name\":\"Android Advanced\",\"content_name\":\"andadv\",\"course_id\":\"113\",\"planets\":{\"new_1\":{\"title\":\"Introduction\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_2\":{\"title\":\"Progress Bar\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_3\":{\"title\":\"Fragments\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_4\":{\"title\":\"ViewPager\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_5\":{\"title\":\"TabLayout\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"},\"new_6\":{\"title\":\"Navigation Drawer\",\"type\":\"Single\",\"id\":null,\"_remove_\":\"0\"}},\"_token\":\"R6IjGLhVaavsvEH0NZxP3Ek0RZiHkrAGeou4Y4Iq\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/courses.programming-hero.com\\/admin\\/courses\"}',	'2020-06-11 01:04:00',	'2020-06-11 01:04:00'),
(288,	1,	'admin/courses',	'GET',	'103.126.149.21',	'[]',	'2020-06-11 01:04:00',	'2020-06-11 01:04:00'),
(289,	1,	'admin',	'GET',	'127.0.0.1',	'[]',	'2020-07-14 05:57:32',	'2020-07-14 05:57:32'),
(290,	1,	'admin/courses',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-14 05:57:45',	'2020-07-14 05:57:45'),
(291,	1,	'admin/planets',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-14 05:57:46',	'2020-07-14 05:57:46'),
(292,	1,	'admin/sub-planets',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-14 05:57:48',	'2020-07-14 05:57:48'),
(293,	1,	'admin/planet-contents',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-14 05:57:49',	'2020-07-14 05:57:49'),
(294,	1,	'admin',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 04:41:17',	'2020-07-15 04:41:17'),
(295,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:41:24',	'2020-07-15 04:41:24'),
(296,	1,	'admin/auth/menu',	'POST',	'127.0.0.1',	'{\"parent_id\":\"0\",\"title\":\"Units\",\"icon\":\"fa-bars\",\"uri\":\"\\/admin\\/units\",\"roles\":[\"1\",null],\"permission\":\"*\",\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\"}',	'2020-07-15 04:42:07',	'2020-07-15 04:42:07'),
(297,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 04:42:07',	'2020-07-15 04:42:07'),
(298,	1,	'admin/auth/menu',	'POST',	'127.0.0.1',	'{\"parent_id\":\"0\",\"title\":\"Questions\",\"icon\":\"fa-bars\",\"uri\":\"\\/admin\\/questions\",\"roles\":[\"1\",null],\"permission\":\"*\",\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\"}',	'2020-07-15 04:42:32',	'2020-07-15 04:42:32'),
(299,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 04:42:32',	'2020-07-15 04:42:32'),
(300,	1,	'admin/auth/menu',	'POST',	'127.0.0.1',	'{\"parent_id\":\"0\",\"title\":\"Marks\",\"icon\":\"fa-bars\",\"uri\":\"\\/marks\",\"roles\":[\"1\",null],\"permission\":\"*\",\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\"}',	'2020-07-15 04:42:59',	'2020-07-15 04:42:59'),
(301,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 04:42:59',	'2020-07-15 04:42:59'),
(302,	1,	'admin/auth/menu/12/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:43:02',	'2020-07-15 04:43:02'),
(303,	1,	'admin/auth/menu/12',	'PUT',	'127.0.0.1',	'{\"parent_id\":\"0\",\"title\":\"Units\",\"icon\":\"fa-bars\",\"uri\":\"\\/units\",\"roles\":[\"1\",null],\"permission\":\"*\",\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/auth\\/menu\"}',	'2020-07-15 04:43:12',	'2020-07-15 04:43:12'),
(304,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 04:43:12',	'2020-07-15 04:43:12'),
(305,	1,	'admin/auth/menu/13/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:43:16',	'2020-07-15 04:43:16'),
(306,	1,	'admin/auth/menu/13',	'PUT',	'127.0.0.1',	'{\"parent_id\":\"0\",\"title\":\"Questions\",\"icon\":\"fa-bars\",\"uri\":\"\\/questions\",\"roles\":[\"1\",null],\"permission\":\"*\",\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/auth\\/menu\"}',	'2020-07-15 04:43:24',	'2020-07-15 04:43:24'),
(307,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 04:43:24',	'2020-07-15 04:43:24'),
(308,	1,	'admin',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:43:34',	'2020-07-15 04:43:34'),
(309,	1,	'admin',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 04:43:38',	'2020-07-15 04:43:38'),
(310,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:43:51',	'2020-07-15 04:43:51'),
(311,	1,	'admin/auth/menu',	'POST',	'127.0.0.1',	'{\"parent_id\":\"0\",\"title\":\"Quizes\",\"icon\":\"fa-bars\",\"uri\":null,\"roles\":[null],\"permission\":null,\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\"}',	'2020-07-15 04:44:43',	'2020-07-15 04:44:43'),
(312,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 04:44:43',	'2020-07-15 04:44:43'),
(313,	1,	'admin/auth/menu',	'POST',	'127.0.0.1',	'{\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_order\":\"[{\\\"id\\\":8},{\\\"id\\\":9},{\\\"id\\\":10},{\\\"id\\\":11},{\\\"id\\\":15,\\\"children\\\":[{\\\"id\\\":12},{\\\"id\\\":13},{\\\"id\\\":14}]},{\\\"id\\\":1},{\\\"id\\\":2,\\\"children\\\":[{\\\"id\\\":3},{\\\"id\\\":4},{\\\"id\\\":5},{\\\"id\\\":6},{\\\"id\\\":7}]}]\"}',	'2020-07-15 04:45:18',	'2020-07-15 04:45:18'),
(314,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:45:18',	'2020-07-15 04:45:18'),
(315,	1,	'admin/auth/menu',	'POST',	'127.0.0.1',	'{\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_order\":\"[{\\\"id\\\":1},{\\\"id\\\":8},{\\\"id\\\":9},{\\\"id\\\":10},{\\\"id\\\":11},{\\\"id\\\":15,\\\"children\\\":[{\\\"id\\\":12},{\\\"id\\\":13},{\\\"id\\\":14}]},{\\\"id\\\":2,\\\"children\\\":[{\\\"id\\\":3},{\\\"id\\\":4},{\\\"id\\\":5},{\\\"id\\\":6},{\\\"id\\\":7}]}]\"}',	'2020-07-15 04:45:23',	'2020-07-15 04:45:23'),
(316,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:45:23',	'2020-07-15 04:45:23'),
(317,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 04:45:25',	'2020-07-15 04:45:25'),
(318,	1,	'admin/units',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:45:32',	'2020-07-15 04:45:32'),
(319,	1,	'admin/questions',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:45:40',	'2020-07-15 04:45:40'),
(320,	1,	'admin/marks',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:45:43',	'2020-07-15 04:45:43'),
(321,	1,	'admin/units',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:45:48',	'2020-07-15 04:45:48'),
(322,	1,	'admin/units/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:45:50',	'2020-07-15 04:45:50'),
(323,	1,	'admin/questions',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:45:56',	'2020-07-15 04:45:56'),
(324,	1,	'admin/questions/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:45:57',	'2020-07-15 04:45:57'),
(325,	1,	'admin/marks',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:46:10',	'2020-07-15 04:46:10'),
(326,	1,	'admin/marks/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:46:14',	'2020-07-15 04:46:14'),
(327,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:46:24',	'2020-07-15 04:46:24'),
(328,	1,	'admin/auth/menu',	'POST',	'127.0.0.1',	'{\"parent_id\":\"0\",\"title\":\"Android Courses\",\"icon\":\"fa-android\",\"uri\":null,\"roles\":[null],\"permission\":null,\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\"}',	'2020-07-15 04:46:41',	'2020-07-15 04:46:41'),
(329,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 04:46:41',	'2020-07-15 04:46:41'),
(330,	1,	'admin/auth/menu',	'POST',	'127.0.0.1',	'{\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_order\":\"[{\\\"id\\\":1},{\\\"id\\\":16,\\\"children\\\":[{\\\"id\\\":8},{\\\"id\\\":9},{\\\"id\\\":10},{\\\"id\\\":11}]},{\\\"id\\\":15,\\\"children\\\":[{\\\"id\\\":12},{\\\"id\\\":13},{\\\"id\\\":14}]},{\\\"id\\\":2,\\\"children\\\":[{\\\"id\\\":3},{\\\"id\\\":4},{\\\"id\\\":5},{\\\"id\\\":6},{\\\"id\\\":7}]}]\"}',	'2020-07-15 04:47:11',	'2020-07-15 04:47:11'),
(331,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:47:11',	'2020-07-15 04:47:11'),
(332,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 04:47:14',	'2020-07-15 04:47:14'),
(333,	1,	'admin',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:47:25',	'2020-07-15 04:47:25'),
(334,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:47:46',	'2020-07-15 04:47:46'),
(335,	1,	'admin/auth/menu/12/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:47:50',	'2020-07-15 04:47:50'),
(336,	1,	'admin/auth/menu/12',	'PUT',	'127.0.0.1',	'{\"parent_id\":\"15\",\"title\":\"Units\",\"icon\":\"fa-video-camera\",\"uri\":\"\\/units\",\"roles\":[\"1\",null],\"permission\":\"*\",\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/auth\\/menu\"}',	'2020-07-15 04:48:38',	'2020-07-15 04:48:38'),
(337,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 04:48:38',	'2020-07-15 04:48:38'),
(338,	1,	'admin/auth/menu/13/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:48:44',	'2020-07-15 04:48:44'),
(339,	1,	'admin/auth/menu/13',	'PUT',	'127.0.0.1',	'{\"parent_id\":\"15\",\"title\":\"Questions\",\"icon\":\"fa-question-circle-o\",\"uri\":\"\\/questions\",\"roles\":[\"1\",null],\"permission\":\"*\",\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/auth\\/menu\"}',	'2020-07-15 04:49:00',	'2020-07-15 04:49:00'),
(340,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 04:49:00',	'2020-07-15 04:49:00'),
(341,	1,	'admin/auth/menu/14/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:49:05',	'2020-07-15 04:49:05'),
(342,	1,	'admin/auth/menu/14',	'PUT',	'127.0.0.1',	'{\"parent_id\":\"15\",\"title\":\"Marks\",\"icon\":\"fa-gift\",\"uri\":\"\\/marks\",\"roles\":[\"1\",null],\"permission\":\"*\",\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/auth\\/menu\"}',	'2020-07-15 04:49:20',	'2020-07-15 04:49:20'),
(343,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 04:49:20',	'2020-07-15 04:49:20'),
(344,	1,	'admin/auth/menu',	'POST',	'127.0.0.1',	'{\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_order\":\"[{\\\"id\\\":1},{\\\"id\\\":16,\\\"children\\\":[{\\\"id\\\":8},{\\\"id\\\":9},{\\\"id\\\":10},{\\\"id\\\":11}]},{\\\"id\\\":15,\\\"children\\\":[{\\\"id\\\":12},{\\\"id\\\":13},{\\\"id\\\":14}]},{\\\"id\\\":2,\\\"children\\\":[{\\\"id\\\":3},{\\\"id\\\":4},{\\\"id\\\":5},{\\\"id\\\":6},{\\\"id\\\":7}]}]\"}',	'2020-07-15 04:49:23',	'2020-07-15 04:49:23'),
(345,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:49:23',	'2020-07-15 04:49:23'),
(346,	1,	'admin/auth/menu',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 04:49:25',	'2020-07-15 04:49:25'),
(347,	1,	'admin',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:49:28',	'2020-07-15 04:49:28'),
(348,	1,	'admin/units',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:49:42',	'2020-07-15 04:49:42'),
(349,	1,	'admin/units',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:56:48',	'2020-07-15 04:56:48'),
(350,	1,	'admin/units/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 04:56:50',	'2020-07-15 04:56:50'),
(351,	1,	'admin/units',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:06:36',	'2020-07-15 05:06:36'),
(352,	1,	'admin/units/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:06:38',	'2020-07-15 05:06:38'),
(353,	1,	'admin/units',	'POST',	'127.0.0.1',	'{\"unit_title\":\"Quiz 18.1\",\"questions\":{\"new_1\":{\"isBlank\":\"on\",\"question\":\"What is your name ?\\r\\n[blank]\",\"answer\":\"anwar\",\"id\":null,\"_remove_\":\"0\"}},\"options\":{\"option1\":null,\"option2\":null,\"option3\":null},\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/units\"}',	'2020-07-15 05:07:46',	'2020-07-15 05:07:46'),
(354,	1,	'admin/units/create',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:07:46',	'2020-07-15 05:07:46'),
(355,	1,	'admin/units',	'POST',	'127.0.0.1',	'{\"unit_title\":\"Quiz 18.1\",\"questions\":{\"new___LA_KEY__\":{\"isBlank\":\"off\",\"question\":\"What is your name ?\\r\\n[blank]\",\"answer\":\"anwar\",\"id\":null,\"_remove_\":\"0\"}},\"options\":{\"option1\":null,\"option2\":null,\"option3\":null},\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\"}',	'2020-07-15 05:08:31',	'2020-07-15 05:08:31'),
(356,	1,	'admin/units',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:08:31',	'2020-07-15 05:08:31'),
(357,	1,	'admin/questions',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:08:37',	'2020-07-15 05:08:37'),
(358,	1,	'admin/questions/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:08:54',	'2020-07-15 05:08:54'),
(359,	1,	'admin/units',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:09:09',	'2020-07-15 05:09:09'),
(360,	1,	'admin/units/2/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:09:11',	'2020-07-15 05:09:11'),
(361,	1,	'admin/units/2',	'PUT',	'127.0.0.1',	'{\"unit_title\":\"Quiz 18.1\",\"questions\":{\"1\":{\"isBlank\":\"on\",\"question\":\"What is your name ?\\r\\n[blank]\",\"answer\":\"anwar\",\"id\":\"1\",\"_remove_\":\"0\"}},\"options\":{\"option1\":null,\"option2\":null,\"option3\":null},\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/units\"}',	'2020-07-15 05:09:22',	'2020-07-15 05:09:22'),
(362,	1,	'admin/units',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:09:22',	'2020-07-15 05:09:22'),
(363,	1,	'admin/units/2/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:09:24',	'2020-07-15 05:09:24'),
(364,	1,	'admin/units/2',	'PUT',	'127.0.0.1',	'{\"unit_title\":\"Quiz 18.1\",\"questions\":{\"1\":{\"isBlank\":\"on\",\"question\":\"What is your name ?\\r\\n[blank]\",\"answer\":\"anwar\",\"id\":\"1\",\"_remove_\":\"0\"},\"new_1\":{\"isBlank\":\"off\",\"question\":\"What is the right for print ?\",\"answer\":\"console.log();\",\"id\":null,\"_remove_\":\"0\"}},\"options\":{\"option1\":\"print\",\"option2\":\"console.log();\",\"option3\":\"var_dump()\"},\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/units\"}',	'2020-07-15 05:10:38',	'2020-07-15 05:10:38'),
(365,	1,	'admin/units',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:10:38',	'2020-07-15 05:10:38'),
(366,	1,	'admin/units/2/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:10:41',	'2020-07-15 05:10:41'),
(367,	1,	'admin/units/2',	'PUT',	'127.0.0.1',	'{\"unit_title\":\"Quiz 18.1\",\"questions\":{\"1\":{\"isBlank\":\"on\",\"question\":\"What is your name ?\\r\\n[blank]\",\"answer\":\"anwar\",\"id\":\"1\",\"_remove_\":\"0\"},\"2\":{\"isBlank\":\"off\",\"question\":\"What is the right for print ?\",\"answer\":\"console.log();\",\"id\":\"2\",\"_remove_\":\"0\"}},\"options\":{\"option1\":null,\"option2\":null,\"option3\":null},\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/units\"}',	'2020-07-15 05:12:36',	'2020-07-15 05:12:36'),
(368,	1,	'admin/units',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:12:36',	'2020-07-15 05:12:36'),
(369,	1,	'admin/units/2/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:12:38',	'2020-07-15 05:12:38'),
(370,	1,	'admin/units/2',	'PUT',	'127.0.0.1',	'{\"unit_title\":\"Quiz 18.1\",\"questions\":{\"1\":{\"isBlank\":\"on\",\"question\":\"What is your name ?\\r\\n[blank]\",\"answer\":\"anwar\",\"id\":\"1\",\"_remove_\":\"0\"},\"2\":{\"isBlank\":\"off\",\"question\":\"What is the right for print ?\",\"answer\":\"console.log();\",\"id\":\"2\",\"_remove_\":\"0\"}},\"options\":{\"option1\":\"print\",\"option2\":\"console.log();\",\"option3\":\"printlen()\"},\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/units\"}',	'2020-07-15 05:12:55',	'2020-07-15 05:12:55'),
(371,	1,	'admin/units',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:12:55',	'2020-07-15 05:12:55'),
(372,	1,	'admin/units/2/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:12:58',	'2020-07-15 05:12:58'),
(373,	1,	'admin/questions',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:13:07',	'2020-07-15 05:13:07'),
(374,	1,	'admin/questions/2/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:13:21',	'2020-07-15 05:13:21'),
(375,	1,	'admin/questions/2',	'PUT',	'127.0.0.1',	'{\"isBlank\":\"off\",\"question\":\"What is the right for print ?\",\"options\":{\"option1\":\"test\",\"option2\":\"test\",\"option3\":\"testr\"},\"answer\":\"console.log();\",\"unit_id\":\"2\",\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/questions\"}',	'2020-07-15 05:13:29',	'2020-07-15 05:13:29'),
(376,	1,	'admin/questions',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:13:29',	'2020-07-15 05:13:29'),
(377,	1,	'admin/units',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:13:47',	'2020-07-15 05:13:47'),
(378,	1,	'admin/units/2/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:13:49',	'2020-07-15 05:13:49'),
(379,	1,	'admin/questions',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:14:03',	'2020-07-15 05:14:03'),
(380,	1,	'admin/questions/2/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:14:06',	'2020-07-15 05:14:06'),
(381,	1,	'admin/questions',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:14:29',	'2020-07-15 05:14:29'),
(382,	1,	'admin/questions/2/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:15:35',	'2020-07-15 05:15:35'),
(383,	1,	'admin/questions/2',	'PUT',	'127.0.0.1',	'{\"isBlank\":\"off\",\"question\":\"What is the right for print ?\",\"options\":[\"test\",\"test\",\"testr\"],\"answer\":\"console.log();\",\"unit_id\":\"2\",\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/questions\"}',	'2020-07-15 05:15:39',	'2020-07-15 05:15:39'),
(384,	1,	'admin/questions',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:15:39',	'2020-07-15 05:15:39'),
(385,	1,	'admin/units',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:15:56',	'2020-07-15 05:15:56'),
(386,	1,	'admin/units/2/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:15:58',	'2020-07-15 05:15:58'),
(387,	1,	'admin/units/2',	'PUT',	'127.0.0.1',	'{\"unit_title\":\"Quiz 18.1\",\"questions\":{\"1\":{\"isBlank\":\"on\",\"question\":\"What is your name ?\\r\\n[blank]\",\"answer\":\"anwar\",\"id\":\"1\",\"_remove_\":\"0\"},\"2\":{\"isBlank\":\"off\",\"question\":\"What is the right for print ?\",\"answer\":\"console.log();\",\"id\":\"2\",\"_remove_\":\"0\"}},\"options\":[\"print()\",\"println()\",\"console.log();\"],\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/units\"}',	'2020-07-15 05:16:24',	'2020-07-15 05:16:24'),
(388,	1,	'admin/units',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:16:24',	'2020-07-15 05:16:24'),
(389,	1,	'admin/questions',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:16:30',	'2020-07-15 05:16:30'),
(390,	1,	'admin/questions',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:16:33',	'2020-07-15 05:16:33'),
(391,	1,	'admin/units',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:16:34',	'2020-07-15 05:16:34'),
(392,	1,	'admin/units/2/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:16:36',	'2020-07-15 05:16:36'),
(393,	1,	'admin/questions',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:16:56',	'2020-07-15 05:16:56'),
(394,	1,	'admin/questions/2/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:16:58',	'2020-07-15 05:16:58'),
(395,	1,	'admin/questions/2',	'PUT',	'127.0.0.1',	'{\"isBlank\":\"off\",\"question\":\"What is the right for print ?\",\"options\":[\"anwar\",\"hussen\",\"console.log();\"],\"answer\":\"console.log();\",\"unit_id\":\"2\",\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/questions\"}',	'2020-07-15 05:17:11',	'2020-07-15 05:17:11'),
(396,	1,	'admin/questions',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:17:11',	'2020-07-15 05:17:11'),
(397,	1,	'admin/units',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:17:21',	'2020-07-15 05:17:21'),
(398,	1,	'admin/units/2/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:17:23',	'2020-07-15 05:17:23'),
(399,	1,	'admin/units/2',	'PUT',	'127.0.0.1',	'{\"unit_title\":\"Quiz 18.1\",\"questions\":{\"1\":{\"isBlank\":\"on\",\"question\":\"What is your name ?\\r\\n[blank]\",\"answer\":\"anwar\",\"id\":\"1\",\"_remove_\":\"0\"},\"2\":{\"isBlank\":\"off\",\"question\":\"What is the right for print ?\",\"answer\":\"console.log();\",\"id\":\"2\",\"_remove_\":\"0\"}},\"options\":[\"anwar\",\"hussen anik\",\"console.log();\"],\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/units\"}',	'2020-07-15 05:17:33',	'2020-07-15 05:17:33'),
(400,	1,	'admin/units',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:17:33',	'2020-07-15 05:17:33'),
(401,	1,	'admin/units/2/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:17:35',	'2020-07-15 05:17:35'),
(402,	1,	'admin/units/2',	'PUT',	'127.0.0.1',	'{\"unit_title\":\"Quiz 18.1\",\"questions\":{\"1\":{\"isBlank\":\"on\",\"question\":\"What is your name ?\\r\\n[blank]\",\"answer\":\"anwar\",\"id\":\"1\",\"_remove_\":\"0\"},\"2\":{\"isBlank\":\"off\",\"question\":\"What is the right for print ?\",\"answer\":\"console.log();\",\"id\":\"2\",\"_remove_\":\"0\"},\"new_1\":{\"isBlank\":\"off\",\"question\":\"test quetion\",\"answer\":\"c\",\"id\":null,\"_remove_\":\"0\"}},\"options\":[\"a\",\"b\",\"c\"],\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/units\"}',	'2020-07-15 05:19:51',	'2020-07-15 05:19:51'),
(403,	1,	'admin/units',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:19:52',	'2020-07-15 05:19:52'),
(404,	1,	'admin/units/2/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:19:54',	'2020-07-15 05:19:54'),
(405,	1,	'admin/questions',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:20:03',	'2020-07-15 05:20:03'),
(406,	1,	'admin/questions/3/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:20:12',	'2020-07-15 05:20:12'),
(407,	1,	'admin/questions/3',	'PUT',	'127.0.0.1',	'{\"isBlank\":\"off\",\"question\":\"test quetion\",\"options\":[\"a\",\"b\",\"c\"],\"answer\":\"c\",\"unit_id\":\"2\",\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/questions\"}',	'2020-07-15 05:20:24',	'2020-07-15 05:20:24'),
(408,	1,	'admin/questions',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:20:24',	'2020-07-15 05:20:24'),
(409,	1,	'admin/questions',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:22:51',	'2020-07-15 05:22:51'),
(410,	1,	'admin/units',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:22:59',	'2020-07-15 05:22:59'),
(411,	1,	'admin/units/2/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:23:01',	'2020-07-15 05:23:01'),
(412,	1,	'admin/units/2/edit',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:23:01',	'2020-07-15 05:23:01'),
(413,	1,	'admin/units',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:23:19',	'2020-07-15 05:23:19'),
(414,	1,	'admin/_handle_action_',	'POST',	'127.0.0.1',	'{\"_key\":\"2\",\"_model\":\"App_Unit\",\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_action\":\"Encore_Admin_Grid_Actions_Delete\",\"_input\":\"true\"}',	'2020-07-15 05:23:42',	'2020-07-15 05:23:42'),
(415,	1,	'admin/units',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:23:42',	'2020-07-15 05:23:42'),
(416,	1,	'admin/questions',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:23:47',	'2020-07-15 05:23:47'),
(417,	1,	'admin/units',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:23:48',	'2020-07-15 05:23:48'),
(418,	1,	'admin/units/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:23:50',	'2020-07-15 05:23:50'),
(419,	1,	'admin/units',	'POST',	'127.0.0.1',	'{\"unit_title\":\"Quiz 18.1\",\"questions\":{\"new_1\":{\"isBlank\":\"off\",\"question\":\"Test\",\"answer\":\"c\",\"id\":null,\"_remove_\":\"0\"}},\"options\":{\"values\":[\"a\",\"b\",\"c\"]},\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/units\"}',	'2020-07-15 05:24:12',	'2020-07-15 05:24:12'),
(420,	1,	'admin/units',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:24:12',	'2020-07-15 05:24:12'),
(421,	1,	'admin/units/3/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:24:14',	'2020-07-15 05:24:14'),
(422,	1,	'admin/questions',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:24:32',	'2020-07-15 05:24:32'),
(423,	1,	'admin/questions/4/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:24:35',	'2020-07-15 05:24:35'),
(424,	1,	'admin/questions/4',	'PUT',	'127.0.0.1',	'{\"isBlank\":\"off\",\"question\":\"Test\",\"options\":{\"values\":[\"a\",\"b\",\"c\"]},\"answer\":\"c\",\"unit_id\":\"3\",\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/questions\"}',	'2020-07-15 05:24:48',	'2020-07-15 05:24:48'),
(425,	1,	'admin/questions',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:24:48',	'2020-07-15 05:24:48'),
(426,	1,	'admin/questions/4/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:24:51',	'2020-07-15 05:24:51'),
(427,	1,	'admin/questions/4/edit',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:24:51',	'2020-07-15 05:24:51'),
(428,	1,	'admin/questions',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:25:05',	'2020-07-15 05:25:05'),
(429,	1,	'admin/units',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:25:20',	'2020-07-15 05:25:20'),
(430,	1,	'admin/units/3/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:25:47',	'2020-07-15 05:25:47'),
(431,	1,	'admin/questions',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:25:51',	'2020-07-15 05:25:51'),
(432,	1,	'admin/questions/4/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:25:55',	'2020-07-15 05:25:55'),
(433,	1,	'admin/questions/4',	'PUT',	'127.0.0.1',	'{\"isBlank\":\"off\",\"question\":\"Test\",\"options\":{\"values\":[\"a\",\"d\",\"c\"]},\"answer\":\"c\",\"unit_id\":\"3\",\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/questions\"}',	'2020-07-15 05:26:00',	'2020-07-15 05:26:00'),
(434,	1,	'admin/questions',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:26:00',	'2020-07-15 05:26:00'),
(435,	1,	'admin/units',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:26:04',	'2020-07-15 05:26:04'),
(436,	1,	'admin/units/3/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:26:07',	'2020-07-15 05:26:07'),
(437,	1,	'admin/units/3',	'PUT',	'127.0.0.1',	'{\"unit_title\":\"Quiz 18.1\",\"questions\":{\"4\":{\"isBlank\":\"off\",\"question\":\"Test\",\"answer\":\"c\",\"id\":\"4\",\"_remove_\":\"0\"}},\"options\":{\"values\":[\"a\",\"f\",\"c\"]},\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/units\"}',	'2020-07-15 05:26:13',	'2020-07-15 05:26:13'),
(438,	1,	'admin/units',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:26:13',	'2020-07-15 05:26:13'),
(439,	1,	'admin/units/3/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:26:16',	'2020-07-15 05:26:16'),
(440,	1,	'admin/units/3',	'PUT',	'127.0.0.1',	'{\"unit_title\":\"Quiz 18.1\",\"questions\":{\"4\":{\"isBlank\":\"off\",\"question\":\"Test\",\"answer\":\"c\",\"id\":\"4\",\"_remove_\":\"0\"}},\"options\":{\"values\":[\"a\",\"dd\",\"c\"]},\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/units\"}',	'2020-07-15 05:26:24',	'2020-07-15 05:26:24'),
(441,	1,	'admin/units',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:26:24',	'2020-07-15 05:26:24'),
(442,	1,	'admin/questions',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:26:26',	'2020-07-15 05:26:26'),
(443,	1,	'admin/units',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:26:32',	'2020-07-15 05:26:32'),
(444,	1,	'admin/_handle_action_',	'POST',	'127.0.0.1',	'{\"_key\":\"3\",\"_model\":\"App_Unit\",\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_action\":\"Encore_Admin_Grid_Actions_Delete\",\"_input\":\"true\"}',	'2020-07-15 05:26:35',	'2020-07-15 05:26:35'),
(445,	1,	'admin/units',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:26:36',	'2020-07-15 05:26:36'),
(446,	1,	'admin/units/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:26:38',	'2020-07-15 05:26:38'),
(447,	1,	'admin/units',	'POST',	'127.0.0.1',	'{\"unit_title\":\"Quiz 18.1\",\"questions\":{\"new_1\":{\"isBlank\":\"off\",\"question\":\"dasf\",\"answer\":\"f\",\"id\":null,\"_remove_\":\"0\"}},\"options\":{\"values\":[\"dfsa\",\"d\",\"f\"]},\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/units\"}',	'2020-07-15 05:26:53',	'2020-07-15 05:26:53'),
(448,	1,	'admin/units',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:26:53',	'2020-07-15 05:26:53'),
(449,	1,	'admin/units/4/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:26:55',	'2020-07-15 05:26:55'),
(450,	1,	'admin/questions',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:27:01',	'2020-07-15 05:27:01'),
(451,	1,	'admin/questions/5/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:27:05',	'2020-07-15 05:27:05'),
(452,	1,	'admin/questions/5',	'PUT',	'127.0.0.1',	'{\"isBlank\":\"off\",\"question\":\"dasf\",\"options\":{\"values\":[\"f\",\"d\",\"i\"]},\"answer\":\"f\",\"unit_id\":\"4\",\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/questions\"}',	'2020-07-15 05:27:17',	'2020-07-15 05:27:17'),
(453,	1,	'admin/questions',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:27:17',	'2020-07-15 05:27:17'),
(454,	1,	'admin/units',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:28:47',	'2020-07-15 05:28:47'),
(455,	1,	'admin/units/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:28:48',	'2020-07-15 05:28:48'),
(456,	1,	'admin/units',	'POST',	'127.0.0.1',	'{\"unit_title\":\"Quiz 18.2\",\"questions\":{\"new_1\":{\"isBlank\":\"off\",\"question\":\"dfsa\",\"answer\":\"fff\",\"id\":null,\"_remove_\":\"0\"}},\"options\":{\"values\":[\"dsfa\",\"dsfa\",\"fff\"]},\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/units\"}',	'2020-07-15 05:29:08',	'2020-07-15 05:29:08'),
(457,	1,	'admin/units',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:29:08',	'2020-07-15 05:29:08'),
(458,	1,	'admin/units/5/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:29:12',	'2020-07-15 05:29:12'),
(459,	1,	'admin/questions',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:29:14',	'2020-07-15 05:29:14'),
(460,	1,	'admin/questions/6/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:29:26',	'2020-07-15 05:29:26'),
(461,	1,	'admin/questions/6',	'PUT',	'127.0.0.1',	'{\"isBlank\":\"off\",\"question\":\"dfsa\",\"options\":{\"values\":[\"c\",\"d\",\"f\"]},\"answer\":\"fff\",\"unit_id\":\"5\",\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/questions\"}',	'2020-07-15 05:29:37',	'2020-07-15 05:29:37'),
(462,	1,	'admin/questions',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:29:37',	'2020-07-15 05:29:37'),
(463,	1,	'admin/questions/6/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:33:19',	'2020-07-15 05:33:19'),
(464,	1,	'admin/questions/6',	'PUT',	'127.0.0.1',	'{\"isBlank\":\"on\",\"question\":\"dfsa\",\"options\":{\"values\":[\"c\",\"d\",\"f\"]},\"answer\":\"fff\",\"unit_id\":\"5\",\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/questions\"}',	'2020-07-15 05:33:30',	'2020-07-15 05:33:30'),
(465,	1,	'admin/questions',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:33:30',	'2020-07-15 05:33:30'),
(466,	1,	'admin/units',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:33:38',	'2020-07-15 05:33:38'),
(467,	1,	'admin',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:33:40',	'2020-07-15 05:33:40'),
(468,	1,	'admin',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:37:00',	'2020-07-15 05:37:00'),
(469,	1,	'admin/auth/login',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:51:31',	'2020-07-15 05:51:31'),
(470,	1,	'admin',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 05:51:31',	'2020-07-15 05:51:31'),
(471,	1,	'admin/units',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 05:55:40',	'2020-07-15 05:55:40'),
(472,	1,	'admin/units',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 07:13:48',	'2020-07-15 07:13:48'),
(473,	1,	'admin/units',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 07:36:10',	'2020-07-15 07:36:10'),
(474,	1,	'admin/units/4/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 07:36:13',	'2020-07-15 07:36:13'),
(475,	1,	'admin/units/4',	'PUT',	'127.0.0.1',	'{\"unit_title\":\"Quiz 18.1\",\"questions\":{\"5\":{\"isBlank\":\"off\",\"question\":\"dasf\",\"answer\":\"f\",\"id\":\"5\",\"_remove_\":\"0\"},\"new_1\":{\"isBlank\":\"on\",\"question\":\"What is your name ?\\r\\n[blank]\",\"answer\":\"anwar\",\"id\":null,\"_remove_\":\"0\"},\"new_2\":{\"isBlank\":\"off\",\"question\":\"what is correct answer ?\",\"answer\":null,\"id\":null,\"_remove_\":\"0\"}},\"options\":{\"values\":[\"f\",\"d\",\"i\",null,null,null,null,null,\"yes\",\"no\",\"correct\"]},\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/units\"}',	'2020-07-15 07:37:34',	'2020-07-15 07:37:34'),
(476,	1,	'admin/units/4/edit',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 07:37:34',	'2020-07-15 07:37:34'),
(477,	1,	'admin/units/4/edit',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 07:37:50',	'2020-07-15 07:37:50'),
(478,	1,	'admin/units/4',	'PUT',	'127.0.0.1',	'{\"unit_title\":\"Quiz 18.1\",\"questions\":{\"5\":{\"isBlank\":\"off\",\"question\":\"dasf\",\"answer\":\"f\",\"id\":\"5\",\"_remove_\":\"0\"},\"new_1\":{\"isBlank\":\"off\",\"question\":\"What is correct ?\",\"answer\":\"correct\",\"id\":null,\"_remove_\":\"0\"},\"new_2\":{\"isBlank\":\"on\",\"question\":\"what is your name ?\\r\\n[blank]\",\"answer\":\"anwar\",\"id\":null,\"_remove_\":\"0\"}},\"options\":{\"values\":[\"f\",\"d\",\"i\",null,null,\"correct\",\"yes\",\"no\",null]},\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_method\":\"PUT\"}',	'2020-07-15 07:38:50',	'2020-07-15 07:38:50'),
(479,	1,	'admin/units',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 07:38:50',	'2020-07-15 07:38:50'),
(480,	1,	'admin/units/4/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 07:38:53',	'2020-07-15 07:38:53'),
(481,	1,	'admin/questions',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 07:39:13',	'2020-07-15 07:39:13'),
(482,	1,	'admin/questions/8/edit',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 07:40:24',	'2020-07-15 07:40:24'),
(483,	1,	'admin/questions/8',	'PUT',	'127.0.0.1',	'{\"isBlank\":\"off\",\"question\":\"What is correct ?\",\"options\":{\"values\":[\"yes\",\"no\",\"correct\"]},\"answer\":\"correct\",\"unit_id\":\"4\",\"_token\":\"Nra07K5s0ZL2MMVMMx9sAPuyBeOqA76kX4e0g9J6\",\"_method\":\"PUT\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/questions\"}',	'2020-07-15 07:40:48',	'2020-07-15 07:40:48'),
(484,	1,	'admin/questions',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 07:40:48',	'2020-07-15 07:40:48'),
(485,	1,	'admin/questions',	'GET',	'127.0.0.1',	'[]',	'2020-07-15 08:35:20',	'2020-07-15 08:35:20'),
(486,	1,	'admin',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 09:16:45',	'2020-07-15 09:16:45'),
(487,	1,	'admin',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-15 09:16:46',	'2020-07-15 09:16:46'),
(488,	1,	'admin',	'GET',	'127.0.0.1',	'[]',	'2020-07-16 08:31:35',	'2020-07-16 08:31:35'),
(489,	1,	'admin/questions',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-16 08:31:41',	'2020-07-16 08:31:41'),
(490,	1,	'admin',	'GET',	'127.0.0.1',	'[]',	'2020-07-19 21:55:20',	'2020-07-19 21:55:20'),
(491,	1,	'admin/units',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-19 21:55:25',	'2020-07-19 21:55:25'),
(492,	1,	'admin/units/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-19 21:55:26',	'2020-07-19 21:55:26'),
(493,	1,	'admin/questions',	'GET',	'127.0.0.1',	'[]',	'2020-07-19 22:03:11',	'2020-07-19 22:03:11'),
(494,	1,	'admin/questions',	'GET',	'127.0.0.1',	'{\"unit_id\":\"5\",\"_pjax\":\"#pjax-container\"}',	'2020-07-19 22:03:23',	'2020-07-19 22:03:23'),
(495,	1,	'admin/questions',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\",\"unit_id\":\"4\"}',	'2020-07-19 22:03:27',	'2020-07-19 22:03:27'),
(496,	1,	'admin/units',	'POST',	'127.0.0.1',	'{\"unit_title\":\"Awesome\",\"questions\":{\"new_1\":{\"isBlank\":\"off\",\"question\":\"test\",\"answer\":\"test 2\",\"id\":null,\"_remove_\":\"0\"}},\"options\":{\"values\":[\"test 1\",\"test 2\",\"test 3\"]},\"_token\":\"LCc3F6n1nr52gI5Fo4Jb6RpaQpyADlWHxRaDaiu6\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/units\"}',	'2020-07-19 22:07:38',	'2020-07-19 22:07:38'),
(497,	1,	'admin/units',	'GET',	'127.0.0.1',	'[]',	'2020-07-19 22:10:00',	'2020-07-19 22:10:00'),
(498,	1,	'admin/units/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-19 22:10:03',	'2020-07-19 22:10:03'),
(499,	1,	'admin/questions',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-19 22:10:09',	'2020-07-19 22:10:09'),
(500,	1,	'admin/questions/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-19 22:10:10',	'2020-07-19 22:10:10'),
(501,	1,	'admin/questions',	'POST',	'127.0.0.1',	'{\"isBlank\":\"off\",\"question\":\"awesome\",\"options\":{\"values\":[\"test\",\"next\"]},\"answer\":\"sdaf\",\"unit_id\":\"5\",\"_token\":\"LCc3F6n1nr52gI5Fo4Jb6RpaQpyADlWHxRaDaiu6\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/questions\"}',	'2020-07-19 22:10:25',	'2020-07-19 22:10:25'),
(502,	1,	'admin/units',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-19 22:11:47',	'2020-07-19 22:11:47'),
(503,	1,	'admin/units/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-19 22:11:49',	'2020-07-19 22:11:49'),
(504,	1,	'admin/units',	'POST',	'127.0.0.1',	'{\"unit_title\":\"asdf\",\"questions\":{\"new_1\":{\"isBlank\":\"off\",\"question\":\"adsf\",\"answer\":\"asdf\",\"id\":null,\"_remove_\":\"0\"}},\"questions_options\":{\"values\":[\"sadfsdfa\"]},\"_token\":\"LCc3F6n1nr52gI5Fo4Jb6RpaQpyADlWHxRaDaiu6\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/units\"}',	'2020-07-19 22:12:05',	'2020-07-19 22:12:05'),
(505,	1,	'admin/units',	'GET',	'127.0.0.1',	'[]',	'2020-07-19 22:12:49',	'2020-07-19 22:12:49'),
(506,	1,	'admin/units/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-19 22:12:51',	'2020-07-19 22:12:51'),
(507,	1,	'admin/units',	'POST',	'127.0.0.1',	'{\"unit_title\":\"adsf\",\"questions\":{\"new_1\":{\"isBlank\":\"off\",\"question\":\"asdf\",\"answer\":\"dsaf\",\"id\":null,\"_remove_\":\"0\"}},\"options\":{\"values\":[\"sadf\",\"asdf\"]},\"_token\":\"LCc3F6n1nr52gI5Fo4Jb6RpaQpyADlWHxRaDaiu6\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/units\"}',	'2020-07-19 22:13:01',	'2020-07-19 22:13:01'),
(508,	1,	'admin/units',	'GET',	'127.0.0.1',	'[]',	'2020-07-19 22:18:57',	'2020-07-19 22:18:57'),
(509,	1,	'admin/units/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-19 22:18:59',	'2020-07-19 22:18:59'),
(510,	1,	'admin/units',	'POST',	'127.0.0.1',	'{\"unit_title\":\"Awesome\",\"questions\":{\"new_1\":{\"isBlank\":\"on\",\"question\":\"tewt\",\"answer\":\"awesome\",\"id\":null,\"_remove_\":\"0\"}},\"options\":{\"values\":[\"test1\",\"test 2\",\"test 3\"]},\"_token\":\"LCc3F6n1nr52gI5Fo4Jb6RpaQpyADlWHxRaDaiu6\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/units\"}',	'2020-07-19 22:19:32',	'2020-07-19 22:19:32'),
(511,	1,	'admin/units',	'GET',	'127.0.0.1',	'[]',	'2020-07-19 22:25:35',	'2020-07-19 22:25:35'),
(512,	1,	'admin/units/create',	'GET',	'127.0.0.1',	'{\"_pjax\":\"#pjax-container\"}',	'2020-07-19 22:25:37',	'2020-07-19 22:25:37'),
(513,	1,	'admin/units',	'POST',	'127.0.0.1',	'{\"unit_title\":\"dsfa\",\"questions\":{\"new_1\":{\"isBlank\":\"off\",\"question\":\"dsfa\",\"answer\":\"dsaf\",\"id\":null,\"_remove_\":\"0\"}},\"options\":{\"values\":[\"dsaf\",\"dsaf\"]},\"_token\":\"LCc3F6n1nr52gI5Fo4Jb6RpaQpyADlWHxRaDaiu6\",\"_previous_\":\"http:\\/\\/127.0.0.1:8000\\/admin\\/units\"}',	'2020-07-19 22:25:48',	'2020-07-19 22:25:48'),
(514,	1,	'admin/units',	'GET',	'127.0.0.1',	'[]',	'2020-07-19 22:33:04',	'2020-07-19 22:33:04');

DROP TABLE IF EXISTS `admin_permissions`;
CREATE TABLE `admin_permissions` (
  `id` int unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `slug` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `http_method` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `http_path` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `admin_permissions_name_unique` (`name`),
  UNIQUE KEY `admin_permissions_slug_unique` (`slug`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO `admin_permissions` (`id`, `name`, `slug`, `http_method`, `http_path`, `created_at`, `updated_at`) VALUES
(1,	'All permission',	'*',	'',	'*',	NULL,	NULL),
(2,	'Dashboard',	'dashboard',	'GET',	'/',	NULL,	NULL),
(3,	'Login',	'auth.login',	'',	'/auth/login\r\n/auth/logout',	NULL,	NULL),
(4,	'User setting',	'auth.setting',	'GET,PUT',	'/auth/setting',	NULL,	NULL),
(5,	'Auth management',	'auth.management',	'',	'/auth/roles\r\n/auth/permissions\r\n/auth/menu\r\n/auth/logs',	NULL,	NULL);

DROP TABLE IF EXISTS `admin_role_menu`;
CREATE TABLE `admin_role_menu` (
  `role_id` int NOT NULL,
  `menu_id` int NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  KEY `admin_role_menu_role_id_menu_id_index` (`role_id`,`menu_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO `admin_role_menu` (`role_id`, `menu_id`, `created_at`, `updated_at`) VALUES
(1,	2,	NULL,	NULL),
(1,	8,	NULL,	NULL),
(1,	9,	NULL,	NULL),
(1,	10,	NULL,	NULL),
(1,	11,	NULL,	NULL),
(1,	12,	NULL,	NULL),
(1,	13,	NULL,	NULL),
(1,	14,	NULL,	NULL);

DROP TABLE IF EXISTS `admin_role_permissions`;
CREATE TABLE `admin_role_permissions` (
  `role_id` int NOT NULL,
  `permission_id` int NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  KEY `admin_role_permissions_role_id_permission_id_index` (`role_id`,`permission_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO `admin_role_permissions` (`role_id`, `permission_id`, `created_at`, `updated_at`) VALUES
(1,	1,	NULL,	NULL);

DROP TABLE IF EXISTS `admin_role_users`;
CREATE TABLE `admin_role_users` (
  `role_id` int NOT NULL,
  `user_id` int NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  KEY `admin_role_users_role_id_user_id_index` (`role_id`,`user_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO `admin_role_users` (`role_id`, `user_id`, `created_at`, `updated_at`) VALUES
(1,	1,	NULL,	NULL);

DROP TABLE IF EXISTS `admin_roles`;
CREATE TABLE `admin_roles` (
  `id` int unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `slug` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `admin_roles_name_unique` (`name`),
  UNIQUE KEY `admin_roles_slug_unique` (`slug`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO `admin_roles` (`id`, `name`, `slug`, `created_at`, `updated_at`) VALUES
(1,	'Administrator',	'administrator',	'2020-04-18 00:47:08',	'2020-04-18 00:47:08');

DROP TABLE IF EXISTS `admin_user_permissions`;
CREATE TABLE `admin_user_permissions` (
  `user_id` int NOT NULL,
  `permission_id` int NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  KEY `admin_user_permissions_user_id_permission_id_index` (`user_id`,`permission_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;


DROP TABLE IF EXISTS `admin_users`;
CREATE TABLE `admin_users` (
  `id` int unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(190) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `password` varchar(60) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `avatar` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `remember_token` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `admin_users_username_unique` (`username`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO `admin_users` (`id`, `username`, `password`, `name`, `avatar`, `remember_token`, `created_at`, `updated_at`) VALUES
(1,	'admin',	'$2y$10$YCY8tJGwhpcb195GhcZew.7rMRFKnXGPHcsH5xRpjyYkmBBN9wTVS',	'Administrator',	NULL,	'oY0L7xOxXAbxthAG1aHQCmFDLkoY5xwV4BowL7OOjYd2ZmFrWW4i6DRHhkeq',	'2020-04-18 00:47:08',	'2020-04-18 00:47:08');

DROP TABLE IF EXISTS `courses`;
CREATE TABLE `courses` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT,
  `course_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `course_id` bigint unsigned NOT NULL,
  `content_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO `courses` (`id`, `course_name`, `course_id`, `content_name`, `created_at`, `updated_at`) VALUES
(1,	'Javascript Fundamentals',	105,	'day8',	'2020-04-18 02:56:35',	'2020-04-18 02:56:35'),
(2,	'DOM Manipulation',	106,	'day9',	'2020-04-20 23:18:02',	'2020-04-20 23:18:02'),
(3,	'ES6',	107,	'day10',	'2020-04-21 03:35:04',	'2020-04-21 03:35:04'),
(4,	'Bootstrap',	103,	'day6',	'2020-04-25 01:51:54',	'2020-04-25 01:51:54'),
(5,	'JS Basic',	104,	'day7',	'2020-04-26 01:29:06',	'2020-04-26 01:29:06'),
(6,	'Java Basic',	108,	'javabs',	'2020-06-08 02:51:12',	'2020-06-08 02:51:12'),
(7,	'Java Fundamentals',	109,	'javafs',	'2020-06-08 07:47:43',	'2020-06-08 07:47:43'),
(8,	'Java OOP',	110,	'javaoop',	'2020-06-10 05:37:53',	'2020-06-10 05:37:53'),
(9,	'Android Basic',	111,	'andbs',	'2020-06-10 21:25:41',	'2020-06-10 21:25:41'),
(10,	'Android Fundamentals',	112,	'andfun',	'2020-06-10 23:05:13',	'2020-06-10 23:05:13'),
(11,	'Android Advanced',	113,	'andadv',	'2020-06-11 01:02:29',	'2020-06-11 01:02:29');

DROP TABLE IF EXISTS `failed_jobs`;
CREATE TABLE `failed_jobs` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT,
  `connection` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `queue` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `payload` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `exception` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `failed_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;


DROP TABLE IF EXISTS `marks`;
CREATE TABLE `marks` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT,
  `user_id` int unsigned NOT NULL,
  `marks` int unsigned NOT NULL,
  `correct` int unsigned NOT NULL,
  `wrong` int unsigned NOT NULL,
  `unit_id` bigint unsigned NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `marks_unit_id_foreign` (`unit_id`),
  CONSTRAINT `marks_unit_id_foreign` FOREIGN KEY (`unit_id`) REFERENCES `units` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO `marks` (`id`, `user_id`, `marks`, `correct`, `wrong`, `unit_id`, `created_at`, `updated_at`) VALUES
(2,	2,	3,	3,	0,	4,	'2020-07-16 08:34:52',	'2020-07-16 08:34:52'),
(8,	1,	3,	3,	0,	4,	'2020-07-22 09:01:59',	'2020-07-22 09:01:59');

DROP TABLE IF EXISTS `migrations`;
CREATE TABLE `migrations` (
  `id` int unsigned NOT NULL AUTO_INCREMENT,
  `migration` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `batch` int NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO `migrations` (`id`, `migration`, `batch`) VALUES
(1,	'2014_10_12_000000_create_users_table',	1),
(2,	'2014_10_12_100000_create_password_resets_table',	1),
(3,	'2019_08_19_000000_create_failed_jobs_table',	1),
(4,	'2016_01_04_173148_create_admin_tables',	2),
(11,	'2020_04_18_071732_create_planets_table',	4),
(12,	'2020_04_18_075914_create_sub_planets_table',	4),
(13,	'2020_04_18_080358_create_sub_planet_contents_table',	4),
(14,	'2020_04_18_080407_create_planet_contents_table',	4),
(15,	'2020_04_18_081630_create_quizzes_table',	4),
(16,	'2020_04_18_071254_create_courses_table',	5),
(17,	'2020_07_14_120238_create_units_table',	6),
(18,	'2020_07_14_120311_create_questions_table',	6),
(19,	'2020_07_14_120327_create_marks_table',	6);

DROP TABLE IF EXISTS `password_resets`;
CREATE TABLE `password_resets` (
  `email` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `token` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  KEY `password_resets_email_index` (`email`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;


DROP TABLE IF EXISTS `planet_contents`;
CREATE TABLE `planet_contents` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT,
  `mid` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `bookmark` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `des_01` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `link01` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `des_02` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `link02` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `code` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `output` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `des_03` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `code2` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `qtype` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `finish` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `mark` int DEFAULT NULL,
  `status` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'lock',
  `blankstype` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `blanks` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `quiz` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `planet_id` int unsigned NOT NULL,
  `ptxt` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `mtxt` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO `planet_contents` (`id`, `mid`, `bookmark`, `name`, `des_01`, `link01`, `des_02`, `link02`, `code`, `output`, `des_03`, `code2`, `qtype`, `finish`, `mark`, `status`, `blankstype`, `blanks`, `quiz`, `planet_id`, `ptxt`, `mtxt`, `created_at`, `updated_at`) VALUES
(211,	NULL,	NULL,	'Introduction',	'Bootstrap is like giving powers to CSS.&nbsp;<br />\r\n<br />\r\nYou don&rsquo;t need to write CSS, just say the magical Bootstrap spell and watch the show.<br />\r\n<br />\r\nIsn&#39;t that cool?',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	34,	NULL,	NULL,	'2020-04-25 02:01:55',	'2020-04-25 02:07:57'),
(212,	NULL,	NULL,	'What is Bootstrap?',	'Let&rsquo;s dive into it.&nbsp;<br />\r\nBootstrap is a sleek, intuitive, and powerful, mobile-first front-end framework for faster and easier web development.&nbsp;<br />\r\n<br />\r\nIt uses three simple fundamentals - HTML, CSS and JavaScript, that you already know!',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	34,	NULL,	NULL,	'2020-04-25 02:02:29',	'2020-04-25 02:08:42'),
(213,	NULL,	NULL,	'Why Bootstrap?',	'It is supported by all the popular browsers which consist of Safari, Firefox, Opera, Chrome, and Internet Explorer.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	34,	NULL,	NULL,	'2020-04-25 02:02:47',	'2020-04-25 02:02:47'),
(214,	NULL,	NULL,	'Why Bootstrap?',	'It can be easily mounted onto your website by working with HTML, CSS, and JavaScript.<br />\r\n<br />\r\nIts main focus is on design and layout to fill the needs of mobile and tablet users.&nbsp;<br />\r\n<br />\r\nWant to make your websites responsive? - Bootstrap is one of the possible solutions!',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	34,	NULL,	NULL,	'2020-04-25 02:03:23',	'2020-04-25 02:10:08'),
(215,	NULL,	NULL,	'take',	'Bootstrap is the icing on a cake.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	34,	NULL,	NULL,	'2020-04-25 02:03:44',	'2020-04-25 02:03:44'),
(216,	NULL,	NULL,	'What is Typography?',	'Wondering what it is?&nbsp;<br />\r\n<br />\r\nHINT: You are looking at it right now....<br />\r\n<br />\r\nTypography is the art of text to put it in simple words. We see it in our everyday lives and it is an important tool for communication.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	35,	NULL,	NULL,	'2020-04-25 02:11:08',	'2020-04-25 02:11:08'),
(217,	NULL,	NULL,	'Bootstrap Typography',	'Just like in many other aspects, a website uses a huge amount of typography.&nbsp;<br />\r\n<br />\r\nBootstrap helps to smoothen out those features for developers to create a more suiting style of typography to the webpage.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	35,	NULL,	NULL,	'2020-04-25 02:11:28',	'2020-04-25 02:11:28'),
(218,	NULL,	NULL,	'Typography Types',	'The Bootstrap Typography consists of:\r\n<ol>\r\n	<li>Headings</li>\r\n	<li>Subheadings</li>\r\n	<li>Emphasis</li>\r\n</ol>',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	35,	NULL,	NULL,	'2020-04-25 02:13:02',	'2020-04-25 02:13:02'),
(219,	NULL,	NULL,	'Headings, Subheadings, Emphasis, and Abbreviations',	'All HTML headings from h1 to h6 are supported and styled through Bootstrap.',	NULL,	'',	NULL,	'<h1>Hello User</h1>\r\n<h2>Hello User</h2>\r\n<h3>Hello User</h3>\r\n<h4>Hello User</h4>\r\n<h5>Hello User</h5>\r\n<h6>Hello User</h6>',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	35,	NULL,	NULL,	'2020-04-25 02:13:40',	'2020-04-25 02:13:40'),
(220,	NULL,	NULL,	'Subheadings',	'Inline subheadings are also supported by using the tag <strong>&lt;small&gt;</strong>. You can also add the &ldquo;.small&rdquo; class to your element if you like to.',	NULL,	'',	NULL,	'<h1><small>Hello User</small></h1>\r\n<h2><small>Hello User</small></h2>\r\n<h3><small>Hello User</small></h3>\r\n<h4><small>Hello User</small></h4>\r\n<h5><small>Hello User</small></h5>\r\n<h6><small>Hello User</small></h6>',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	35,	NULL,	NULL,	'2020-04-25 02:14:26',	'2020-04-25 02:14:26'),
(221,	NULL,	NULL,	'Emphasis',	'Emphasizing text is also offered by Bootstrap.&nbsp;<br />\r\n<br />\r\nThis will allow you to set the text to 85% of the size of the parent. Bootstrap also offers a few classes that can be used to provide emphasis on texts.',	NULL,	'',	NULL,	'<p class = “text-left“>Left  Aligned</p>\r\n<p class = “text-center“>Center  Aligned</p>\r\n<p class = “text-right“>Right Aligned</p>\r\n<p class = “text-muted“>Muted</p>\r\n<p class = “text-primary“>Primary Class</p>\r\n<p class = “text-success“>Success Class</p>\r\n<p class = “text-info“>Info Class</p>\r\n<p class = “text-warning“>Warning Class</p>\r\n<p class = “text-danger“>Danger Class</p>',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	35,	NULL,	NULL,	'2020-04-25 02:14:53',	'2020-04-25 02:14:53'),
(222,	NULL,	'hints|Go to the previous slide and look for what class is used.|The answer is text-primary because the .text-primary indicates it is a primary text.|text-primary',	'Quiz',	'Fill in the blank to display a primary emphasis:',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	'printsln',	'{\"soln\":\"text-primary\",\"tf1\":\"&lt;p class = &quot;[blank]&quot;&gt; Primary Class &lt;\\/p&gt;\"}',	NULL,	35,	NULL,	NULL,	'2020-04-25 02:16:54',	'2020-05-03 08:28:45'),
(223,	NULL,	NULL,	'take',	'Use classes to implement different typography.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	35,	NULL,	NULL,	'2020-04-25 02:17:07',	'2020-04-25 02:17:07'),
(224,	NULL,	NULL,	'Bootstrap - Buttons',	'You are using an application and can you imagine it without Buttons? Of course not!&nbsp;<br />\r\n<br />\r\nIt&rsquo;s like a door without a handle and you surely wouldn&#39;t want that. 😅<br />\r\n<br />\r\nButtons provide initial interactivity to your application that is necessary.<br />\r\n<br />\r\nThus, let&rsquo;s learn about Buttons in Bootstrap!',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	36,	NULL,	NULL,	'2020-04-25 02:18:19',	'2020-04-25 02:18:19'),
(225,	NULL,	NULL,	'.btn',	'Let&rsquo;s see what bootstrap can do for you. Just by adding a <strong>btn </strong>class, you can make a significant difference.&nbsp;<br />\r\n<br />\r\nThe .btn class is used to call a normal button to be multi-purposed.',	NULL,	'',	NULL,	'<button type=\"button\" class=\"btn\">Basic</button>\r\n<button type=\"button\" class=\"btn\">Basic</button>',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	36,	NULL,	NULL,	'2020-04-25 02:19:24',	'2020-04-25 02:19:24'),
(226,	NULL,	NULL,	'.btn-default',	'The .btn-default class is used to set a setup to default on a webpage.',	NULL,	'',	NULL,	'<button type=\"button\" class=\"btn btn-default\">Default</button>',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	36,	NULL,	NULL,	'2020-04-25 02:19:53',	'2020-04-25 02:19:53'),
(227,	NULL,	NULL,	'.btn-primary',	'The .btn-primary class is used to show that the button is primary.',	NULL,	'',	NULL,	'<button type=\"button\" class=\"btn btn-primary\">Primary</button>',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	36,	NULL,	NULL,	'2020-04-25 02:20:16',	'2020-04-25 02:20:16'),
(228,	NULL,	NULL,	'.btn-success',	'The .btn-success class is used to present that a button was a success.&nbsp;<br />\r\n&nbsp;<br />\r\nThis can mainly help screen readers.',	NULL,	'',	NULL,	'<button type=\"button\" class=\"btn btn-success\">Success</button>',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	36,	NULL,	NULL,	'2020-04-25 02:20:52',	'2020-04-25 02:20:52'),
(229,	NULL,	NULL,	'.btn-info',	'The .btn-info class shows that the button is used to present information.',	NULL,	'',	NULL,	'<button type=\"button\" class=\"btn btn-info\">Info</button>',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	36,	NULL,	NULL,	'2020-04-25 02:21:09',	'2020-04-25 02:21:09'),
(230,	NULL,	NULL,	'.btn-danger and .btn-warning',	'The <strong>.btn-danger</strong> class and <strong>.btn-warning</strong> is used to show something unexpected or to show a warning message or a link.',	NULL,	'',	NULL,	'<button type=\"button\" class=\"btn btn-warning\">Warning</button>\r\n<button type=\"button\" class=\"btn btn-danger\">Danger</button>',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	36,	NULL,	NULL,	'2020-04-25 02:21:35',	'2020-04-25 02:21:35'),
(231,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\".btn-warning\",\"question\":\"What class do you use to set out a warning button?\",\"code\":null,\"option\":{\"1\":\".button-warning\",\"2\":\".btn-warning\",\"3\":\".btn-danger\"}}',	36,	NULL,	NULL,	'2020-04-25 02:22:04',	'2020-04-25 02:22:04'),
(232,	NULL,	NULL,	'take',	'Use appropriate classes to get required buttons.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	36,	NULL,	NULL,	'2020-04-25 02:22:16',	'2020-04-25 02:22:16'),
(233,	NULL,	NULL,	'Bootstrap - Tables',	'We have learned how to work with a HTML table before.<br />\r\n<br />\r\nLet us refresh your memory!<br />\r\n<br />\r\nIf you have forgotten, we use the &lt;table&gt;, &lt;thead&gt;, &lt;tbody&gt;, &lt;tr&gt;, &lt;td&gt;, &lt;th&gt;, and &lt;caption&gt; tags to create a basic table.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	37,	NULL,	NULL,	'2020-04-25 02:23:29',	'2020-04-25 02:23:29'),
(234,	NULL,	NULL,	'Example',	'In the example below, we can create a table showing some of the best movies and the amount of money they made.',	NULL,	'',	NULL,	'<table style=\"width:100%\">\r\n  <tr>\r\n    <th>Best Movies</th>\r\n    <th>Total Gross</th>\r\n  </tr>\r\n  <tr>\r\n    <td>Snow White and the Seven Dwarfs</td>\r\n    <td>$982 million</td>  \r\n  </tr>\r\n  <tr>\r\n    <td>Titanic</td>\r\n    <td>$1.29 billion</td>\r\n  </tr>\r\n</table>',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	37,	NULL,	NULL,	'2020-04-25 02:23:56',	'2020-04-25 02:23:56'),
(235,	NULL,	NULL,	'More Table Classes',	'Bootstrap offers different classes for tables.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	37,	NULL,	NULL,	'2020-04-25 02:24:12',	'2020-04-25 02:24:12'),
(236,	NULL,	NULL,	'Striped',	'<strong>Striped Table - </strong>The <strong>.table-striped</strong> class will create stripes on rows within the &lt;tbody&gt;.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	37,	NULL,	NULL,	'2020-04-25 02:25:18',	'2020-04-25 02:25:18'),
(237,	NULL,	NULL,	'Bordered',	'<strong>Bordered Table - </strong>The<strong> .table-bordered</strong> class gets you a bordered surrounding for every element and rounded corners around the entire table.',	NULL,	'',	NULL,	'table, th, td {\r\n  border: 1px solid black;\r\n}',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	37,	NULL,	NULL,	'2020-04-25 02:25:48',	'2020-04-25 02:25:48'),
(238,	NULL,	NULL,	'Hover',	'<strong>Hover Table - </strong>The <strong>.table-hover</strong> class adds a light gray background to the rows when the cursor hovers over them.',	NULL,	'',	NULL,	'tr:hover {\r\n          background-color: #ffff99;\r\n}',	NULL,	'These classes will eventually add more detail to the webpage when there is the instance of a table.',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	37,	NULL,	NULL,	'2020-04-25 02:26:25',	'2020-04-25 02:26:25'),
(239,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"False\",\"question\":\"Bootstrap does not offer multiple classes for a table:\",\"code\":null,\"option\":{\"1\":\"True\",\"2\":\"False\",\"3\":\"Maybe\"}}',	37,	NULL,	NULL,	'2020-04-25 02:27:00',	'2020-04-25 02:27:00'),
(240,	NULL,	NULL,	'take',	'Bootstrap helps you create more powerful tables.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	37,	NULL,	NULL,	'2020-04-25 02:27:11',	'2020-04-25 02:27:11'),
(241,	NULL,	NULL,	'Heading : Forms',	'An efficient way through which your users can interact with you?<br />\r\n<br />\r\nYes, you are thinking right - a form.<br />\r\n<br />\r\nAs a human, when we visit a website, if we are interested in getting in touch with the company, the first thing we do is look for a contact form!<br />\r\n<br />\r\nAny website (static, dynamic, e-commerce) is incomplete without a form.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	38,	NULL,	NULL,	'2020-04-25 02:28:02',	'2020-04-25 02:28:02'),
(242,	NULL,	NULL,	'Bootstrap - Form Layout',	'In Bootstrap, there are 3 main types of form layouts:\r\n<ul>\r\n	<li>Vertical Form</li>\r\n	<li>Inline Form</li>\r\n	<li>Horizontal Form</li>\r\n</ul>\r\nWe will create each of those forms and explain what they do.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	38,	NULL,	NULL,	'2020-04-25 02:28:48',	'2020-04-25 02:28:48'),
(243,	NULL,	NULL,	'Vertical Form',	'Think of the normal forms, such as the Netflix login form &mdash; that&rsquo;s a Vertical Form.<br />\r\nThe basic form structure is the Vertical Form. It is the default type used automatically by Bootstrap.&nbsp;<br />\r\n<br />\r\nThe table receives automatic, individual, and global styling. To create one:\r\n<ul>\r\n	<li>Add a role &ldquo;form&rdquo; to the parent &lt;form&gt; tag.</li>\r\n	<li>Wrap labels in a &lt;div&gt; with class .form-group. This deals with optimum spacing.</li>\r\n	<li>Add the class .form-control to all textual &lt;input&gt;, &lt;textarea&gt;, and &lt;select&gt; tags.</li>\r\n</ul>',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	38,	NULL,	NULL,	'2020-04-25 02:29:45',	'2020-04-25 02:29:45'),
(244,	NULL,	NULL,	'Example',	'Let&rsquo;s create a form for entering our email and password, then submitting it.',	NULL,	'',	NULL,	'<form action=\"/action_page.php\">\n  <div class=\"form-group\">\n    <label for=\"email\">Email address:</label>\n    <input type=\"email\" class=\"form-control\" id=\"email\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"pwd\">Password:</label>\n    <input type=\"password\" class=\"form-control\" id=\"pwd\">\n  </div>\n  <div class=\"checkbox\">\n    <label><input type=\"checkbox\"> Remember me</label>\n  </div>\n  <button type=\"submit\" class=\"btn btn-default\">Submit</button>\n</form>',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	38,	NULL,	NULL,	'2020-04-25 02:30:10',	'2020-04-27 05:54:28'),
(245,	NULL,	NULL,	'Inline Form',	'Think of the Facebook login form! At the top right&hellip;<br />\r\n<br />\r\nGot it? That&rsquo;s what inline form looks like!<br />\r\n<br />\r\nIn creating an Inline Form, all elements are inlined, left aligned and labels are alongside. So, add the class .form-inline to the &lt;form&gt; tag to create one.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	38,	NULL,	NULL,	'2020-04-25 02:30:37',	'2020-04-25 02:30:37'),
(246,	NULL,	NULL,	'Example',	'Below we have created an inline form using the .form-inline class.',	NULL,	'',	NULL,	'<form class=\"form-inline\" action=\"/action_page.php\">\r\n  <div class=\"form-group\">\r\n    <label for=\"email\">Email address:</label>\r\n    <input type=\"email\" class=\"form-control\" id=\"email\">\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"pwd\">Password:</label>\r\n    <input type=\"password\" class=\"form-control\" id=\"pwd\">\r\n  </div>\r\n  <div class=\"checkbox\">\r\n    <label><input type=\"checkbox\"> Remember me</label>\r\n  </div>\r\n  <button type=\"submit\" class=\"btn btn-default\">Submit</button>\r\n</form>',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	38,	NULL,	NULL,	'2020-04-25 02:30:55',	'2020-04-25 02:30:55'),
(247,	NULL,	NULL,	'Horizontal Form',	'Go back to the vertical form. Now try and bring the labels and text fields horizontal to each other.<br />\r\n<br />\r\nCongrats! That is how a horizontal form looks.<br />\r\n<br />\r\nHorizontal Forms stands out the most from the other two. They have a good deal of markup and stand out in the presentation of the form.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	38,	NULL,	'To create a Horizontal Form, you have to:\r\n<ul>\r\n	<li>Add the class .form-horizontal to the &lt;form&gt; tag.</li>\r\n	<li>Wrap labels and &lt;div&gt; with the class .form-group.</li>\r\n	<li>Add the class .control-label to the labels.</li>\r\n</ul>',	'2020-04-25 02:31:47',	'2020-04-25 02:31:47'),
(248,	NULL,	NULL,	'Example',	'We can create a form for an email and password using a horizontal form.',	NULL,	'',	NULL,	'<form class=\"form-horizontal\" action=\"/action_page.php\">\r\n  <div class=\"form-group\">\r\n    <label class=\"control-label col-sm-2\" for=\"email\">Email:</label>\r\n    <div class=\"col-sm-10\">\r\n      <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Enter email\">\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label class=\"control-label col-sm-2\" for=\"pwd\">Password:</label>\r\n    <div class=\"col-sm-10\">\r\n      <input type=\"password\" class=\"form-control\" id=\"pwd\" placeholder=\"Enter password\">\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <div class=\"col-sm-offset-2 col-sm-10\">\r\n      <div class=\"checkbox\">\r\n        <label><input type=\"checkbox\"> Remember me</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <div class=\"col-sm-offset-2 col-sm-10\">\r\n      <button type=\"submit\" class=\"btn btn-default\">Submit</button>\r\n    </div>\r\n  </div>\r\n</form>',	'true',	'Now you know how to choose between the layouts of forms, their differences, and how to create them.',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	38,	NULL,	NULL,	'2020-04-25 02:33:20',	'2020-04-25 02:33:20'),
(249,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"control-label\",\"question\":\"What class do you use to create a horizontal form?\",\"code\":null,\"option\":{\"1\":\"form\",\"2\":\"form-group\",\"3\":\"control-label\"}}',	38,	NULL,	NULL,	'2020-04-25 02:33:52',	'2020-04-25 02:33:52'),
(250,	NULL,	NULL,	'take',	'Use a form to collect data from the users.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	38,	NULL,	NULL,	'2020-04-25 02:34:11',	'2020-04-25 02:34:11'),
(251,	NULL,	NULL,	'Introduction',	'Making a good UI should be your aim as a front end web developer!<br /><br />Otherwise your Dad won&rsquo;t be happy with you 😢<br /><br />But, tell him you are about to learn something really interesting and he won&rsquo;t have any complaints from you! 😁<br />And, Cards come in handy to do so&hellip;<br /><br />Think of video streaming sites such as Netflix. They use cards to show and represent various movies and more.&nbsp;<br /><br />Think of various ecommerce sites...they use cards to list their products.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	39,	NULL,	NULL,	'2020-04-25 07:33:43',	'2020-04-25 07:33:43'),
(252,	NULL,	NULL,	'Cards',	'Does it look like the cards that we play with? No!<br /><br />A card in Bootstrap is a bordered box with some padding around its content. It includes options for headers, footers, content, colors, etc.<br /><br />Let&rsquo;s see how we can create them&hellip;',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	39,	NULL,	NULL,	'2020-04-25 07:34:10',	'2020-04-25 07:34:10'),
(253,	NULL,	NULL,	'Classes',	'There are 2 classes we can use to create a card in bootstrap.<br /><br />A basic card is created with the <strong>.card </strong>class, and content inside the card has a <strong>.card-body</strong> class. We will see the usage of it on the next slide.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	39,	NULL,	NULL,	'2020-04-25 07:34:34',	'2020-04-25 07:34:34'),
(254,	NULL,	NULL,	'Syntax for Cards',	'Below is the syntax or structure you will use to create a card:',	NULL,	'',	NULL,	'<div class=\"card\">\n  <div class=\"card-body\">Basic card</div>\n</div>',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	39,	NULL,	NULL,	'2020-04-25 07:35:16',	'2020-04-25 07:35:16'),
(255,	NULL,	NULL,	'Headers and Footers',	'You can also add headers and footers for your card to store other types of information.<br /><br />The <strong>.card-heade</strong>r class adds a heading to the card and the <strong>.card-footer</strong> class adds a footer to the card.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	39,	NULL,	NULL,	'2020-04-25 07:35:38',	'2020-04-25 07:35:38'),
(256,	NULL,	NULL,	'Syntax for Headers and Footers',	'Below is the syntax for creating a simple header and footer for your card:',	NULL,	'',	NULL,	'<div class=\"card\">\n  <div class=\"card-header\">Header</div>\n  <div class=\"card-body\">Content</div>\n  <div class=\"card-footer\">Footer</div>\n</div>',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	39,	NULL,	NULL,	'2020-04-25 07:35:58',	'2020-04-25 07:35:58'),
(257,	NULL,	NULL,	'Contextual Cards',	'You can also use the contextual classes from buttons, alerts, etc, to create a card.&nbsp;<br /><br />To add a background color the card, use contextual classes (.bg-primary, .bg-success, .bg-info, .bg-warning, .bg-danger, .bg-secondary, .bg-dark and .bg-light).',	NULL,	'',	NULL,	'<div class=\"container\">\n  <h2>Cards with Contextual Classes</h2>\n  <div class=\"card\">\n    <div class=\"card-body\">Basic card</div>\n  </div>\n  <br>\n  <div class=\"card bg-primary text-white\">\n    <div class=\"card-body\">Primary card</div>\n  </div>\n  <br>\n  <div class=\"card bg-success text-white\">\n    <div class=\"card-body\">Success card</div>\n  </div>\n  <br>\n  <div class=\"card bg-info text-white\">\n    <div class=\"card-body\">Info card</div>\n  </div>\n  <br>\n  <div class=\"card bg-warning text-white\">\n    <div class=\"card-body\">Warning card</div>\n  </div>\n  <br>\n  <div class=\"card bg-danger text-white\">\n    <div class=\"card-body\">Danger card</div>\n  </div>\n  <br>\n  <div class=\"card bg-secondary text-white\">\n    <div class=\"card-body\">Secondary card</div>\n  </div>\n  <br>\n  <div class=\"card bg-dark text-white\">\n    <div class=\"card-body\">Dark card</div>\n  </div>\n  <br>\n  <div class=\"card bg-light text-dark\">\n    <div class=\"card-body\">Light card</div>\n  </div>\n</div>',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	39,	NULL,	NULL,	'2020-04-25 07:36:29',	'2020-04-25 07:36:29'),
(258,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"All of the above\",\"question\":\"Which of the following are other features of cards?\",\"code\":null,\"option\":{\"1\":\"Contextual Cards\",\"2\":\"Cards with Headers and Footer\",\"3\":\"All of the above\"}}',	39,	NULL,	NULL,	'2020-04-25 07:37:01',	'2020-04-25 07:37:01'),
(259,	NULL,	NULL,	'take',	'To create a card, use the .card and .card-body classes.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	39,	NULL,	NULL,	'2020-04-25 07:37:10',	'2020-04-25 07:37:10'),
(260,	NULL,	NULL,	'Bootstrap - Images',	'Who doesn&rsquo;t want to look pretty?<br /><br />You want to be then why wouldn&rsquo;t your site wish the same?<br /><br />Images are the best makeup that can make any site beautiful&hellip;<br /><br />This chapter will be a short one. Bootstrap supports images. We will go over the types.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	40,	NULL,	NULL,	'2020-04-25 07:37:54',	'2020-04-25 07:37:54'),
(261,	NULL,	NULL,	'Types',	'It provides 3 classes that can be used to apply different styles to images.<ul>	<li>.img-rounded</li>	<li>.img-circle</li>	<li>.img-thumbnail</li></ul>',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	40,	NULL,	NULL,	'2020-04-25 07:38:06',	'2020-04-25 07:38:06'),
(262,	NULL,	NULL,	'.img-rounded',	'<strong><font color=\"#078ef9\">.</font></strong>img-rounded - adds rounded corners or border-radius:6px',	NULL,	'',	NULL,	'<img src=\"https://i.ibb.co/2MTtvGt/created-with-a-mobile-phone.jpg\" class=\"img-rounded\" width=\"80%\">',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	40,	NULL,	NULL,	'2020-04-25 07:39:02',	'2020-05-03 09:25:40'),
(263,	NULL,	NULL,	'.img-circle',	'.img-circle - makes the entire image rounded with a border-radius:500px',	NULL,	'',	NULL,	'<img src=\"https://i.ibb.co/2MTtvGt/created-with-a-mobile-phone.jpg\" class=\"img-circle\" width=\"75%\">',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	40,	NULL,	NULL,	'2020-04-25 07:39:37',	'2020-05-03 09:25:55'),
(264,	NULL,	NULL,	'.img-thumbnail',	'.img-thumbnail - adds padding and a gray border.',	NULL,	'',	NULL,	'<img src=\"https://i.ibb.co/2MTtvGt/created-with-a-mobile-phone.jpg\" class=\"img-thumbnail\" width=\"75%\">',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	40,	NULL,	NULL,	'2020-04-25 07:40:18',	'2020-05-03 09:26:13'),
(265,	NULL,	'hints | Glance through the previous slides to get some help. | The class .img-circle is used to turn the image borders to 500px radius. | img-circle',	'Quiz',	'Fill in the blank:',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	'printsln',	'{\"soln\":\"img-circle\",\"tf1\":\"&lt;img src = &ldquo;https:\\/\\/bit.ly\\/39G6ZWI&rdquo; class=&ldquo;[blank]&rdquo;&gt;\"}',	NULL,	40,	NULL,	NULL,	'2020-04-25 07:41:53',	'2020-04-25 07:41:53'),
(266,	NULL,	NULL,	'take',	'The .img-circle class class will help in creating a profile picture.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	40,	NULL,	NULL,	'2020-04-25 07:42:03',	'2020-04-25 07:42:03'),
(267,	NULL,	NULL,	'Bootstrap Alerts',	'Your websites should look alive! Don&rsquo;t create dead sites&hellip;<br /><br />We don&rsquo;t have enough graveyards left now for dead sites!<br /><br />It is necessary to give alerts to users for their actions, in return enhance the user experience.<br /><br />There are 4 alert classes to display alert messages.&nbsp;<br /><br />These each help screen readers in their own ways and style them to help users better understand the message.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	41,	NULL,	NULL,	'2020-04-25 07:43:17',	'2020-04-25 07:43:17'),
(268,	NULL,	NULL,	'Types',	'They are:<br /><br />.alert-success,&nbsp;<br />.alert-info,&nbsp;<br />.alert-warning, and&nbsp;<br />.alert-danger<br /><br />By now you know what success, info, warning, and alert terms mean.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	41,	NULL,	NULL,	'2020-04-25 07:43:52',	'2020-04-25 07:43:52'),
(269,	NULL,	NULL,	'.alert-success',	'Indicates success as an alert.',	NULL,	'',	NULL,	'<div class=“alert alert-success”>Success!</div>',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	41,	NULL,	NULL,	'2020-04-25 07:44:20',	'2020-04-25 07:44:20'),
(270,	NULL,	NULL,	'.alert-info',	'Indicates alert for information or upcoming information.',	NULL,	'',	NULL,	'<div class=“alert alert-info”>Info!</div>',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	41,	NULL,	NULL,	'2020-04-25 07:44:49',	'2020-04-25 07:44:49'),
(271,	NULL,	NULL,	'.alert-warning',	'Indicates an alert that gives warning to an event or action.',	NULL,	'',	NULL,	'<div class=“alert alert-warning”>Warning!</div>',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	41,	NULL,	NULL,	'2020-04-25 07:45:18',	'2020-04-25 07:45:18'),
(272,	NULL,	NULL,	'.alert-danger',	'Indicates an alert that gives danger to an event or action.',	NULL,	'',	NULL,	'<div class=“alert alert-danger”>Danger!</div>',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	41,	NULL,	NULL,	'2020-04-25 07:45:52',	'2020-04-25 07:45:52'),
(273,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"Screen readers\",\"question\":\"Alerts are helpful for,\",\"code\":null,\"option\":{\"1\":\"Users\",\"2\":\"Screen writers\",\"3\":\"Screen readers\"}}',	41,	NULL,	NULL,	'2020-04-25 07:46:22',	'2020-04-25 07:46:22'),
(274,	NULL,	NULL,	'take',	'Alert classes and properties help screen readers.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	41,	NULL,	NULL,	'2020-04-25 07:46:31',	'2020-04-25 07:46:31'),
(275,	NULL,	NULL,	'Introduction',	'Let&rsquo;s learn about the grid system!<br /><br />It is something that will give you the utmost Bootstrap power!<br /><br />The power of responsiveness&hellip;<br /><br />In this lesson, we will cover how the grid system for Bootstrap works.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	42,	NULL,	NULL,	'2020-04-25 07:50:54',	'2020-04-25 07:50:54'),
(276,	NULL,	NULL,	'Grid System',	'The grid structure from Bootstrap makes up to 12 columns on the document.<br /><br />If you don&#39;t want to use all 12 columns individually, you can combine the columns to create larger columns together.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	42,	NULL,	NULL,	'2020-04-25 09:48:32',	'2020-04-25 09:48:32'),
(277,	NULL,	NULL,	'Responsiveness',	'The grid structure of Bootstrap is flexible and the columns can rearrange based on the screen size.&nbsp;<br /><br />It could appear easier on a wide screen with the information arranged in three columns, but on a tiny screen it might be easier if the information elements were placed on top of each other.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	42,	NULL,	NULL,	'2020-04-25 09:48:51',	'2020-04-25 09:48:51'),
(278,	NULL,	NULL,	'Classes',	'The Bootstrap grid framework has four classes:&nbsp;<ul>	<li><strong>xs</strong> (for phones-screens smaller than 768px wide)&nbsp;</li>	<li><strong>sm</strong> (for tablets-screens greater than or equivalent to 768px wide)&nbsp;</li>	<li><strong>md</strong> (for tiny laptops-screens equal to or greater than 992px wide)&nbsp;</li>	<li><strong>lg</strong> (for laptops and desktops-screens equal to or greater than 1200px wide)</li></ul>',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	42,	NULL,	NULL,	'2020-04-25 09:49:21',	'2020-04-25 09:49:21'),
(279,	NULL,	NULL,	'Syntax',	'The following is a basic structure of a Bootstrap grid:',	NULL,	'',	NULL,	'<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-*-*\"></div>\n    <div class=\"col-*-*\"></div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-*-*\"></div>\n    <div class=\"col-*-*\"></div>\n    <div class=\"col-*-*\"></div>\n  </div>\n  <div class=\"row\">\n    Content Here\n  </div>\n</div>',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	42,	'So, build a container (&lt; div class=&quot;container &quot;&gt;) to construct the style that you like. Then, build a row using (&lt; div class=&quot;row &quot;&gt;). After that, apply the required number of columns (tags with valid groups of.col-*- *). Notice that for each section, numbers in the .col-*- *(like 3, 7, 2) will always add up to 12.',	NULL,	'2020-04-25 09:50:05',	'2020-04-25 09:50:05'),
(280,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"Because elements might get squashed up in smaller screens.\",\"question\":\"Why would you want to use different properties for different screen sizes?\",\"code\":null,\"option\":{\"1\":\"Because why not.\",\"2\":\"Because elements might get squashed up in smaller screens.\",\"3\":\"Because elements will not execute.\"}}',	42,	NULL,	NULL,	'2020-04-25 09:50:45',	'2020-04-25 09:50:45'),
(281,	NULL,	NULL,	'take',	'Use the different classes to be suitable for specific screen sizes.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	42,	NULL,	NULL,	'2020-04-25 09:50:54',	'2020-04-25 09:50:54'),
(284,	NULL,	NULL,	'Introduction',	'What is the first thing that you look at a website for?<br /><br />Or what helps you to use multiple pages and link them at a place so that users can navigate through your site easily?<br /><br />Is it a compass? Of course not&hellip;<br /><br />It&rsquo;s Navigation bars - an important aspect of any website.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	43,	NULL,	NULL,	'2020-04-25 09:53:25',	'2020-04-25 09:53:25'),
(285,	NULL,	NULL,	'Navbar',	'The navigation bar is the navigation header that is located at the top of the page.&nbsp;<br /><br />With Bootstrap, the navigation bar can be extended or collapsed depending on the size of the screen.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	43,	NULL,	NULL,	'2020-04-25 09:53:45',	'2020-04-25 09:53:45'),
(286,	NULL,	NULL,	'Creating A Navbar',	'The standard navigation bar is created with &lt;nav class=&quot;navbar-default&quot;&gt;.<br /><br />The following example illustrates how to attach a navigation bar to the top of your page:',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	43,	NULL,	NULL,	'2020-04-25 09:55:14',	'2020-04-25 09:55:14'),
(287,	NULL,	NULL,	'Inverted Navbar',	'If you don&#39;t like the look of the default navigation bar, Bootstrap offers an alternate, black navigation bar.<br /><br />Just change the .navbar-default class into .<strong>navbar-inverse</strong>. This inverts the colors.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	43,	NULL,	NULL,	'2020-04-25 09:55:42',	'2020-04-25 09:55:42'),
(289,	NULL,	NULL,	'Example',	'Below is the code that demonstrates inverted navbars:',	NULL,	'',	NULL,	'<html lang=\"en\">\n<head>\n  <title>Bootstrap Example</title>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n</head>\n<body>\n\n<nav class=\"navbar navbar-inverse\">\n  <div class=\"container-fluid\">\n    <div class=\"navbar-header\">\n      <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\n    </div>\n    <ul class=\"nav navbar-nav\">\n      <li class=\"active\"><a href=\"#\">Home</a></li>\n      <li><a href=\"#\">Page 1</a></li>\n      <li><a href=\"#\">Page 2</a></li>\n      <li><a href=\"#\">Page 3</a></li>\n    </ul>\n  </div>\n</nav>\n  \n<div class=\"container\">\n  <h3>Inverted Navbar</h3>\n  <p>An inverted navbar is black instead of gray.</p>\n</div>\n\n</body>\n</html>',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	43,	NULL,	NULL,	'2020-04-25 10:06:26',	'2020-04-25 10:10:52'),
(291,	NULL,	NULL,	'Navbar Drop Down',	'Dropdown menus may also be kept in navigation bars.<br /><br />The following illustration applies a drop-down menu to the &quot;Page 1&quot; button:',	NULL,	'',	NULL,	'<html lang=\"en\">\n<head>\n  <title>Bootstrap Example</title>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n</head>\n<body>\n\n<nav class=\"navbar navbar-inverse\">\n  <div class=\"container-fluid\">\n    <div class=\"navbar-header\">\n      <a class=\"navbar-brand\" href=\"#\">WebSiteName</a>\n    </div>\n    <ul class=\"nav navbar-nav\">\n      <li class=\"active\"><a href=\"#\">Home</a></li>\n      <li class=\"dropdown\"><a class=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">Page 1 <span class=\"caret\"></span></a>\n        <ul class=\"dropdown-menu\">\n          <li><a href=\"#\">Page 1-1</a></li>\n          <li><a href=\"#\">Page 1-2</a></li>\n          <li><a href=\"#\">Page 1-3</a></li>\n        </ul>\n      </li>\n      <li><a href=\"#\">Page 2</a></li>\n      <li><a href=\"#\">Page 3</a></li>\n    </ul>\n  </div>\n</nav>\n  \n<div class=\"container\">\n  <h3>Navbar With Dropdown</h3>\n  <p>This example adds a dropdown menu for the \"Page 1\" button in the navigation bar.</p>\n</div>\n\n</body>\n</html>',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	43,	NULL,	NULL,	'2020-04-25 10:08:29',	'2020-04-25 10:08:29'),
(292,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\".navbar-inverse\",\"question\":\"Which class of the navbar changes it to black?\",\"code\":null,\"option\":{\"1\":\".navbar-default\",\"2\":\".navbar-inverse\",\"3\":\".navbar-black\"}}',	43,	NULL,	NULL,	'2020-04-25 10:08:58',	'2020-04-25 10:08:58'),
(293,	NULL,	NULL,	'take',	'Use navbar-default to create a navigation bar.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	43,	NULL,	NULL,	'2020-04-25 10:09:07',	'2020-04-25 10:09:07'),
(294,	NULL,	NULL,	'Completionist',	'Congratulations! You have completed the Bootstrap Galaxy. We learned a lot about the understanding of Bootstrap in different aspects, and how it works with HTML, CSS, and JavaScript.<br /><br />Now let&rsquo;s recap!',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	44,	NULL,	NULL,	'2020-04-25 10:12:23',	'2020-04-25 10:12:23'),
(295,	NULL,	NULL,	'Typography',	'The Bootstrap Typography consists of:<ol>	<li>Headings</li>	<li>Subheadings</li>	<li>Emphasis</li>	<li>Abbreviations</li></ol>',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	44,	NULL,	NULL,	'2020-04-25 10:12:39',	'2020-04-25 10:12:39'),
(296,	NULL,	NULL,	'Code',	'Bootstrap allows you to display code in 2 different ways.<br /><br />First you can use the &lt;code&gt; tag.&nbsp;<br />Second is to use the &lt;pre&gt; tag. This will display the code as a standalone block element, but use the &lt;pre&gt; tag for multiple lines of code.',	NULL,	'',	NULL,	'<code>&lt;section&gt;</code> should be wrapped as inline.\n\n<pre><code>&lt;p&gt;Sample text here...&lt;/p&gt;\n&lt;p&gt;And another line of sample text here...&lt;/p&gt;\n</code></pre>',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	44,	NULL,	NULL,	'2020-04-25 10:14:31',	'2020-04-25 10:14:31'),
(297,	NULL,	NULL,	'Tables',	'Bootstrap offers different classes for tables.<br /><br /><strong>Striped Table - </strong>The <strong>.table-striped</strong> class will create stripes on rows within the &lt;tbody&gt;.<br /><br /><strong>Bordered Table - </strong>The<strong> .table-bordered</strong> class gets you a bordered surrounding for every element and rounded corners around the entire table.&nbsp;<br /><br />table, th, td {<br />&nbsp;&nbsp;border: 1px solid black;<br />}<br /><br /><strong>Hover Table - </strong>The <strong>.table-hover</strong> class adds a light gray background to the rows when the cursor hovers over them.<br />tr:hover {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;background-color: #ffff99;<br />}',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	44,	NULL,	NULL,	'2020-04-25 10:15:42',	'2020-04-25 10:15:42'),
(298,	NULL,	NULL,	'Form Layout',	'The basic form structure is the Vertical Form. It is the default type used automatically by Bootstrap. The table receives automatic, individual, and global styling.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	44,	NULL,	NULL,	'2020-04-25 10:16:29',	'2020-04-25 10:16:29'),
(299,	NULL,	NULL,	'Images',	'Bootstrap supports images. It provides 3 classes that can be used to apply different styles to images.<ul>	<li><strong>.img-rounded</strong> - adds rounded corners or border-radius:6px.</li>	<li><strong>.img-circle</strong> - makes the entire image rounded with a border-radius:500px.</li>	<li><strong>.img-thumbnail</strong> - adds padding and a gray border.</li></ul>',	NULL,	'',	NULL,	'<img src = “/images/untitled.png” class = “img-rounded”>\n<img src = “/images/untitled.png” class = “img-circle”>\n<img src = “/images/untitled.png” class = “img-thumbnail”>',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	44,	NULL,	NULL,	'2020-04-25 10:17:33',	'2020-04-25 10:17:33'),
(300,	NULL,	NULL,	'Wells',	'To create a &lt;div&gt; with a Well, you just have to wrap the &lt;div&gt; with the .well class.<br /><br />You are able to change the size of a Well by using the .well-lg or .well-sm. These classes are used in conjunction with the .well class.',	NULL,	'',	NULL,	'<div class = “well”>Hello Webpage!!</div>\n\n\n<div class = “well well-lg”>Large Well!</div>\n<div class = “well well-sm”>Large Well!</div>',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	44,	NULL,	NULL,	'2020-04-25 10:18:06',	'2020-04-25 10:19:29'),
(301,	NULL,	NULL,	'take',	'Mission Bootstrap completed successfully!',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	44,	NULL,	NULL,	'2020-04-25 10:19:43',	'2020-04-25 10:19:43'),
(302,	NULL,	NULL,	'New friend - JavaScript',	'JavaScript is a programming language used mainly on webpages.<br /><br />It helps bring interaction to the webpage. It&#39;s like the engine of a car. Without an engine car, I can&#39;t move or do anything. Javascript brings life to a website.<br /><br />Cool, right?',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	45,	NULL,	NULL,	'2020-04-26 01:55:50',	'2020-04-26 01:55:50'),
(303,	NULL,	NULL,	'What does it do?',	'JavaScript helps with all the great functions a webpage has. A calculator, a stopwatch, a video, and/or animation, all can be powered by JavaScript.<br /><br />JavaScript helps smoothen the experience of a webpage.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	45,	NULL,	NULL,	'2020-04-26 01:56:14',	'2020-04-26 01:56:14'),
(304,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"A multi-purpose programming language\",\"question\":\"What is JavaScript?\",\"code\":null,\"option\":{\"1\":\"Coffee\",\"2\":\"A multi-purpose programming language\",\"3\":\"A computer\"}}',	45,	NULL,	NULL,	'2020-04-26 01:56:48',	'2020-04-26 01:56:48'),
(305,	NULL,	NULL,	'Ready?',	'Now that you know a little bit about JavaScript, let&#39;s get started with this journey!<br /><br />Hope you have fun learning! :D',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	45,	NULL,	NULL,	'2020-04-26 01:57:23',	'2020-04-26 01:57:23'),
(306,	NULL,	NULL,	'What is input and output?',	'When we go to a fast food restaurant, we order food or a drink. &ldquo;1 cup of coffee please!!&rdquo; Then, they take our order and give us the things we order. &ldquo;Here is your McCafe, with extra sugar!&rdquo;',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	46,	NULL,	NULL,	'2020-04-26 01:57:52',	'2020-04-26 01:57:52'),
(307,	NULL,	NULL,	'What is input and output?',	'This is called input and output. We order food which is the input. The waiter gives us the food which is the output.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	46,	NULL,	NULL,	'2020-04-26 01:58:08',	'2020-04-26 01:58:08'),
(308,	NULL,	NULL,	'How to use Input and Output in JavaScript?',	'Similarly, JavaScript consists of inputs and outputs. It takes data which is sent from the user&rsquo;s end, processes it, and then sends an output according to that input.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	46,	NULL,	NULL,	'2020-04-26 01:58:24',	'2020-04-26 01:58:24'),
(309,	NULL,	NULL,	'Example',	'For example, if I say 1 + 1 as my input, I would expect 2 as my output.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	46,	NULL,	NULL,	'2020-04-26 01:58:34',	'2020-04-26 01:58:34'),
(310,	NULL,	NULL,	'Output',	'When trying to output any type of data, we use the &quot;<strong>console.log()</strong>&quot; function.<br /><br />For example, if you want to output the McCafe we ordered earlier, we can type the following code.<br /><br /><strong>Keep in mind</strong>: after almost every JavaScript line of code, you have to include a semicolon(;)',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	46,	NULL,	NULL,	'2020-04-26 01:58:52',	'2020-04-26 01:58:52'),
(311,	NULL,	NULL,	'Example',	'Now we can order our good with the following line of code:',	NULL,	'',	NULL,	'console.log(\"Coffee with extra sugar please!!\");',	'true',	'Yum!',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	46,	NULL,	NULL,	'2020-04-26 01:59:15',	'2020-04-26 01:59:34'),
(312,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"console.log(\\u201cI love you\\u201d);\",\"question\":\"Which is the correct way to say &ldquo;I love you&rdquo; in JavaScript?\",\"code\":null,\"option\":{\"1\":\"output(I love you);\",\"2\":\"print(\\u201cI love you);\",\"3\":\"console.log(\\u201cI love you\\u201d);\"}}',	46,	NULL,	NULL,	'2020-04-26 02:00:07',	'2020-04-26 02:00:07'),
(313,	NULL,	NULL,	'take',	'To output, use the console.log() function.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	46,	NULL,	NULL,	'2020-04-26 02:00:15',	'2020-04-26 02:00:15'),
(314,	NULL,	NULL,	'Data',	'We use data all the time! Data has been around always.<br /><br />We use the data using our minds to understand it and apply the data to other factors.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	47,	NULL,	NULL,	'2020-04-26 02:00:51',	'2020-04-26 02:00:51'),
(315,	NULL,	NULL,	'Example of Data',	'An example of this would be: we look at a Facebook post&rsquo;s likes. Since it is a number and we can analyze it using our brain, it is data.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	47,	NULL,	NULL,	'2020-04-26 02:01:07',	'2020-04-26 02:01:07'),
(316,	NULL,	NULL,	'What is a variable?',	'Whenever something that could change, we call it a variable. Variable is something that could vary, like the temperature. The temperature changes.&nbsp;<br /><br />Similarly, you can think of the amount of money you have in your pocket...it changes all the time.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	47,	NULL,	NULL,	'2020-04-26 02:01:27',	'2020-04-26 02:01:27'),
(317,	NULL,	NULL,	'How to use a variable?',	'In order to create a variable, you have to use the &ldquo;var&rdquo; keyword. Then, following the &ldquo;var&rdquo; keyword comes the name of the variable. The final piece is the type of variable you are declaring.&nbsp;<br /><br /><strong>Keep in mind:</strong> not all types of variables will use the keyword &ldquo;var&rdquo;.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	47,	NULL,	NULL,	'2020-04-26 02:01:45',	'2020-04-26 02:01:45'),
(318,	NULL,	NULL,	'Types of Variables',	'In programming, a variable is an indication of data being stored. There are many types of variables, but mainly there are 3 in JavaScript:&nbsp;<br /><br />Marshmallows, Sugar, and Cream!',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	47,	NULL,	NULL,	'2020-04-26 02:02:02',	'2020-04-26 02:02:02'),
(319,	NULL,	NULL,	'Types of Variables',	'Just kidding! The 3 types of variables in JavaScript are numbers, booleans, and strings. Each can be used in different situations, in different ways.&nbsp;<br /><br />Let&rsquo;s discover their use!',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	47,	NULL,	NULL,	'2020-04-26 02:02:17',	'2020-04-26 02:02:17'),
(320,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"var\",\"question\":\"Which keyword is used to define variables in JavaScript?\",\"code\":null,\"option\":{\"1\":\"war\",\"2\":\"var\",\"3\":\"define\"}}',	47,	NULL,	NULL,	'2020-04-26 02:02:43',	'2020-04-26 02:02:43'),
(321,	NULL,	NULL,	'take',	'Booleans, strings, and numbers are data types to store data.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	47,	NULL,	NULL,	'2020-04-26 02:02:50',	'2020-04-26 02:02:50'),
(322,	NULL,	NULL,	'What is decision making?',	'We make decisions every day. We make the decision to wake up, eat breakfast, go for work, eat dinner, and go for sleep.&nbsp;<br /><br />Those are only the small amounts of decisions we make each day.&nbsp;<br /><br />You made the decision to read this, and I think you made a good decision.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	49,	NULL,	NULL,	'2020-04-26 02:03:50',	'2020-04-26 02:03:50'),
(323,	NULL,	NULL,	'Example of Decision Making',	'When you wake up in the morning, you decide whether to check Facebook first or brush first.<br /><br />Similarly, when it comes to lunch, you might have to decide whether you want to eat rice or pasta.<br /><br />This means, you have to make a decision. You have to take one option from multiple options.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	49,	NULL,	NULL,	'2020-04-26 02:04:04',	'2020-04-26 02:04:04'),
(324,	NULL,	NULL,	'What is decision making?',	'But we all make decisions through conditions. We make the decision to eat healthy because the condition is &#39;if I eat unhealthily, then I will gain too much weight.&#39;&nbsp;<br /><br />Do you see a structure here?',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	49,	NULL,	NULL,	'2020-04-26 02:04:26',	'2020-04-26 02:04:26'),
(325,	NULL,	NULL,	'Condition Structure',	'We have the keyword &ldquo;<strong>if</strong>&rdquo; and then a condition. Then, we tell the consequence.<br /><br /><strong>Keep in mind:</strong> consequences can be good or bad.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	49,	NULL,	NULL,	'2020-04-26 02:04:38',	'2020-04-26 02:04:38'),
(326,	NULL,	NULL,	'Creating an IF statement',	'In JavaScript, a similar structure is present.&nbsp;<br />Here are the types:<ul>	<li>Using &quot;<strong>if</strong>&quot; to determine a block of code to be executed if the stated condition is true</li>	<li>Use &quot;<strong>else</strong>&quot; to specify a block of code to be executed if the same statement turns to be false</li>	<li>Use &quot;<strong>else if</strong>&quot; to define a new condition to be evaluated if the first condition is wrong.</li></ul>',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	49,	NULL,	NULL,	'2020-04-26 02:05:27',	'2020-04-26 02:05:27'),
(327,	NULL,	NULL,	'Example',	'<strong>Here is an example of the structure:</strong><br />if(condition) {<br />[code goes here]<br />}<br />&nbsp;<br /><strong>Here is an example of an if statement in use:</strong>',	NULL,	'',	NULL,	'var x = 1;\nif(x < 6) {\n    console.log(\"x is less than 6.”);\n} else {\n    console.log(\"x is greater than 6”);\n}',	'true',	'In this condition, if the variable x is less than 6, the program will print out that x is less than 6. Else or otherwise, the program will print out that x is greater than 6.',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	49,	NULL,	NULL,	'2020-04-26 02:06:32',	'2020-04-26 02:06:52'),
(328,	NULL,	'hints|Glace through the previous slides to get a better understanding of the question.|The answer is else because the else keyword is used to indicate another alternative condition.|else',	'Quiz',	'Fill in the blank:',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	'printsln',	'{\"soln\":\"else\",\"tf1\":\"var x = 1;<br \\/>\\r\\nif(x &lt; 10) {<br \\/>\\r\\n&nbsp;&nbsp;&nbsp; console.log(&ldquo;x is less than 10&rdquo;);<br \\/>\\r\\n[blank] {<br \\/>\\r\\n&nbsp;&nbsp;&nbsp; console.log(&ldquo;x is greater than 10&rdquo;);<br \\/>\\r\\n}\"}',	NULL,	49,	NULL,	NULL,	'2020-04-26 02:08:05',	'2020-05-02 21:28:06'),
(329,	NULL,	NULL,	'take',	'You can make smart decisions and now help a computer make one too!',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	49,	NULL,	NULL,	'2020-04-26 02:08:15',	'2020-04-26 02:08:15'),
(330,	NULL,	NULL,	'What are they?',	'Are we going to discuss the comments you do daily on your social media?<br /><br />Don&rsquo;t expect that! It&#39;s JavaScript that we are talking about.<br /><br />Let&rsquo;s check what they are in JavaScript.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	50,	NULL,	NULL,	'2020-04-26 02:09:36',	'2020-04-26 02:09:36'),
(331,	NULL,	NULL,	'What are comments?',	'Comments in JavaScript are a very small but useful feature. They help explain a code&rsquo;s functionality to someone who does not know how to program.&nbsp;<br /><br />If the code is too long, you could quickly explain the code to another programmer.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	50,	NULL,	NULL,	'2020-04-26 02:09:56',	'2020-04-26 02:09:56'),
(332,	NULL,	NULL,	'Error Blocking',	'You could also cancel a piece of code out if you are getting errors to see if that line is causing the error.&nbsp;<br /><br /><em>Comments are automatically ignored in JavaScript.</em>',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	50,	NULL,	NULL,	'2020-04-26 02:10:17',	'2020-04-26 02:10:17'),
(333,	NULL,	NULL,	'Single-Line Comments',	'For a single line comment, you type &ldquo;<strong>//</strong>&rdquo; before the line. This will turn only 1 line into a comment.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	50,	NULL,	NULL,	'2020-04-26 02:10:41',	'2020-04-26 02:10:41'),
(334,	NULL,	NULL,	'Single-Line Comments Example',	'',	NULL,	'',	NULL,	'// This outputs “Hello World”\nconsole.log(“Hello World”);',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	50,	NULL,	NULL,	'2020-04-26 02:11:03',	'2020-04-26 02:11:03'),
(335,	NULL,	NULL,	'Multi-Line Comments',	'For multiple lines of comments, you can use the &ldquo;<strong>/*</strong>&rdquo; and &ldquo;<strong>*/</strong>&rdquo; to open and close comments.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	50,	NULL,	NULL,	'2020-04-26 02:11:17',	'2020-04-26 02:11:17'),
(336,	NULL,	NULL,	'Multi-Line Comments Example',	'',	NULL,	'',	NULL,	'/* This\nOutputs \n“Hello\nWorld” */\nconsole.log(“Hello World”);',	'true',	'Now you can create comments! If you want to create hidden messages, go ahead, leave a comment on your code. It&rsquo;s that simple!',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	50,	NULL,	NULL,	'2020-04-26 02:11:53',	'2020-04-26 02:11:53'),
(337,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"\\/\\/\",\"question\":\"How do you comment out?\",\"code\":null,\"option\":{\"1\":\"\\/\\/\",\"2\":\"#\",\"3\":\"*\"}}',	50,	NULL,	NULL,	'2020-04-26 02:12:36',	'2020-04-26 02:12:36'),
(338,	NULL,	NULL,	'take',	'<strong>//</strong> is used to comment out a line.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	50,	NULL,	NULL,	'2020-04-26 02:13:00',	'2020-04-26 02:13:00'),
(339,	NULL,	NULL,	'Outputs',	'For debugging purposes, you can use the <strong>console.log()</strong> method to display data.',	NULL,	'',	NULL,	'console.log(“Hello World”);',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	51,	NULL,	NULL,	'2020-04-26 02:13:49',	'2020-04-26 02:13:49'),
(340,	NULL,	NULL,	'Variables',	'JavaScript variables are containers for storing data values.',	NULL,	'',	NULL,	'var x = 3;',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	51,	NULL,	NULL,	'2020-04-26 02:14:09',	'2020-04-26 02:14:09'),
(341,	NULL,	NULL,	'Variables',	'Strings can also be used to store multiple characters or words.',	NULL,	'',	NULL,	'var x = “Programming Hero”;',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	51,	NULL,	NULL,	'2020-04-26 02:14:32',	'2020-04-26 02:14:32'),
(342,	NULL,	NULL,	'Variables',	'Booleans can be used to store True or False values.',	NULL,	'',	NULL,	'3 < 1 \n// False',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	51,	NULL,	NULL,	'2020-04-26 02:15:00',	'2020-04-26 02:15:00'),
(343,	NULL,	NULL,	'Variables',	'You can also use operators to do math.',	NULL,	'',	NULL,	'var x = 6 + 8;',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	51,	NULL,	NULL,	'2020-04-26 02:15:25',	'2020-04-26 02:15:25'),
(344,	NULL,	NULL,	'IF Statements',	'In JavaScript, we can make decisions using the following,<ul>	<li>Use &quot;<strong>if</strong>&quot; to determine a block of code to be executed if the stated condition is true.</li>	<li>Use &quot;<strong>else</strong>&quot; to specify a block of code to be executed if the same statement turns to be false</li>	<li>Use &quot;<strong>else if</strong>&quot; to define a new condition to be evaluated if the first condition is wrong.</li></ul>',	NULL,	'',	NULL,	'var apples = 0;\nif(apples < 10) {\nconsole.log(“I have less than 10 apples.”);\n}',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	51,	NULL,	NULL,	'2020-04-26 02:15:55',	'2020-04-26 02:15:55'),
(345,	NULL,	NULL,	'Comments',	'For a single line comment, you type &ldquo;<strong>//</strong>&rdquo; before the line. This will turn only 1 line into a comment.',	NULL,	'',	NULL,	'// This outputs \"Hello World”\nconsole.log(\"Hello World”);',	'true',	'For multiple lines of comments, you can use the &ldquo;<strong>/*</strong>&rdquo; and &ldquo;<strong>*/</strong>&rdquo; to open and close comments.',	'/* This\nOutputs \n“Hello\nWorld” */\nconsole.log(“Hello World”);',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	51,	NULL,	NULL,	'2020-04-26 02:16:18',	'2020-04-26 02:16:53'),
(346,	NULL,	NULL,	'take',	'You have learned the very basics of JavaScript. Well Done. Congrats!',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	51,	NULL,	NULL,	'2020-04-26 02:17:08',	'2020-04-26 02:17:08'),
(347,	NULL,	NULL,	'Previously',	'Let&rsquo;s level up!<br /><br />So in the previous Galaxy, you learned the very basics of JavaScript.<br /><br />You learned how to output, what are variables, operations, conditions, and comments.<br /><br />Wow, you are really into this JavaScript thing.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	5,	NULL,	NULL,	'2020-04-26 03:49:41',	'2020-04-26 03:49:41'),
(348,	NULL,	NULL,	'Continuation',	'Now you have entered the Advanced JavaScript Galaxy.<br /><br />This means you will be able to know the overall concepts of JavaScript.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	5,	NULL,	NULL,	'2020-04-26 03:49:59',	'2020-04-26 03:49:59'),
(349,	NULL,	NULL,	'What will you learn?',	'You will learn about arrays, loops, functions, parameters, and objects.&nbsp;<br /><br />Using all this, you will be able to master JavaScript and then you can flaunt in front of your friends.<br /><br />So, let&#39;s dive in...',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	5,	NULL,	NULL,	'2020-04-26 03:50:19',	'2020-04-26 03:50:19'),
(350,	NULL,	NULL,	'Introduction',	'When you purchase a bag of potato, you don&#39;t have just one potato, you have a few potatoes in a bag.&nbsp;<br /><br />Similarly, if you are travelling by bus, you are not the only one on the bus. There are more than one person on the bus.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	6,	NULL,	NULL,	'2020-04-26 03:50:56',	'2020-04-26 03:50:56'),
(351,	NULL,	NULL,	'Example',	'For example, when we go to a restaurant, we order different items. Each item is a different thing, but they are similar because you can eat them.<br /><br />When our order is taken, it is written down on the same piece of paper. This is all just similar data.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	6,	NULL,	NULL,	'2020-04-26 03:51:27',	'2020-04-26 03:51:27'),
(352,	NULL,	NULL,	'Arrays',	'An array in programming is like a list.&nbsp;<br />An array stores multiple variables in one.<br /><br />From what we have learned previously, we create multiple variables to show a list.<br />They are multiple values in one variable separated by commas.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	6,	NULL,	NULL,	'2020-04-26 03:52:05',	'2020-04-26 03:52:05'),
(353,	NULL,	NULL,	'Example',	'',	NULL,	'',	NULL,	'var item1 = \"Cheeseburger\";\nvar item2 = \"Cola\";',	NULL,	'But you are able to represent that similar thing by writing less code. Yes, they are called arrays!',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	6,	NULL,	NULL,	'2020-04-26 03:52:24',	'2020-04-26 03:52:43'),
(354,	NULL,	NULL,	'How to create Arrays?',	'When you create an array, it is compiled to be a special variable to store similar variables. These similar variables have to be stored in the same data type.<br /><br />Creating an array is really similar to creating a variable. To create one, you have to:<ol>	<li>Type the keyword &ldquo;var&rdquo;</li>	<li>Name the variable.</li>	<li>Use the &ldquo;=&rdquo; sign and then square brackets &quot;[ ]&quot;.</li>	<li>Inside the brackets, you are able to put in values as numbers and other data types.</li>	<li>Separate the values with commas.</li>	<li>Place a semicolon at the end of the line.</li></ol>',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	6,	NULL,	NULL,	'2020-04-26 03:53:09',	'2020-04-26 03:53:09'),
(355,	NULL,	NULL,	'Example',	'',	NULL,	'',	NULL,	'var array = [1, 2, 3, 4, 5];',	NULL,	'One thing to remember is that you can&rsquo;t store different data types in an array.<br />This is invalid and defeats the whole purpose of storing similar values.',	'var array = [1, “two”, “three”, 4, 5];',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	6,	NULL,	NULL,	'2020-04-26 03:55:18',	'2020-04-26 03:55:18'),
(356,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"var arr = (1, 2, 3, 4);\",\"question\":\"What is the correct format for an array?\",\"code\":null,\"option\":{\"1\":\"var arr = (1, \\u201cHello\\u201d, 2, \\u201cGoodbye\\u201d);\",\"2\":\"var arr = (1, \\u201cHello\\u201d, 2, \\u201cGoodbye\\u201d)\",\"3\":\"var arr = (1, 2, 3, 4);\"}}',	6,	NULL,	NULL,	'2020-04-26 03:55:50',	'2020-04-26 03:55:50'),
(357,	NULL,	NULL,	'take',	'Use an array to store similar data together.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	6,	NULL,	NULL,	'2020-04-26 03:55:58',	'2020-04-26 03:55:58'),
(358,	NULL,	NULL,	'Accessing Arrays',	'Just like variables, you need to access the items in an array.&nbsp;<br /><br />When the waiter takes your order, he/she has to use the items and tell the chief to get the food cooked. The waiter is, in reality, accessing an array.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	7,	NULL,	NULL,	'2020-04-26 03:56:42',	'2020-04-26 03:56:42'),
(359,	NULL,	NULL,	'How to access arrays?',	'Let&rsquo;s create an array first:',	NULL,	'',	NULL,	'var friends = [\'John\', \'Tim\', \'Jimmy\', \'Carson\'];',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	7,	NULL,	NULL,	'2020-04-26 03:57:03',	'2020-04-26 03:57:03'),
(360,	NULL,	NULL,	'How to access arrays?',	'Let&rsquo;s say we want to call John. To do so, we have to type the array name and then the <strong>Index</strong> for the value we want to access inside brackets.',	NULL,	'',	NULL,	'friends[0];',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	7,	NULL,	NULL,	'2020-04-26 03:57:28',	'2020-04-26 03:57:28'),
(361,	NULL,	NULL,	'How to access arrays?',	'To access John, we typed the number 0 in the brackets. 0 is John&rsquo;s index.&nbsp;<br /><br />An index is the position of a variable in an array. It starts at 0 and builds up by one.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	7,	NULL,	NULL,	'2020-04-26 03:57:55',	'2020-04-26 03:57:55'),
(362,	NULL,	NULL,	'How to access arrays?',	'For example, to access each of the friends we would type:',	NULL,	'',	NULL,	'console.log (friends[0]);\nconsole.log (friends[1]);\nconsole.log (friends[2]);\nconsole.log (friends[3]);',	NULL,	'Friend 0 is John, friend 1 is Tim, friend 2 is Jimmy, and friend 3 is Carson.<br /><br />Do you see a pattern?',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	7,	NULL,	NULL,	'2020-04-26 04:28:09',	'2020-04-26 04:28:09'),
(363,	NULL,	NULL,	'Final Code',	'The final product will look like so:',	NULL,	'',	NULL,	'var friends = [\'John\', \'Tim\', \'Jimmy\', \'Carson\'];\n\nconsole.log (friends[0]);\nconsole.log (friends[1]);\nconsole.log (friends[2]);\nconsole.log (friends[3]);',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	7,	NULL,	NULL,	'2020-04-26 04:28:36',	'2020-04-26 04:28:36'),
(364,	NULL,	'hints|Go back and check which index value it corresponds to.|The answer is <strong>console.log(characters[2]);</strong> because we use <strong>console.log()</strong> to output and the character&#39;s index 2 to print the 3rd item in the array.|console.log(characters[2]);',	'Quiz',	'Print out the name &ldquo;Trevor&rdquo;.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	'printsln',	'{\"soln\":\"console.log(characters[2]);\",\"tf1\":\"var characters = [&#39;Jimmy&#39;, &#39;Katty&#39;, &#39;Trevor&#39;, &#39;Mike&#39;];<br \\/>\\r\\n[blank]\"}',	NULL,	7,	NULL,	NULL,	'2020-04-26 04:30:48',	'2020-05-02 21:31:10'),
(365,	NULL,	NULL,	'take',	'Print out arrays using their index number.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	7,	NULL,	NULL,	'2020-04-26 04:30:58',	'2020-04-26 04:30:58'),
(366,	NULL,	NULL,	'Repeating Tasks',	'There are many instances of repeating a task over and over again.<br /><br />It can be frustrating given that we are lazy.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	8,	NULL,	NULL,	'2020-04-26 04:31:50',	'2020-04-26 04:31:50'),
(367,	NULL,	NULL,	'Computers',	'Computers never get bored, NEVER. They can do a task thousands of times and do it with ease.<br /><br />In computer programming, making a program to repeat a task is called a Loop.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	8,	NULL,	NULL,	'2020-04-26 04:32:06',	'2020-04-26 04:32:06'),
(368,	NULL,	NULL,	'Hard Way',	'Let&#39;s say we wanted to say &ldquo;I love you&rdquo; 10 times. In order to do that, you would say:',	NULL,	'',	NULL,	'console.log(\'I love you\');\nconsole.log(\'I love you\');\nconsole.log(\'I love you\');\nconsole.log(\'I love you\');\nconsole.log(\'I love you\');\nconsole.log(\'I love you\');\nconsole.log(\'I love you\');\nconsole.log(\'I love you\');\nconsole.log(\'I love you\');\nconsole.log(\'I love you\');',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	8,	NULL,	NULL,	'2020-04-26 04:32:32',	'2020-04-26 04:32:32'),
(369,	NULL,	NULL,	'Easy Way',	'But there is an easier way of doing that same thing.<br /><br />Using loops, you would be able to perform that same task in just 3 or 4 lines.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	8,	NULL,	NULL,	'2020-04-26 04:32:54',	'2020-04-26 04:32:54'),
(370,	NULL,	NULL,	'Types of Loops',	'In JavaScript, there are While Loops and For Loops.<br /><br />They both perform a similar task of repeating code until a condition is valid.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	8,	NULL,	NULL,	'2020-04-26 04:33:06',	'2020-04-26 04:33:06'),
(371,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"For\",\"question\":\"What types of loops are valid in JavaScript?\",\"code\":null,\"option\":{\"1\":\"Do...it\",\"2\":\"For\",\"3\":\"For...you\"}}',	8,	NULL,	NULL,	'2020-04-26 04:33:34',	'2020-04-26 04:33:34'),
(372,	NULL,	NULL,	'take',	'Use loops to repeat tasks',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	8,	NULL,	NULL,	'2020-04-26 04:33:56',	'2020-04-26 04:33:56'),
(373,	NULL,	NULL,	'Doing A Task',	'We all perform actions every day. We walk using our legs. We talk using our mouths. Those are examples of a few functions those parts perform.&nbsp;<br /><br />A function would be anything that performs an action.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	10,	NULL,	NULL,	'2020-04-26 05:25:28',	'2020-04-26 05:25:28'),
(374,	NULL,	NULL,	'Functions',	'To put it simply, a function does something!<br /><br />So a function can be a reusable task at any time and as many times as we would want.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	10,	NULL,	NULL,	'2020-04-26 05:25:45',	'2020-04-26 05:25:45'),
(375,	NULL,	NULL,	'Creating A Function',	'Firstly, to create a function we have to type in the structure:',	NULL,	'',	NULL,	'function function_name(){\n    // code\n}',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	10,	NULL,	NULL,	'2020-04-26 05:26:04',	'2020-04-26 05:26:04'),
(376,	NULL,	NULL,	'Creating A Function',	'We start by defining the keyword &ldquo;<strong>function</strong>&rdquo;, naming it, having open and closed brackets, and a pair of curly brackets to place our code at.<br /><br />Now let&rsquo;s say we want to create a function that outputs &ldquo;Hello World&rdquo;. Let&rsquo;s create it!',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	10,	NULL,	NULL,	'2020-04-26 05:26:20',	'2020-04-26 05:26:20'),
(377,	NULL,	NULL,	'Example',	'',	NULL,	'',	NULL,	'function helloWorld(){\n    console.log(\"Hello World\");\n}',	NULL,	'The above code will output &ldquo;Hello World&rdquo; when we call it. But how to call it?<br />We see that in the next section&hellip;.',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	10,	NULL,	NULL,	'2020-04-26 05:26:55',	'2020-04-27 05:35:28'),
(378,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"function function_name(){     \\/\\/ code            }\",\"question\":\"What structure does a function follow?\",\"code\":null,\"option\":{\"1\":\"function function_name(){     \\/\\/ code            }\",\"2\":\"function {     \\/\\/ code            }\",\"3\":\"function function_name(\\/\\/ code)\"}}',	10,	NULL,	NULL,	'2020-04-26 05:27:52',	'2020-04-26 05:27:52'),
(379,	NULL,	NULL,	'take',	'Create a function using the &ldquo;function&rdquo; keyword and parameter.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	10,	NULL,	NULL,	'2020-04-26 05:28:06',	'2020-04-26 05:28:06'),
(380,	NULL,	NULL,	'Using A Function',	'Now we have created a function to print &ldquo;Hello World. In order to use this function, we must call it similarly like an array.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	11,	NULL,	NULL,	'2020-04-26 05:28:48',	'2020-04-26 05:28:48'),
(381,	NULL,	NULL,	'Example',	'We need to call a function to execute it. This is how it is done,',	NULL,	'',	NULL,	'function helloWorld(){\n    console.log(“Hello World”);\n}\n\nhelloWorld();',	'true',	'Yes, we type the function name, enter brackets, and end the line with a semicolon.',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	11,	NULL,	NULL,	'2020-04-26 05:29:20',	'2020-04-26 05:29:20'),
(382,	NULL,	NULL,	'Brackets',	'You might have wondered what the brackets in the function mean. The brackets are meant to be used as parameters.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	11,	NULL,	NULL,	'2020-04-26 05:29:37',	'2020-04-26 05:29:37'),
(383,	NULL,	NULL,	'Parameters',	'A parameter is passed to a function as creating a variable to use in a function. So, we would be able to pass values to a function in order for it to do calculations.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	11,	NULL,	NULL,	'2020-04-26 05:29:46',	'2020-04-26 05:29:46'),
(384,	NULL,	NULL,	'Example',	'Let&rsquo;s say we want to find the area of a rectangle. To create such a function, we would create the following function:',	NULL,	'',	NULL,	'function area(num1, num2){\n    var recArea = num1 * num2;\n    console.log(recArea);\n}\n\narea(3, 5);',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	11,	'The values 3 and 5 will replace the variables num1 and num2 and will be used to perform the operation given inside the function.',	NULL,	'2020-04-26 05:30:15',	'2020-04-26 05:30:36'),
(385,	NULL,	NULL,	'Return',	'We can use the return keyword to return data. The return keyword helps target the specific data we want to send.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	11,	NULL,	NULL,	'2020-04-26 05:30:52',	'2020-04-26 05:30:52'),
(386,	NULL,	NULL,	'Example',	'',	NULL,	'',	NULL,	'function square(x) {\n   return x * x;\n}\n\nconsole.log(square(5));',	'true',	'The above code will square 5 and output 25.',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	11,	NULL,	NULL,	'2020-04-26 05:31:21',	'2020-04-26 05:31:21'),
(387,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"Variables\",\"question\":\"Parameters are declarations of&hellip;\",\"code\":null,\"option\":{\"1\":\"Conditions\",\"2\":\"Variables\",\"3\":\"Comments\"}}',	11,	NULL,	NULL,	'2020-04-26 05:31:45',	'2020-04-26 05:31:45'),
(388,	NULL,	NULL,	'take',	'Use the return keyword to send specific data.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	11,	NULL,	NULL,	'2020-04-26 05:31:54',	'2020-04-26 05:31:54'),
(389,	NULL,	NULL,	'Important Messages',	'There are many times when you want to say something important to someone.&nbsp;<br /><br />Let&rsquo;s say you forgot to do your math homework and have to like your friend for answers.&nbsp;<br />Trust me, we have all been there!',	'Variables',	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	12,	NULL,	NULL,	'2020-04-26 05:32:46',	'2020-04-26 05:32:46'),
(390,	NULL,	NULL,	'Dialog Box',	'In JavaScript, this is where dialog boxes come in. A dialog box helps with sending those important messages to the user.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	12,	NULL,	NULL,	'2020-04-26 05:32:55',	'2020-04-26 05:32:55'),
(391,	NULL,	NULL,	'Types of Dialog Boxes',	'There are 3 types of them:<ul>	<li>Alert Dialog Box</li>	<li>Confirm Dialog Box</li>	<li>Prompt Dialog Box</li></ul>',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	12,	NULL,	NULL,	'2020-04-26 05:33:20',	'2020-04-26 05:33:20'),
(392,	NULL,	NULL,	'Alert Dialog Box',	'An Alert Dialog Box is used to send a message or alert to the user. It can be used like this:<br /><br /><strong>alert();</strong><br /><br />Inside the brackets, we can put our message.',	NULL,	'',	NULL,	'alert(“I love Programming Hero!”);',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	12,	NULL,	NULL,	'2020-04-26 05:34:10',	'2020-04-26 05:34:10'),
(393,	NULL,	NULL,	'Confirm Dialog Box',	'A Confirm Dialog Box can be used when you want to ask the user a question and/or confirm something. Let&rsquo;s say we want to confirm if they want to keep using the website. We simply type the following:',	NULL,	'',	NULL,	'confirm(“Would you like to keep using our website?”);',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	12,	NULL,	NULL,	'2020-04-26 05:34:35',	'2020-04-26 05:34:35'),
(394,	NULL,	NULL,	'Explanation',	'This will bring up a window that will ask the user if they want to continue using the website. Yes, it is as simple as that.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	12,	NULL,	NULL,	'2020-04-26 05:34:52',	'2020-04-26 05:34:52'),
(395,	NULL,	NULL,	'Prompt Dialog Box',	'In a Prompt Dialog Box, you can take input from the user. For example, you can ask someone&rsquo;s age using a Prompt Dialog Box if you like to.',	NULL,	'',	NULL,	'prompt(“How old are you?”);',	'true',	'This will open a box that will allow you to type your answer.',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	12,	NULL,	NULL,	'2020-04-26 05:35:22',	'2020-04-26 05:35:22'),
(396,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"None of the above\",\"question\":\"Which of the following are existing dialog boxes?\",\"code\":null,\"option\":{\"1\":\"Error\",\"2\":\"Submit\",\"3\":\"None of the above\"}}',	12,	NULL,	NULL,	'2020-04-26 05:35:47',	'2020-04-26 05:35:47'),
(397,	NULL,	NULL,	'take',	'Alert, Confirm, and Prompt are dialog boxes.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	12,	NULL,	NULL,	'2020-04-26 05:35:54',	'2020-04-26 05:35:54'),
(398,	NULL,	NULL,	'Completionist',	'Congratulations! You have completed the Advanced JavaScript Galaxy.&nbsp;<br />Now you have a great understanding of how to use JavaScript words. Amazing, isn&rsquo;t it?<br /><br />Now lets recap the things we learned.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	13,	NULL,	NULL,	'2020-04-26 05:36:43',	'2020-04-26 05:36:43'),
(399,	NULL,	NULL,	'Arrays',	'An array in programming is like a list. An array stores multiple variables in one.&nbsp;<br /><br />When you create an array, it is compiled to be a special variable to store similar variables. These similar variables have to be stored as the same data type.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	13,	'Creating an array is really similar to creating a variable. To create one, you first have to:\r\n<ol>\r\n	<li>Type the keyword &ldquo;var&rdquo;.</li>\r\n	<li>Name the variable.</li>\r\n	<li>Use the &ldquo;=&rdquo; sign and then square brackets&quot;[ ]&quot;.</li>\r\n	<li>Inside the brackets, you are able to put in values as numbers and other data types.</li>\r\n	<li>Separate the values with commas.</li>\r\n	<li>Place a semicolon at the end of the line.</li>\r\n</ol>\r\nFor example:<br />\r\nvar array = [1, 2, 3, 4, 5];',	NULL,	'2020-04-26 05:37:42',	'2020-04-26 05:37:42'),
(400,	NULL,	NULL,	'Loops',	'Using loops, you would be able to perform that same task in just 3 or 4 lines.&nbsp;<br /><br />In JavaScript, there are While Loops and For Loops.<br /><br />A For Loops has different parts. A variable, a value, a condition, and a statement countering the condition.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	13,	NULL,	'To create a For Loop, you first have to create a variable.<br />\r\nvar x;<br />\r\n<br />\r\nNow you can define a for loop,<br />\r\nfor(var x = 1; i &lt;= 5; i++)<br />\r\n<br />\r\nKeep in mind that in a For Loop, things are separated by semicolons(&quot;;&quot;).<br />\r\nNow to repeat our previous task 5 times, we have to use curly brackets(&ldquo;{}&rdquo;) to put the code we want to repeat.<br />\r\nfor(var x = 1; i &lt;= 5; i++) {<br />\r\n&nbsp;&nbsp;&nbsp; console.log(&ldquo;I love you&rdquo;);<br />\r\n}<br />\r\n<br />\r\nA Do...While loop is similar to a For Loop. From the name you can guess that a Do...While Loop will <strong>do</strong> something <strong>while</strong> a condition is true.<br />\r\nTo create a Do...While Loop, you first have to create a variable.<br />\r\nvar x = 1;',	'2020-04-26 05:39:27',	'2020-04-26 05:39:27'),
(401,	NULL,	NULL,	'Functions',	'To put it simply, a function does something!<br /><br />So a function can be a reusable task at any time and as many times as we would want.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	13,	'Firstly, to create a function we have to type in the structure:<br />\r\n<br />\r\nfunction function_name(){<br />\r\n&nbsp;&nbsp;&nbsp; // code<br />\r\n}<br />\r\n<br />\r\nWe start by defining the keyword &ldquo;function&rdquo;, naming it, having open and closed brackets, and a pair of curly brackets to place our code at.<br />\r\n<br />\r\nNow let&rsquo;s say we want to create a function that outputs &ldquo;Hello World&rdquo;. Let&rsquo;s create it!<br />\r\n<br />\r\nfunction HelloWorld(){<br />\r\n&nbsp;&nbsp;&nbsp; console.log(&ldquo;Hello World&rdquo;);<br />\r\n}<br />\r\n<br />\r\nfunction HelloWorld(){<br />\r\n&nbsp;&nbsp;&nbsp; console.log(&ldquo;Hello World&rdquo;);<br />\r\n}<br />\r\nHelloWorld();<br />\r\n<br />\r\nYou might have wondered what the brackets in the function mean. The brackets are meant to be used as parameters. A parameter is passed to a function as creating a variable to use in a function. So we would be able to pass values to a function in order for it to do calculations.<br />\r\n<br />\r\nLet&rsquo;s say we want to find the area of a rectangle. To create such a function we would create the following function:<br />\r\n<br />\r\nfunction area(num1, num2){<br />\r\n&nbsp;&nbsp;&nbsp; var Rec_Area = num1 * num2;<br />\r\n&nbsp;&nbsp;&nbsp; console.log(Rec_Area);<br />\r\n}<br />\r\narea(3, 5);<br />\r\n<br />\r\nThe values 3 and 5 will replace the variables num1 and num2 and will be used to perform the operation given inside the function.',	NULL,	'2020-04-26 05:41:15',	'2020-04-26 05:41:15'),
(402,	NULL,	NULL,	'Dialog Boxes',	'In JavaScript, this is where dialog boxes come in. A dialog box helps with sending those important messages to the user.<br />There are 3 types of them:<ul>	<li>Alert Dialog Box</li>	<li>Confirm Dialog Box</li>	<li>Prompt Dialog Box</li></ul>',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	13,	'An Alert Dialog Box is used to send a message or alert to the user. It can be used like this:<br />\r\n<br />\r\nalert(&ldquo;I love Programming Hero!&rdquo;);<br />\r\n<br />\r\nA Confirm Dialog Box can be used when you want to ask the user a question and or confirm something. Let&rsquo;s say we want to confirm if they want to keep using the website. We simply type the following:<br />\r\n<br />\r\nconfirm(&ldquo;Would you like to keep using our website?&rdquo;);<br />\r\n<br />\r\nIn a Prompt Dialog Box, you can take input from the user. For example, you can ask someone&rsquo;s age using a Prompt Dialog Box if you liked to.&nbsp;<br />\r\n<br />\r\nprompt(&ldquo;How old are you?&rdquo;);',	NULL,	'2020-04-26 05:42:10',	'2020-04-26 05:42:10'),
(403,	NULL,	NULL,	'take',	'Congrats! You are a JavaScript Master now!',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	13,	NULL,	NULL,	'2020-04-26 05:42:20',	'2020-04-26 05:42:20'),
(404,	NULL,	NULL,	'Dynamic nature',	'JavaScript makes a dead website alive!<br />It makes it up, running and active!<br /><br />The dynamic and interactive nature of a website can be done by using something called a DOM.<br /><br />Let&rsquo;s check that out!',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	14,	NULL,	NULL,	'2020-04-26 11:11:50',	'2020-04-26 11:11:50'),
(405,	NULL,	NULL,	'What is DOM?',	'When accessing a web page, the user generates a website&#39;s Document Object Model (DOM).<br /><br />The purpose of DOM is to give developers the ability to change the HTML, CSS after loading the website, using the power of Javascript.<br /><br />The architecture of the HTML DOM is built as an Object Tree:',	NULL,	'It controls the structure of HTML and CSS. It is exactly like a tree. It has branches that go into smaller but important parts that perform a function.',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	14,	NULL,	NULL,	'2020-04-26 11:12:20',	'2020-04-26 11:12:20'),
(406,	NULL,	NULL,	'What Will We Learn?',	'You can learn in the following chapters of this galaxy:&nbsp;<br /><br />How to modify the content of HTML elements&nbsp;<br />How to adjust the design of HTML elements&nbsp;<br />How to respond to Mod DOM events&nbsp;<br />How to attach and remove HTML elements',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	14,	NULL,	NULL,	'2020-04-26 11:12:41',	'2020-04-26 11:12:41'),
(407,	NULL,	NULL,	'Chapters',	'Our chapters will be Methods, Document, Element, HTML, CSS, Animations, Event, Event Listener, Navigation, Nodes, Connections, and Node Lists.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	14,	NULL,	NULL,	'2020-04-26 11:12:52',	'2020-04-26 11:12:52'),
(408,	NULL,	NULL,	'take',	'Let&rsquo;s get started!',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	14,	NULL,	NULL,	'2020-04-26 11:13:03',	'2020-04-26 11:13:03'),
(409,	NULL,	NULL,	'Methods',	'Methods are acts and tricks that you can perform on HTML elements. The HTML DOM properties are values you may set or alter from HTML Elements.<br /><br />This way, we are able to customize HTML Elements using CSS. It is the main reason why many websites don&rsquo;t look and feel alike.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	15,	NULL,	NULL,	'2020-04-26 11:13:49',	'2020-04-26 11:13:49'),
(410,	NULL,	NULL,	'Example',	'We&#39;re willing to change Code variables. We can show this through an illustration that adjusts the content of the &lt; p &gt; element&#39;s innerHTML by id=&quot;demo&rdquo;. This is just one of the examples of a method and there are many ways we can use methods to change an element.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	15,	NULL,	NULL,	'2020-04-26 11:14:00',	'2020-04-26 11:14:00'),
(411,	NULL,	NULL,	'Example',	'In the following code, we will show how the method is used:',	NULL,	'',	NULL,	'<html>\n<body>\n\n<p id=\"demo\"></p>\n\n<script>\ndocument.getElementById(\"demo\").innerHTML = \"I love programming!\";\n</script>\n\n</body>\n</html>',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	15,	NULL,	NULL,	'2020-04-26 11:14:32',	'2020-04-26 11:14:32'),
(412,	NULL,	NULL,	'getElementById',	'<strong>getElementById</strong> in the example above is used to find an element and style it from CSS.&nbsp;<br /><br /><strong>Id</strong> is the most common way to find an element or just select it.&nbsp;<br /><br />We used the id=&quot;demo&quot; to find the element. If you ever want to style a specific element, getElementById and id is a good way to do so.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	15,	NULL,	NULL,	'2020-04-26 11:14:49',	'2020-04-26 11:14:49'),
(413,	NULL,	NULL,	'innerHTML',	'The best way to obtain an element&#39;s content is by utilizing the properties&rsquo; innerHTML.<br /><br />The innerHTML property is useful for accessing or substituting HTML entity information. You can also use it on &lt;body&gt; and &lt;html&gt; elements.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	15,	NULL,	NULL,	'2020-04-26 11:15:04',	'2020-04-26 11:15:04'),
(414,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"Customizing HTML Elements\",\"question\":\"What can a method be used for?\",\"code\":null,\"option\":{\"1\":\"Completing your tasks\",\"2\":\"Nothing much\",\"3\":\"Customizing HTML Elements\"}}',	15,	NULL,	NULL,	'2020-04-26 11:15:35',	'2020-04-26 11:15:35'),
(415,	NULL,	NULL,	'take',	'Use methods to customize your HTML elements.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	15,	NULL,	NULL,	'2020-04-26 11:15:44',	'2020-04-26 11:15:44'),
(416,	NULL,	NULL,	'Documents',	'The document of HTML or CSS is where all the methods and architecture of them are stored. Going back to the Object Tree, it shows exactly how it&rsquo;s the building block in them.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	16,	NULL,	NULL,	'2020-04-26 11:16:29',	'2020-04-26 11:16:29'),
(417,	NULL,	NULL,	'Finding HTML Elements',	'There are 3 ways to find HTML Elements:<ul>	<li>document.getElementById(id)&nbsp;&nbsp;&nbsp;</li>	<li>document.getElementsByTagName(name)&nbsp;&nbsp;&nbsp;</li>	<li>document.getElementsByClassName(name)&nbsp;&nbsp;&nbsp;</li></ul>The 2 most popular ones are Id and Classes.&nbsp;<br />Tags are good for giving priority to an element. This can be useful when performing animations.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	16,	NULL,	NULL,	'2020-04-26 11:16:49',	'2020-04-26 11:16:49'),
(418,	NULL,	NULL,	'Properties',	'There are 3 properties in the document:<ul>	<li>element.innerHTML =&nbsp; new HTML content&nbsp;&nbsp;&nbsp;</li>	<li>element.attribute = new value&nbsp;&nbsp;&nbsp;</li>	<li>element.style.property = new style&nbsp;&nbsp;&nbsp;</li></ul>The <strong>innerHTML</strong> changes the inner HTML of an element.<br />The <strong>attribute</strong> changes the attribute of an element.&nbsp;<br />The <strong>style</strong> property changes the style of the element.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	16,	NULL,	NULL,	'2020-04-26 11:17:10',	'2020-04-26 11:17:10'),
(419,	NULL,	NULL,	'Method For Changing',	'There is only one Method for changing an HTML element. <strong>element.setAttribute(attribute, value)</strong> does this and allows you to change the attribute of an element as well.&nbsp;<br /><br />Each of these can influence the way you style and put together your webpage. It is important to understand that all of this can change the flow of a website.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	16,	NULL,	NULL,	'2020-04-26 11:17:33',	'2020-04-26 11:17:33'),
(420,	NULL,	NULL,	'Methods for Adding And Deleting Elements',	'There are 5 methods for creating or deleting elements.<ul>	<li>document.createElement(element)&nbsp;&nbsp;&nbsp;</li>	<li>document.removeChild(element)&nbsp;&nbsp;&nbsp;</li>	<li>document.appendChild(element)&nbsp;&nbsp;&nbsp;</li>	<li>document.replaceChild(new, old)&nbsp;&nbsp;&nbsp;</li>	<li>document.write(text)&nbsp;&nbsp;&nbsp;</li></ul>',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	16,	NULL,	'We can create, remove, add, replace, or output elements. This can be useful when we want to structure our website or create different workspaces for your webpage. If you like it consistently, you don&rsquo;t have to use all these methods.',	'2020-04-26 11:18:00',	'2020-04-26 11:18:00'),
(421,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"Documenting features\",\"question\":\"What can the documents be used for?\",\"code\":null,\"option\":{\"1\":\"Documenting features\",\"2\":\"Checking Architecture\",\"3\":\"Writing HTML & CSS Code\"}}',	16,	NULL,	NULL,	'2020-04-26 11:18:32',	'2020-04-26 11:18:32'),
(422,	NULL,	NULL,	'take',	'Documents can be used for documenting new features.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	16,	NULL,	NULL,	'2020-04-26 11:18:40',	'2020-04-26 11:18:40'),
(423,	NULL,	NULL,	'Elements',	'As we know, elements are the main part of HTML. They call for functions and each performs a specific task.&nbsp;<br /><br />Let&rsquo;s see how we can change and find them.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	17,	NULL,	NULL,	'2020-04-26 11:19:21',	'2020-04-26 11:19:21'),
(424,	NULL,	NULL,	'Finding Elements',	'Previously we looked at many ways we can use CSS to find HTML elements. The most commonly used being id. We can also use tags and classes.&nbsp;<br /><br />These are mainly referred to as selectors.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	17,	NULL,	NULL,	'2020-04-26 11:19:38',	'2020-04-26 11:19:38'),
(425,	NULL,	NULL,	'Example of ID',	'',	NULL,	'',	NULL,	'var myElement = document.getElementById(\"intro\");',	'true',	'If the element is located, the method returns the item as an object (in myElement).<br /><br />If the element is not located, it will contain null in myElement.',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	17,	NULL,	NULL,	'2020-04-26 11:20:06',	'2020-04-26 11:20:06'),
(426,	NULL,	NULL,	'Example of Tag',	'',	NULL,	'',	NULL,	'var x = document.getElementsByTagName(\"p\");',	NULL,	'We can also use Id &#39;main&#39; to find elements.',	'var x = document.getElementById(\"main\"); \nvar y = x.getElementsByTagName(\"p\");',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	17,	NULL,	NULL,	'2020-04-26 11:21:07',	'2020-04-26 11:21:07'),
(427,	NULL,	NULL,	'Example of Classes',	'',	NULL,	'',	NULL,	'var x = document.getElementsByClassName(\"intro\");',	NULL,	'This will allow you to find elements with a more OOP functionality if you are familiar with JavaScript, Java, or C++.',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	17,	NULL,	NULL,	'2020-04-26 11:21:28',	'2020-04-26 11:21:28'),
(428,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"ID\",\"question\":\"What is the most used type of CSS selector?\",\"code\":null,\"option\":{\"1\":\"Class\",\"2\":\"ID\",\"3\":\"Tag\"}}',	17,	NULL,	NULL,	'2020-04-26 11:21:58',	'2020-04-26 11:21:58'),
(429,	NULL,	NULL,	'take',	'Manipulate HTML elements with JavaScript DOM.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	17,	NULL,	NULL,	'2020-04-26 11:22:06',	'2020-04-26 11:22:06'),
(430,	NULL,	NULL,	'Changing HTML',	'Let&rsquo;s say we wanted to output the date and time. We can do so using the document.write() and a function that gives us the date and time.',	NULL,	'',	NULL,	'document.write(Date());',	'true',	'The above code from JavaScript will display this date and time. For the time this is being produced, the output will be:<br /><br />Mon Mar 16 2020 10:08:02 GMT-0500 (Central Daylight Time)',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	18,	NULL,	NULL,	'2020-04-26 11:23:44',	'2020-04-26 11:23:44'),
(431,	NULL,	NULL,	'Changing Content',	'We can also change HTML Content using the innerHTML property. We can use a specific syntax to do so. We need to include the document.getElementById().&nbsp;<br /><br />We can enter our Id inside the parenthesis and include the innerHTML method.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	18,	NULL,	NULL,	'2020-04-26 11:24:09',	'2020-04-26 11:24:09'),
(432,	NULL,	NULL,	'Syntax Example',	'The following demonstrates the syntax for changing content in HTML:',	NULL,	'',	NULL,	'document.getElementById(id).innerHTML = HTML',	NULL,	'Let&rsquo;s use it with the &lt;p&gt; element:',	'document.getElementById(\"p1\").innerHTML = \"Hello World!\";',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	18,	NULL,	NULL,	'2020-04-26 11:24:46',	'2020-04-26 11:24:46'),
(433,	NULL,	NULL,	'How does it work?',	'The example uses the &lt;p&gt; element with the &ldquo;p1&rdquo; id.<br /><br />The HTML DOM used the id &ldquo;p1&rdquo; to find the element.<br /><br />The innerHTML is the &ldquo;Hello World!&rdquo;. Any element with &ldquo;Hello World&rdquo; will be style with that exact id.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	18,	NULL,	NULL,	'2020-04-26 11:25:05',	'2020-04-26 11:25:05'),
(434,	NULL,	NULL,	'Attributes',	'We can change an HTML attribute using the .attribute instead of .innerHTML. The following syntax can use attribute:',	NULL,	'',	NULL,	'document.getElementById(id).attribute = value;',	NULL,	'We enter the id in the getElementById() and the attribute is attached to it.',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	18,	NULL,	NULL,	'2020-04-26 11:25:34',	'2020-04-26 11:25:34'),
(435,	NULL,	NULL,	'Example',	'We can demonstrate this using the &lt;img&gt; element. The following example will use this:',	NULL,	'',	NULL,	'document.getElementById(\"Image\").src = \"untitled.jpg\";',	NULL,	'The example code above shows how we used the id &ldquo;Image&rdquo; and an attribute to change the value to &ldquo;untitled.jpg&rdquo;.',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	18,	NULL,	NULL,	'2020-04-26 11:26:09',	'2020-04-26 11:26:09'),
(436,	NULL,	'hints|Try and run! Otherwise you can always go back and revise|The answer is &ldquo;inner&rdquo; because we are changing the output and using the class .innerHTML.|inner',	'Quiz',	'Fill in the blank:',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	'printsln',	'{\"soln\":\"inner\",\"tf1\":\"document.getElementById(&quot;p1&quot;).[blank]HTML = &quot;Hello World!&quot;;\"}',	NULL,	18,	NULL,	NULL,	'2020-04-26 11:27:43',	'2020-04-26 11:27:43'),
(437,	NULL,	NULL,	'take',	'Use HTML selectors to style HTML elements.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	18,	NULL,	NULL,	'2020-04-26 11:27:53',	'2020-04-26 11:27:53'),
(438,	NULL,	NULL,	'Changing HTML Design',	'Black and white movies or modern day movies?<br /><br />CSS makes pages like those modern day movies with colors, styles, effects and more!<br /><br />CSS is the main way we can style HTML. We can use Id and CSS properties to change HTML styles.<br /><br />The following syntax demonstrates this:',	NULL,	'',	NULL,	'document.getElementById(id).style.property = style',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	19,	NULL,	NULL,	'2020-04-26 11:29:45',	'2020-04-26 11:29:45'),
(439,	NULL,	NULL,	'Example',	'The following example uses the &lt;p&gt; element to change the style of HTML:',	NULL,	'',	NULL,	'<p id=\"p1\">Hello World!</p>\n\n<script>\ndocument.getElementById(\"p1\").style.color = \"red\";\n</script>',	'true',	'The JavaScript and HTML above are used to style the &ldquo;Hello World&rdquo; from the &lt;p&gt; element red. We used the p1 id to do so.',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	19,	NULL,	NULL,	'2020-04-26 11:30:20',	'2020-04-26 11:30:20'),
(440,	NULL,	NULL,	'Styling Events',	'The HTML DOM lets you run code with an event.&nbsp;<br /><br />An event is a code that runs when something occurs. This can be when an element is clicked, the page is loaded, or input has been added or changed. We will learn more about them in the following lessons.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	19,	NULL,	NULL,	'2020-04-26 11:30:38',	'2020-04-26 11:30:38'),
(441,	NULL,	NULL,	'Example',	'In the following example, we use the id &ldquo;idh1&rdquo; to style events:',	NULL,	'',	NULL,	'<h1 id=\"idh1\">Heading</h1>\n\n<button type=\"button\" \nonclick=\"document.getElementById(\'idh1\').style.color = \'red\'\"> \nButton</button>',	NULL,	'In the example above, we used the id &ldquo;idh1&rdquo; to load an event. We are using the id for many of these examples because they are common.',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	19,	NULL,	NULL,	'2020-04-26 11:31:34',	'2020-04-26 11:31:34'),
(442,	NULL,	NULL,	'Color',	'In the previous examples, we used style.color. We can also use other methods or properties. If you ever want to change the way you style any element, you can change the method or property after the id.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	19,	NULL,	NULL,	'2020-04-26 11:31:58',	'2020-04-26 11:31:58'),
(443,	NULL,	'hints|Go to the previous slides and try to recap.|The answer is <strong>style</strong><strong> </strong>because<strong> </strong>color is a part of an element&#39;s style.|style',	'Quiz',	'Fill in the blank:',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	'printsln',	'{\"soln\":\"style\",\"tf1\":\"document.getElementById(&quot;p1&quot;).[blank].color = &quot;red&quot;;\"}',	NULL,	19,	NULL,	NULL,	'2020-04-26 11:32:51',	'2020-05-02 21:33:05'),
(444,	NULL,	NULL,	'take',	'To style an element&rsquo;s color, you use the style.color keyword.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	19,	NULL,	NULL,	'2020-04-26 11:33:05',	'2020-04-26 11:33:05'),
(445,	NULL,	NULL,	'Events',	'Interactivity is the main aspect of a web page.<br /><br />In the previous lesson, we used events with CSS.&nbsp;<br /><br />Let&rsquo;s dig deeper into events to understand some common uses in HTML DOM...',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	20,	NULL,	NULL,	'2020-04-26 11:34:05',	'2020-04-26 11:34:05'),
(446,	NULL,	NULL,	'Reacting Events',	'There are many uses for events. Events can allow for other functions on the web page to occur. If the user performs a specific task then something triggers.<br /><br />We will demonstrate the uses later!',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	20,	NULL,	NULL,	'2020-04-26 11:34:22',	'2020-04-26 11:34:22'),
(447,	NULL,	NULL,	'Uses',	'Some examples of event usage can be:<ul>	<li>Click</li>	<li>Webpage Loading</li>	<li>Image Loading</li>	<li>Mouse Hovering</li>	<li>Input Changing</li>	<li>Form Submitted</li>	<li>Key Pressed</li></ul>',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	20,	NULL,	NULL,	'2020-04-26 11:34:38',	'2020-04-26 11:34:38'),
(448,	NULL,	NULL,	'Click',	'Here is an example that demonstrates when a &lt;h1&gt; element is clicked on:',	NULL,	'',	NULL,	'<h1 onclick=\"this.innerHTML = \'Thanks!\'\">Click me!</h1>',	'true',	'This will display &ldquo;Thanks!&rdquo; when the &lt;h1&gt; element is clicked on.',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	20,	NULL,	NULL,	'2020-04-26 11:35:35',	'2020-04-26 11:35:35'),
(449,	NULL,	NULL,	'Click Functions',	'We can also use a JavaScript function to create an event. We technically used this in the previous lesson to create an animation.',	NULL,	'',	NULL,	'<h1 onclick=\"change(this)\">Click me!</h1>\n\n<script>\nfunction change(id) {\n  id.innerHTML = \"Thanks!\";\n}\n</script>',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	20,	NULL,	NULL,	'2020-04-26 11:35:59',	'2020-04-26 11:35:59'),
(450,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"Of course\",\"question\":\"Events can be used inside functions, IF statements, loops, etc?\",\"code\":null,\"option\":{\"1\":\"Of course\",\"2\":\"Never\",\"3\":\"Maybe\"}}',	20,	NULL,	NULL,	'2020-04-26 11:36:32',	'2020-04-26 11:36:32'),
(451,	NULL,	NULL,	'take',	'You can use events inside statements.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	20,	NULL,	NULL,	'2020-04-26 11:36:39',	'2020-04-26 11:36:39'),
(453,	NULL,	NULL,	'Collections',	'It&#39;s time to use the magic of collection (arrays) that you learnt!<br /><br />Collections are stored in Objects. They have 1 property and 2 objects. Let&rsquo;s check how it is done.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	21,	NULL,	NULL,	'2020-04-26 11:37:58',	'2020-04-26 11:37:58'),
(454,	NULL,	NULL,	'Selecting Collection Object',	'We can select all &lt;p&gt; elements. We can use the getElementsByTagName() method to return an HTMLCollection Object.&nbsp;<br /><br />The following example shows this:',	NULL,	'',	NULL,	'var obj = document.getElementsByTagName(\"p\");',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	21,	NULL,	NULL,	'2020-04-26 11:38:22',	'2020-04-26 11:38:22'),
(455,	NULL,	NULL,	'Accessing HTMLCollection Object',	'In the example from the previous slide, we selected all the &lt;p&gt; elements using the getElementsByTagName() method. We can now access the values by declaring another variable and setting it equal to the HTMLCollection Object.',	NULL,	'',	NULL,	'var x = [1, 2, 3, 4];\n\nvar y = x[1];',	NULL,	'Keep in mind that we use indexes.',	'var x = document.getElementsByTagName(\"p\");',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	21,	NULL,	NULL,	'2020-04-26 11:39:00',	'2020-04-26 11:39:00'),
(456,	NULL,	NULL,	'HTML Collection Length Property',	'Another way to demonstrate this is by using the length property. This returns the value of elements in an HTMLCollection.&nbsp;<br /><br />We can create a collection of all &lt;p&gt; elements and display the length of the collection.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	21,	NULL,	NULL,	'2020-04-26 11:39:23',	'2020-04-26 11:39:23'),
(457,	NULL,	NULL,	'Example',	'Let&rsquo;s create this example for the &lt;p&gt; elements and display the length:',	NULL,	'',	NULL,	'var x = document.getElementsByTagName(\"p\"); \ndocument.getElementById(\"hello\").innerHTML = x.length;',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	21,	NULL,	NULL,	'2020-04-26 11:39:52',	'2020-04-26 11:39:52'),
(458,	NULL,	NULL,	'Use For Length',	'If we are trying to loop through elements, it is possible to use the length property to find the number of elements.<br /><br />If you want to verify the number of elements, then you can use an If statement to do so.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	21,	NULL,	NULL,	'2020-04-26 11:40:11',	'2020-04-26 11:40:11'),
(459,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"None of the above\",\"question\":\"What do collections contain?\",\"code\":null,\"option\":{\"1\":\"1 property, 3 objects\",\"2\":\"2 objects\",\"3\":\"None of the above\"}}',	21,	NULL,	NULL,	'2020-04-26 11:41:04',	'2020-04-26 11:41:04'),
(460,	NULL,	NULL,	'take',	'A collection contains 1 property and 2 objects.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	21,	NULL,	NULL,	'2020-04-26 11:41:13',	'2020-04-26 11:41:13'),
(461,	NULL,	NULL,	'Nodes',	'Just try to go back and recollect. DOM is like an Object <strong>tree </strong>and each endpoint of a tree in programming is called a node.&nbsp;<br /><br />Similarly, in DOM, a node is when you create a new HTML Elements. We will explain how that works exactly.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	22,	NULL,	NULL,	'2020-04-26 11:41:56',	'2020-04-26 11:41:56'),
(462,	NULL,	NULL,	'Create New HTML Element',	'Let&rsquo;s say we wanted to create a new &lt;p&gt; element. We can do so with the following code:',	NULL,	'',	NULL,	'var parameter = document.createElement(\"p\");',	NULL,	'Then we create a node. This will identify what our new element will do:',	'var node = document.createTextNode(\"Hello World\");',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	22,	NULL,	NULL,	'2020-04-26 11:42:44',	'2020-04-26 11:42:44'),
(463,	NULL,	NULL,	'Create New HTML Element',	'Then we can append the text node to the &lt;p&gt; element with the following code:<br /><br />parameter.appendChild(node);<br /><br />Then we have to append the new element to an existing element with the following code:<br /><br />var element = document.getElementById(&quot;div&quot;);<br /><br />Our appended code for the new element to the existing element will look like this:<br /><br />element.appendChild(parameter);',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	22,	NULL,	NULL,	'2020-04-26 11:44:09',	'2020-04-26 11:44:09'),
(464,	NULL,	NULL,	'Final Product',	'Our final product will look similar to below,',	NULL,	'',	NULL,	'<div id=\"div\">\n  <p id=\"p1\">Hello World</p>\n  <p id=\"p2\">I love programming!</p>\n</div>\n\n<script>\nvar parameter = document.createElement(\"p\");\nvar node = document.createTextNode(\"Do you?\");\nparameter.appendChild(node);\n\nvar element = document.getElementById(\"div\");\nelement.appendChild(parameter);\n</script>',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	22,	NULL,	NULL,	'2020-04-26 11:44:40',	'2020-04-26 11:44:40'),
(465,	NULL,	NULL,	'insertBefore(), remove()',	'We can use insertBefore() as a method if we don&rsquo;t want to append the new element to the last child of a parent.<br /><br />You can also use the remove() to remove an HTML element and can also use it to remove a child node.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	22,	NULL,	NULL,	'2020-04-26 11:45:03',	'2020-04-26 11:45:03'),
(466,	NULL,	'hints|What are we learning about right now?|We need to use nodes to append a parameter child.|node',	'Quiz',	'Fill in the blank:',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	'printsln',	'{\"soln\":\"node\",\"tf1\":\"&lt;div id=&quot;div&quot;&gt;<br \\/>\\r\\n&nbsp;&nbsp;&lt;p id=&quot;p1&quot;&gt;Hello World&lt;\\/p&gt;<br \\/>\\r\\n&nbsp;&nbsp;&lt;p id=&quot;p2&quot;&gt;I love programming!&lt;\\/p&gt;<br \\/>\\r\\n&lt;\\/div&gt;<br \\/>\\r\\n&lt;script&gt;<br \\/>\\r\\nvar parameter = document.createElement(&quot;p&quot;);<br \\/>\\r\\nvar node = document.createTextNode(&quot;Do you?&quot;);<br \\/>\\r\\nparameter.appendChild([blank]);<br \\/>\\r\\nvar element = document.getElementById(&quot;div&quot;);<br \\/>\\r\\nelement.appendChild(parameter);<br \\/>\\r\\n&lt;\\/script&gt;\"}',	NULL,	22,	NULL,	NULL,	'2020-04-26 11:47:42',	'2020-04-26 11:47:42'),
(467,	NULL,	NULL,	'take',	'Use nodes to append elements.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	22,	NULL,	NULL,	'2020-04-26 11:47:56',	'2020-04-26 11:47:56'),
(468,	NULL,	NULL,	'Completionist',	'Congratulations! You have successfully completed the DOM Manipulation Galaxy.<br />Let&rsquo;s review the things we learned.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	23,	NULL,	NULL,	'2020-04-26 11:48:41',	'2020-04-26 11:48:41'),
(469,	NULL,	NULL,	'Methods',	'We learned what methods are and how we can use them to select elements like the &lt;p&gt; element.<br /><br />We learned the different ways that we can add, select, and delete elements. We learned the different types of properties and methods for them.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	23,	NULL,	NULL,	'2020-04-26 11:48:52',	'2020-04-26 11:48:52'),
(470,	NULL,	NULL,	'HTML/CSS Changing',	'We learned what elements are and how we can select them through id, tag, and class.&nbsp;<br /><br />We learned DOM Manipulation is used in HTML and CSS.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	23,	NULL,	NULL,	'2020-04-26 11:49:07',	'2020-04-26 11:49:07'),
(471,	NULL,	NULL,	'Nodes',	'We learned what events are and how they can be used to create animations. They can also be used to perform other actions.<br /><br />We learned about collections and nodes. You are also familiar with different properties for nodes and how to create a new element.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	23,	NULL,	NULL,	'2020-04-26 11:49:20',	'2020-04-26 11:49:20'),
(472,	NULL,	NULL,	'take',	'Great learning DOM! Happy Coding!',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	23,	NULL,	NULL,	'2020-04-26 11:49:29',	'2020-04-26 11:49:29'),
(473,	NULL,	NULL,	'What is ECMA?',	'Let&rsquo;s build upon our JavaScript in this Galaxy. We explain all about the ES6, but first we need to explain what the ECMA is.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	24,	NULL,	NULL,	'2020-04-26 13:50:48',	'2020-04-26 13:50:48'),
(474,	NULL,	NULL,	'What is ECMA?',	'ECMA stands for European Computer Manufacturers Association. They are standardized in programming, mainly involving input and output.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	24,	NULL,	NULL,	'2020-04-26 13:51:13',	'2020-04-26 13:51:13'),
(475,	NULL,	NULL,	'What is ES & ES6?',	'ES or ECMAScript is a scripting language for JavaScript. It forms the very basis of the language. Many of the functions used in JavaScript are built off of ES.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	24,	NULL,	NULL,	'2020-04-26 13:51:57',	'2020-04-26 13:51:57'),
(476,	NULL,	NULL,	'What will we learn?',	'We will explain those functions to understand how ES works with JavaScript to form a better platform for the language.<br /><br />ES6 is the new and updated version of ES. It adds many new Syntax so whether you already know ES or are new, this Galaxy will explain all the new features + the old ones.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	24,	NULL,	NULL,	'2020-04-26 13:52:26',	'2020-04-26 13:52:26'),
(477,	NULL,	NULL,	'take',	'Let&rsquo;s learn what&rsquo;s new!',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	24,	NULL,	NULL,	'2020-04-26 13:52:33',	'2020-04-26 13:52:33'),
(478,	NULL,	NULL,	'Variable Scope',	'No! It&rsquo;s not the scope of your gun in PUBG that we are discussing.<br /><br />A variable&rsquo;s scope is the level that can be accessed. If I have a glass of water in front of me, I can take my hand and pick it up. If the glass of water is in another city, I have to move over and do work to get it.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	25,	NULL,	NULL,	'2020-04-26 13:56:09',	'2020-04-26 13:56:09'),
(479,	NULL,	NULL,	'Declaration',	'A variable declaration for &ldquo;var&rdquo; is that you can access it anywhere, except a function. This can sometimes be a security issue for some programs.&nbsp;<br /><br />They have to manage the access level for a variable in case any 3rd-party-program decides to access that variable through the CPU.<br /><br />This is where <strong>Let</strong> comes in!',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	25,	NULL,	NULL,	'2020-04-26 13:56:22',	'2020-04-26 13:56:22'),
(480,	NULL,	NULL,	'What is Let?',	'<strong>Let</strong> is a statement that declares a block scope that makes it a local variable. This means the variable can only be accessed where it was created.&nbsp;<br /><br />If you created a function and used the Let declaration inside it, then you would not be able to access that variable outside that function.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	25,	NULL,	NULL,	'2020-04-26 13:56:37',	'2020-04-26 13:56:37'),
(481,	NULL,	NULL,	'Example',	'',	NULL,	'',	NULL,	'let num = 2;\nconsole.log(num); // 2\nfunction fun() {\n    let num = 4;\n    console.log(num); // 4\n}\nfun()\nconsole.log(num); // 2',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	25,	NULL,	NULL,	'2020-04-26 13:57:03',	'2020-04-26 13:57:03'),
(482,	NULL,	NULL,	'Explanation',	'Because we declared the <strong>num</strong> variable as Let outside the function, we can&rsquo;t access the one inside the function.&nbsp;<br /><br />The Let located inside the function had a value of 4 but since we declared the variable as 2 outside the function and accessed it outside the function, we get an output of 2.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	25,	'In ES6, if you try to access a Let before its declaration, you will get a ReferenceError.<br />\r\nThere are many reasons to use Let.&nbsp;<br />\r\n<br />\r\nOne, it is good for catching errors in the code. Two, it is a good way to guard the code using different mechanisms. It may also improve run-time.',	NULL,	'2020-04-26 13:57:42',	'2020-04-26 13:57:42'),
(483,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"False\",\"question\":\"You can use a Let variable anywhere.\",\"code\":null,\"option\":{\"1\":\"True\",\"2\":\"False\",\"3\":\"Maybe\"}}',	25,	NULL,	NULL,	'2020-04-26 13:58:13',	'2020-04-26 13:58:13'),
(484,	NULL,	NULL,	'take',	'Use let declaration to control the variable scope',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	25,	NULL,	NULL,	'2020-04-26 13:58:22',	'2020-04-26 13:58:22'),
(485,	NULL,	NULL,	'Template Strings',	'Time to learn something new and interesting!<br /><br /><strong>Template Strings</strong> allow you to embed content in the webpage.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	26,	NULL,	NULL,	'2020-04-26 14:00:13',	'2020-04-26 14:00:13'),
(486,	NULL,	NULL,	'Types',	'There are many types of literals, but 2 of the new ones in ES6 are:<ul>	<li><strong>Template Literals</strong> - Strings Literals supporting interpolation and multiple lines.</li>	<li><strong>Tagged Template Literals</strong> - Use functions and mainly calling them via Template Literals.</li></ul>',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	26,	NULL,	NULL,	'2020-04-26 14:00:27',	'2020-04-26 14:00:27'),
(487,	NULL,	NULL,	'Template Literals',	'This literal allows you to use multiple lines. They allow you to use enclosed back-tick &lsquo;...&rsquo; characters instead of double or single quotes.<br /><br />They can be expressed by using the Dollar Sign and curly brackets &ldquo;{$...}&rdquo;.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	26,	NULL,	NULL,	'2020-04-26 14:00:42',	'2020-04-26 14:00:42'),
(488,	NULL,	NULL,	'Example',	'',	NULL,	'',	NULL,	'var a = 5\nvar b = 10;\nconsole.log(`Addition for ${a} and ${b} is the ${a+b}`);\nvar user = {name: \"gns\"};\nconsole.log(`Current User: ${user.name.toUpperCase()}.`);',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	26,	NULL,	NULL,	'2020-04-26 14:01:01',	'2020-04-26 23:09:59'),
(489,	NULL,	NULL,	'Tagged Template Literals',	'Tagged Template Literals are more advanced than Template Literals. You are able to modify the output and use functions in the code.&nbsp;<br /><br />You can edit the first and second argument in the code.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	26,	NULL,	NULL,	'2020-04-26 14:01:15',	'2020-04-26 14:01:15'),
(490,	NULL,	NULL,	'Tagged Template Literals',	'Any argument after the first one will be considered processed or cooked.&nbsp;<br /><br />The only special aspect of it is the ability to modify the output. In the example below, you are able to change the value for &ldquo;person&rdquo;.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	26,	NULL,	NULL,	'2020-04-26 14:01:34',	'2020-04-26 14:01:34'),
(491,	NULL,	NULL,	'Example',	'',	NULL,	'',	NULL,	'let person = \'Mike\'; \nlet age = 28; \nfunction myTag(strings, personExp, ageExp) { \nlet str0 = strings[0]; // \"That \" \nlet str1 = strings[1]; // \" is a \" \n// There is technically a string after \n// the final expression (in our example), \n// but it is empty (\"\"), so disregard. \n// var str2 = strings[2]; \nlet ageStr; \nif (ageExp > 99){ \nageStr = \'centenarian\'; \n} else { \nageStr = \'youngster\'; \n} \n// We can even return a string built using a template literal \nreturn `${str0}${personExp}${str1}${ageStr}`; \n} \nlet output = myTag`That ${ person } is a ${ age }`; console.log(output); \n// That Mike is a youngster',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	26,	NULL,	NULL,	'2020-04-26 14:01:51',	'2020-04-26 23:18:15'),
(492,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"Yes\",\"question\":\"Template Strings allow you to embed content in the webpage.\",\"code\":null,\"option\":{\"1\":\"Yes\",\"2\":\"No\",\"3\":\"Maybe\"}}',	26,	NULL,	NULL,	'2020-04-26 14:02:21',	'2020-04-26 14:02:21'),
(493,	NULL,	NULL,	'take',	'Use template strings with arrays.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	26,	NULL,	NULL,	'2020-04-26 14:02:30',	'2020-04-26 14:02:30'),
(494,	NULL,	NULL,	'What are Constants?',	'Remember your bank account number?<br /><br />It remains constant right? It does not change like a variable.<br /><br />Thus, there are many scenarios where we need the values to remain constant!<br /><br />Here comes in Constants in JavaScript',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	27,	NULL,	NULL,	'2020-04-26 14:03:21',	'2020-04-26 14:03:21'),
(495,	NULL,	NULL,	'What are Constants?',	'<strong>Const</strong> is similar to Let, but the variable has to be initialized when declared.&nbsp;<br /><br />You can also not change the value of a const once it is declared and initialized.&nbsp;<br /><br />It becomes a read-only reference.&nbsp;',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	27,	NULL,	NULL,	'2020-04-26 14:03:34',	'2020-04-26 14:03:34'),
(496,	NULL,	NULL,	'Example',	'',	NULL,	'',	NULL,	'const x;\nconsole.log(x); // Missing Initialization',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	27,	NULL,	NULL,	'2020-04-26 14:04:02',	'2020-04-26 14:04:02'),
(497,	NULL,	NULL,	'Incorrect',	'Since the value can&rsquo;t be changed, we get an error if we try to change it:',	NULL,	'',	NULL,	'const x = 4;\nconsole.log(x); // 4\nx = 5;\nconsole.log(x); // Variable ‘x’ has already been declared and initialized',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	27,	NULL,	NULL,	'2020-04-26 14:04:24',	'2020-04-26 14:04:24'),
(498,	NULL,	NULL,	'Explanation',	'We created a variable and the declaration type was <strong>const</strong>. This means the variable cannot be changed, and so when we tried to change it, we got an error.<br /><br />Let&rsquo;s see what the scope for the constants are.',	NULL,	'',	NULL,	'const Scope:\n\nconst x = 4;\nfunction fun() {\n    const x = 5;\n    if(true) {\n        const x = 6;\n        console.log(x); // 6\n    }\n    console.log(x); // 5\n}\nconsole.log(x); // 4\nfun();\n// Outputs\n// 4\n// 6\n// 5',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	27,	NULL,	NULL,	'2020-04-26 14:04:49',	'2020-04-26 14:04:49'),
(499,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"They cannot be changed\",\"question\":\"What makes constants special?\",\"code\":null,\"option\":{\"1\":\"They are god gifted\",\"2\":\"They have superpowers\",\"3\":\"They cannot be changed\"}}',	27,	NULL,	NULL,	'2020-04-26 14:05:23',	'2020-04-26 14:05:23'),
(500,	NULL,	NULL,	'take',	'Use const to keep the values of variables constant.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	27,	NULL,	NULL,	'2020-04-26 14:05:30',	'2020-04-26 14:05:30'),
(501,	NULL,	NULL,	'What is for...of?',	'Bored of old for loops? Here&rsquo;s something interesting.<br /><br />For...of is a new loop added to ES6. It replaces for-in and forEach(). It also supports the iteration protocol.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	28,	NULL,	NULL,	'2020-04-26 14:06:16',	'2020-04-26 14:06:16'),
(502,	NULL,	NULL,	'Syntax',	'The for...of loop syntax is specific to collections, rather than objects.&nbsp;<br />For...of iterates the overall properties of an object.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	28,	NULL,	NULL,	'2020-04-26 14:06:30',	'2020-04-26 14:06:30'),
(503,	NULL,	NULL,	'How to use for...of?',	'The syntax for the for...of is:',	NULL,	'',	NULL,	'for(variable of iterable) {\n    // code\n}',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	28,	NULL,	NULL,	'2020-04-26 14:06:44',	'2020-04-26 14:06:44'),
(504,	NULL,	NULL,	'How to use for...of?',	'Using for...of uses less code. This can be much more efficient when using an array.',	NULL,	'',	NULL,	'var values = [“one”, “two”];\nfor(let value of values) {\n    console.log(“Value is: “+value);\n}',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	28,	NULL,	NULL,	'2020-04-26 14:07:04',	'2020-04-26 14:07:04'),
(505,	NULL,	NULL,	'Why use it?',	'For more efficient looping systems, the new for...of loop is recommended.&nbsp;<br /><br />In many cases, having 2 different loops related to each other can sometimes create unbalanced collections for an object. This can lead to security issues.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	28,	NULL,	NULL,	'2020-04-26 14:07:18',	'2020-04-26 14:07:18'),
(506,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"All of the above\",\"question\":\"What does for...of replace?\",\"code\":null,\"option\":{\"1\":\"For-in\",\"2\":\"forEach()\",\"3\":\"All of the above\"}}',	28,	NULL,	NULL,	'2020-04-26 14:07:57',	'2020-04-26 14:07:57'),
(507,	NULL,	NULL,	'take',	'The new loop replaces for-in and forEach() loops.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	28,	NULL,	NULL,	'2020-04-26 14:08:05',	'2020-04-26 14:08:05'),
(508,	NULL,	NULL,	'Arrow Functions',	'What is it? Function that fires an arrow? Of course not!<br /><br />We love shortcuts, don&rsquo;t we? That&rsquo;s what arrow functions are for!<br /><br />Arrow functions are anonymous functions created to be more efficient than traditional functions.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	29,	NULL,	NULL,	'2020-04-26 14:08:47',	'2020-04-26 14:08:47'),
(509,	NULL,	NULL,	'Benefits',	'They have 2 benefits:<ol>	<li>Shorter Syntax</li>	<li>Lexical Scope</li></ol>We will see how we can create one.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	29,	NULL,	NULL,	'2020-04-26 14:09:02',	'2020-04-26 14:09:02'),
(510,	NULL,	NULL,	'How to use an Arrow Function?',	'To create an Arrow function with no parameters, your code should look like this:',	NULL,	'',	NULL,	'let intro = () => “Welcome”;',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	29,	NULL,	NULL,	'2020-04-26 14:09:25',	'2020-04-26 14:09:25'),
(511,	NULL,	NULL,	'Hard Way',	'It is the same thing as typing:',	NULL,	'',	NULL,	'let intro = function intro() {\n    return “Welcome”;\n};',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	29,	NULL,	NULL,	'2020-04-26 14:09:46',	'2020-04-26 14:09:46'),
(512,	NULL,	NULL,	'map()',	'You can also use the Arrow Function with &lsquo;map&rsquo;:',	NULL,	'',	NULL,	'const arr = [1, 2, 3];\nconst squares = arr.map(x => x * x);',	NULL,	'This is the same thing as typing:',	'let arr = [1, 2, 3];\nconst squares = arr.map(function (x) {\n    return x * x;\n});',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	29,	NULL,	NULL,	'2020-04-26 14:10:25',	'2020-04-26 14:10:25'),
(513,	NULL,	NULL,	'Why use it?',	'This new Arrow Function creates a similar format to the switch statement from Kotlin.&nbsp;<br /><br />ES6 brings that same mindset to JavaScript which makes it have potential in using such efficient technology.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	29,	NULL,	NULL,	'2020-04-26 14:10:48',	'2020-04-26 14:10:48'),
(514,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"All of the above\",\"question\":\"Why would you use Arrow Functions over normal functions?\",\"code\":null,\"option\":{\"1\":\"It is easier to use\",\"2\":\"It is faster\",\"3\":\"All of the above\"}}',	29,	NULL,	NULL,	'2020-04-26 14:11:11',	'2020-04-26 14:11:11'),
(515,	NULL,	NULL,	'take',	'Use arrow functions for a shorter syntax when creating a function.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	29,	NULL,	NULL,	'2020-04-26 14:11:19',	'2020-04-26 14:11:19'),
(516,	NULL,	NULL,	'What are Rest Parameters?',	'ES6 is all about some tricks!&nbsp;<br /><br />Here&rsquo;s another:<br />By putting the rest operator &lsquo;<strong>...</strong>&rsquo; in front of the last parameter, it means that it will get all the remaining parameters. This is mainly useful when it comes to an Array.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	30,	NULL,	NULL,	'2020-04-26 14:12:07',	'2020-04-26 14:12:07'),
(517,	NULL,	NULL,	'Example',	'Let&rsquo;s say you wanted to write to 1000 but are too lazy to. You would write down &ldquo;every number from 1 to 1000&rdquo; or &ldquo;all numbers before 1000&rdquo;.&nbsp;<br /><br />The Rest Parameter/Operator does exactly that by saving you some time if you are dealing with a big array.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	30,	NULL,	NULL,	'2020-04-26 14:12:20',	'2020-04-26 14:12:20'),
(518,	NULL,	NULL,	'How to use the Rest Operator?',	'Mainly the only difference from a normal parameter is that it will be shorter by including the &lsquo;...&rsquo; rest operator.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	30,	NULL,	NULL,	'2020-04-26 14:12:32',	'2020-04-26 14:12:32'),
(519,	NULL,	NULL,	'Example',	'',	NULL,	'',	NULL,	'function student(name, ...john) {\n    console.log(name);\n    console.log(john); \n}\nstudent(‘myname’, 10, 20, 30, 40, 50);',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	30,	NULL,	NULL,	'2020-04-26 14:12:46',	'2020-04-26 14:12:46'),
(520,	NULL,	NULL,	'Explanation',	'In the previous example, we used the &lsquo;...&rsquo; operator to declare any and all values in the array. This allows for more efficiency!<br /><br />Does it feel like most of this update is based on security and efficiency?&nbsp;',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	30,	NULL,	NULL,	'2020-04-26 14:13:05',	'2020-04-26 14:13:05'),
(521,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"....\",\"question\":\"Identify the syntax of rest parameters,\",\"code\":null,\"option\":{\"1\":\"....\",\"2\":\"---\",\"3\":\"_ _ _\"}}',	30,	NULL,	NULL,	'2020-04-26 14:13:30',	'2020-04-26 14:13:30'),
(522,	NULL,	NULL,	'take',	'Use the rest operator to have an easier way of implementing arrays to a function.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	30,	NULL,	NULL,	'2020-04-26 14:13:37',	'2020-04-26 14:13:37'),
(523,	NULL,	NULL,	'New ES6 Modules',	'As humans, we are lazy! We want shortcuts, we want reusability! And, ES6 is all about that.<br /><br />Let&rsquo;s check how&hellip;<br /><br />Modules in JavaScript use a wrap of public and private methods into a single entity. These are not visible outside unless we explicitly export them.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	31,	NULL,	NULL,	'2020-04-26 14:14:17',	'2020-04-26 14:14:17'),
(524,	NULL,	NULL,	'ES6',	'In ES6, modules are stored in files. There is no special module keyword. You are however able to import and export them.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	31,	NULL,	NULL,	'2020-04-26 14:14:27',	'2020-04-26 14:14:27'),
(525,	NULL,	NULL,	'Using ES6 Methods',	'Let&rsquo;s create an example of how the modules in ES6 will work.<br /><br />generateRandow() generates a random number.<br /><br />sum() adds two numbers.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	31,	NULL,	NULL,	'2020-04-26 14:14:46',	'2020-04-26 14:14:46'),
(526,	NULL,	NULL,	'Example',	'',	NULL,	'',	NULL,	'function getRandom() {\n    return Math.random();\n}\nfunction getSum(x, y) {\n    return x + y;\n}\nexport { getRandomNumber, getSum }',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	31,	NULL,	NULL,	'2020-04-26 14:15:13',	'2020-04-26 14:15:13'),
(527,	NULL,	NULL,	'Importing',	'You can also import:',	NULL,	'',	NULL,	'import { getRandomNumber, getSum } from \'./utils’;\nconsole.log(getRandomNumber());\nsonsole.log(getSum(5, 7));',	NULL,	'This can allow for higher performance since you are not stuck with already created modules that are useless as a file.',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	31,	NULL,	NULL,	'2020-04-26 14:15:48',	'2020-04-26 14:16:00'),
(528,	NULL,	'hints|Glance through the previous slides to get an idea of what the word is.|The answer is <strong>export</strong> because the keyword export is used to process or export the code outside to be used elsewhere.|export',	'Quiz',	'Fill in the blank:',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	'printsln',	'{\"soln\":\"export\",\"tf1\":\"function getRandom() {<br \\/>\\r\\n&nbsp;&nbsp;&nbsp; return Math.random();<br \\/>\\r\\n}<br \\/>\\r\\nfunction getSum(x, y) {<br \\/>\\r\\n&nbsp;&nbsp;&nbsp; return x + y;<br \\/>\\r\\n}<br \\/>\\r\\n[blank] { getRandomNumber, getSum }\"}',	NULL,	31,	NULL,	NULL,	'2020-04-26 14:16:58',	'2020-05-02 21:34:59'),
(529,	NULL,	NULL,	'take',	'Use the export keyword to export your modules.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	31,	NULL,	NULL,	'2020-04-26 14:17:06',	'2020-04-26 14:17:06'),
(530,	NULL,	NULL,	'Object and Array Destruction',	'The destructuring assignment syntax is a JavaScript expression that makes it possible to unpack values from arrays, or properties from objects, into distinct variables.',	NULL,	'',	NULL,	'let a, b, rest;\n[a, b] = [10, 20];\nconsole.log(a); // 10\nconsole.log(b); // 20\n\n[a, b, ...rest] = [10, 20, 30, 40, 50];\nconsole.log(a); // 10\nconsole.log(b); // 20\nconsole.log(rest); // [30, 40, 50]\n\n({ a, b } = { a: 10, b: 20 });\nconsole.log(a); // 10\nconsole.log(b); // 20\n\n\n// Stage 4(finished) proposal\n({a, b, ...rest} = {a: 10, b: 20, c: 30, d: 40});\nconsole.log(a); // 10\nconsole.log(b); // 20\nconsole.log(rest); // {c: 30, d: 40}',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	32,	NULL,	NULL,	'2020-04-26 14:18:25',	'2020-04-26 14:18:25'),
(531,	NULL,	NULL,	'What is a WeakSet?',	'A WeakSet allows you to store objects weakly held in a collection.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	32,	NULL,	NULL,	'2020-04-26 14:18:39',	'2020-04-26 14:18:39'),
(532,	NULL,	NULL,	'Types',	'There are only 3 methods, and all of them work the same as Set methods:<ul>	<li>WeakSet.prototype.add(value)</li>	<li>WeakSet.prototype.has(value)</li>	<li>WeakSet.prototype.delet(values)</li></ul>',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	32,	NULL,	NULL,	'2020-04-26 14:18:53',	'2020-04-26 14:18:53'),
(533,	NULL,	NULL,	'WeakSet.prototype.add(value)',	'First, we create the variables and add the window and the obj using <strong>.add</strong>.',	NULL,	'',	NULL,	'var ws = new WeakSet();\nvar obj = {};\nvar foo = {};\n\nws.add(window);\nws.add(obj);',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	32,	NULL,	NULL,	'2020-04-26 14:19:18',	'2020-04-26 14:19:18'),
(534,	NULL,	NULL,	'WeakSet.prototype.has(value)',	'Now, we check to see if it &ldquo;<strong>has</strong>&rdquo; the following parameter.',	NULL,	'',	NULL,	'ws.has(window);\nws.has(obj);\n\nws.has(window); // true\nws.has(foo); // false',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	32,	NULL,	NULL,	'2020-04-26 14:19:43',	'2020-04-26 14:19:43'),
(535,	NULL,	NULL,	'WeakSet.prototype.delet(values)',	'Now, we can delete them using <strong>.delete</strong>.',	NULL,	'',	NULL,	'ws.delete(window); // removes window from set\nws.has(window); // false',	NULL,	'This can be a good way to verify a set or collection when dealing with multiple objects.',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	32,	NULL,	NULL,	'2020-04-26 14:20:09',	'2020-04-26 14:20:09'),
(536,	NULL,	NULL,	'take',	'Use the .add, .has, and .delete keywords to perform those actions.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	32,	NULL,	NULL,	'2020-04-26 14:20:16',	'2020-04-26 14:20:16'),
(537,	NULL,	NULL,	'Completionist',	'Congratulations! You have learned the new features that have been added in the new ES6 update. We learned about Template Strings, Let, Constants, for...of, Arrow Functions, Rest Parameters, Modules, and WeakSet.<br /><br />Let&rsquo;s revise!',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	33,	NULL,	NULL,	'2020-04-26 14:20:55',	'2020-04-26 14:20:55'),
(538,	NULL,	NULL,	'Template Strings',	'This literal allows you to use multiple lines. They allow you to use enclosed back-tick &lsquo;<strong>...</strong>&rsquo; characters instead of double or single quotes.<br /><br />They can be expressed by using the Dollar Sign and curly brackets &ldquo;<strong>{$...}</strong>&rdquo;.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	33,	'var a = 5, b = 10;<br />\r\nconsole.log(&ldquo;Addition for ${a} and ${b} is the ${a+b}&rdquo;);<br />\r\nvar user = {name: &ldquo;gns&rdquo;};<br />\r\nconsole.log(&ldquo;Current User: ${user.name.toUpperCase()}.&rdquo;);',	NULL,	'2020-04-26 14:21:23',	'2020-04-26 14:21:23'),
(539,	NULL,	NULL,	'let',	'<strong>let</strong> is a statement that declares a block scope that makes it a local variable. This means the variable can only be accessed where it was created. If you created a function and used the Let declaration inside it, then you would not be able to access that variable outside that function.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	33,	NULL,	'let num = 2;<br />\r\nconsole.log(value); // 2<br />\r\nfunction fun() {<br />\r\n&nbsp;&nbsp;&nbsp; let num = 4;<br />\r\n&nbsp;&nbsp;&nbsp; console.log(num); // 4<br />\r\n}<br />\r\nfun()<br />\r\nconsole.log(num); // 2',	'2020-04-26 14:21:49',	'2020-04-26 14:21:49'),
(540,	NULL,	NULL,	'Constants',	'You can also not change the value of a const once it is declared and initialized.&nbsp;<br /><br />It becomes a read-only reference.',	NULL,	'',	NULL,	'const x;\nconsole.log(x); // Missing Initialization',	NULL,	'Since the value can&rsquo;t be changed, we get an error if we try to change it:',	'const x = 4;\nconsole.log(x); // 4\nx = 5;\nconsole.log(x); // Variable ‘x’ has already been declared and initialized.',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	33,	NULL,	NULL,	'2020-04-26 14:22:42',	'2020-04-26 14:22:42'),
(541,	NULL,	NULL,	'For...of',	'The for...of loop syntax is specific to collections, rather than objects.&nbsp;<br /><br />For...of iterates over all properties of an object.&nbsp;<br /><br />The syntax for the for...of is:<br /><br />for(variable of iterable) {<br />&nbsp;&nbsp;&nbsp; // code<br />}<br />Using for...of uses less code. This can be much more efficient when using an array.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	33,	'var values = [&ldquo;one&rdquo;, &ldquo;two&rdquo;];<br />\r\nfor(let value of values) {<br />\r\n&nbsp;&nbsp;&nbsp; console.log(&ldquo;Value is: &ldquo;+value);<br />\r\n}',	NULL,	'2020-04-26 14:23:30',	'2020-04-26 14:23:30'),
(542,	NULL,	NULL,	'Arrow Functions',	'Arrow functions are anonymous functions created to be more efficient than traditional functions.&nbsp;<br />They have 2 benefits:<ol>	<li>Shorter Syntax</li>	<li>Lexical Scope</li></ol>To create an Arrow function with no perameters, your code will look like this:',	NULL,	'',	NULL,	'var intro = () => “Welcome”;\n\n//This is the same thing as typing-\n\nvar intro = function intro() {\n    return “Welcome”;\n};',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	33,	NULL,	NULL,	'2020-04-26 14:24:05',	'2020-04-26 14:24:05'),
(543,	NULL,	NULL,	'Rest Parameters',	'Mainly the only difference from a normal parameter is that it will be shorter by including the &lsquo;...&rsquo; rest operator.',	NULL,	'',	NULL,	'function student(name, ...john) {\n    console.log(name);\n    console.log(john); \n}\nstudent(‘myname’, 10, 20, 30, 40, 50);',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	33,	'In the above example, we used the &lsquo;...&rsquo; operator to declare any and all values in the array. This allows for more efficiency!',	NULL,	'2020-04-26 14:24:34',	'2020-04-26 14:24:34'),
(544,	NULL,	NULL,	'Modules',	'In ES6, modules are stored in files. There is no special module keyword. You are however able to import and export them.<br /><br />Below is an example of how the modules in ES6 will work.<br /><br />generateRandow() generates a random number.<br /><br />sum() adds two numbers.',	NULL,	'',	NULL,	'function getRandom() {\n    return Math.random();\n}\nfunction getSum(x, y) {\n    return a + b;\n}\nexport { getRandomNumber, getSum }',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	33,	NULL,	'You can also import:<br />\r\nimport { getRandomNumber, getSum } from &lsquo;./utils&rsquo;;<br />\r\nconsole.log(getRandomNumber());<br />\r\nsonsole.log(getSum(5, 7));',	'2020-04-26 14:25:13',	'2020-04-26 14:25:13'),
(545,	NULL,	NULL,	'WeakSet',	'A WeakSet allows you to store objects weakly held in a collection.<br />There are only 3 methods, and all of them work the same as Set methods:<ul>	<li>WeakSet.prototype.add(value)</li>	<li>WeakSet.prototype.has(value)</li>	<li>WeakSet.prototype.delet(values)</li></ul>',	NULL,	'',	NULL,	'var ws = new WeakSet();\nvar obj = {};\nvar foo = {};\n\nws.add(window);\nws.add(obj);\n\nws.has(window);\nws.has(obj);\n\nws.has(window); // true\nws.has(foo); // false\n\nws.delete(window); // removes window from set\nws.has(window); // false',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	33,	NULL,	NULL,	'2020-04-26 14:25:42',	'2020-04-26 14:25:42'),
(546,	NULL,	NULL,	'take',	'You know everything! Happy coding!',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	33,	NULL,	NULL,	'2020-04-26 14:25:51',	'2020-04-26 14:25:51'),
(547,	NULL,	NULL,	'Introduction',	'You are going to become an App developer.&nbsp;<br /><br />How crazy is this?',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	52,	NULL,	NULL,	'2020-06-08 03:10:39',	'2020-06-08 03:10:39'),
(548,	NULL,	NULL,	'Languages',	'As a bonus. You will be learning 2 of the most popular and most used programming languages for Android development.<br /><br />Java and Kotlin will be the 2 languages we will go through.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	52,	NULL,	NULL,	'2020-06-08 03:10:58',	'2020-06-08 03:10:58'),
(549,	NULL,	NULL,	'Software',	'You will also be learning the software which is mostly used for Android development called Android Studio.<br /><br />You will learn everything about the program to have a deeper understanding of how our Android application will work.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	52,	NULL,	NULL,	'2020-06-08 03:11:24',	'2020-06-08 03:11:24'),
(550,	NULL,	NULL,	'take',	'Look, mama! I am becoming an app developer.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	52,	NULL,	NULL,	'2020-06-08 03:11:30',	'2020-06-08 03:11:30'),
(551,	NULL,	NULL,	'Intro',	'In this lesson, we will learn how to output different information into the console in Java.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	53,	NULL,	NULL,	'2020-06-08 03:12:17',	'2020-06-08 03:12:17'),
(552,	NULL,	NULL,	'Output',	'In the real world, we look for output all the time. When we ask someone a question and they reply with an answer, that is output.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	53,	NULL,	NULL,	'2020-06-08 03:12:56',	'2020-06-08 03:12:56'),
(553,	NULL,	NULL,	'Java',	'Printing something on the screen is one of the main functionality of any application.<br />You surely don&#39;t want your granny to be angry at you if your program does not respond to her.<br /><br />In Java, we can output information using the keywords System.out.println().<br /><br />For example, we can output &ldquo;Hello World&rdquo; by typing the following:',	NULL,	'',	NULL,	'System.out.println(“Hello World”);',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	53,	NULL,	NULL,	'2020-06-08 03:13:39',	'2020-06-08 03:13:39'),
(554,	NULL,	NULL,	'Example',	'In the example below, we will output &ldquo;I am 24.&rdquo;:',	NULL,	'',	NULL,	'class Main{\n    public static void main (String[] args){\n        System.out.println(“I am 24.”);\n    }\n}',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	53,	NULL,	NULL,	'2020-06-08 03:15:19',	'2020-06-08 03:15:19'),
(555,	NULL,	NULL,	'Extension',	'To create a simple Java program, we need to save the file with the <strong><font color=\"#078ef9\">.java </font></strong>extension.<br /><br />If the class is not public or default then we can use any name. In other words, you can save the file name to anything independent of the class name.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	53,	NULL,	NULL,	'2020-06-08 03:16:13',	'2020-06-08 03:16:13'),
(556,	NULL,	NULL,	'Constraints',	'If the class is public, save as classname.java. In this case, Main.java.<br /><br />Execution always starts with the main method.',	NULL,	'',	NULL,	'code block',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	53,	NULL,	'Execution is when the program runs. Java always looks for a class called main to run. It is the &quot;main&quot; class needed for a program to run.',	'2020-06-08 03:17:11',	'2020-06-15 23:32:47'),
(557,	NULL,	NULL,	'Steps',	'For example, save myClass.java in a directory, let&rsquo;s say D:\\Java<br /><br />We need to open the command prompt, change the location of the directory to C:\\Java, then on command prompt compile the file by calling the file name followed by javac, D:\\Java&gt; javac myClass.java.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	53,	NULL,	NULL,	'2020-06-08 03:17:56',	'2020-06-08 03:17:56'),
(558,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"System.out.println()\",\"question\":\"What do we use to output information in Java?\",\"code\":null,\"option\":{\"1\":\"System.out()\",\"2\":\"print()\",\"3\":\"System.out.println()\"}}',	53,	NULL,	NULL,	'2020-06-08 03:18:43',	'2020-06-08 03:18:43'),
(559,	NULL,	NULL,	'take',	'Use System.out.println() to output.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	53,	NULL,	NULL,	'2020-06-08 03:18:54',	'2020-06-08 03:18:54'),
(560,	NULL,	NULL,	'Introduction',	'In this lesson, we will go over what variables are, and how they work in Java.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	54,	NULL,	NULL,	'2020-06-08 03:20:08',	'2020-06-08 03:20:08'),
(561,	NULL,	NULL,	'Variables',	'Variables are something that makes computer programs very useful by storing information in memory. When you think of variables, think of boxes which are used to store something.<br /><br />When Granny uses her app, you would want her to be able to store information like her name and address. She would get mad if she could not do that.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	54,	NULL,	NULL,	'2020-06-08 03:20:25',	'2020-06-08 03:20:25'),
(562,	NULL,	NULL,	'Java',	'In the computer world, you can have hundreds, thousands, or more numbers of boxes(meaning variables).<br /><br />Each can contain their own piece of information. That box is called variables in Java.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	54,	NULL,	NULL,	'2020-06-08 03:20:42',	'2020-06-08 03:20:42'),
(563,	NULL,	NULL,	'Creating',	'While creating variables in Java, we need to assign two things.<br /><br />First in the type of information we&nbsp; want to store and second is the name of the variable.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	54,	NULL,	NULL,	'2020-06-08 03:21:03',	'2020-06-08 03:21:03'),
(564,	NULL,	NULL,	'Example',	'Below is an example of a variable where int is a type of information (integer in this case) and apples is the name:',	NULL,	'',	NULL,	'int apples;',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	54,	NULL,	NULL,	'2020-06-08 03:21:27',	'2020-06-08 03:21:27'),
(565,	NULL,	NULL,	'Explanation',	'In the example, int is integer primitive data type and apples is the variable.<br /><br />We will discuss more about the types of variables in the next lesson.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	54,	NULL,	NULL,	'2020-06-08 03:21:42',	'2020-06-08 03:21:42'),
(566,	NULL,	NULL,	'Syntax',	'Syntax in programming languages basically means combining symbols based on the set of rules defined for that language.<br /><br />Java has its own rules for syntax of variables and we need to follow it. They have 3 parts which are types of data, name, and putting a semicolon which ends the statement.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	54,	NULL,	NULL,	'2020-06-08 03:21:57',	'2020-06-08 03:21:57'),
(567,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"Type and Name\",\"question\":\"What are the main parts of a variable?\",\"code\":null,\"option\":{\"1\":\"Name\",\"2\":\"Type and Name\",\"3\":\"Name and Semicolon to end to statement\"}}',	54,	NULL,	NULL,	'2020-06-08 03:22:30',	'2020-06-08 03:22:30'),
(568,	NULL,	NULL,	'take',	'Use a type and name for a variable.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	54,	NULL,	NULL,	'2020-06-08 03:22:39',	'2020-06-08 03:22:39'),
(569,	NULL,	NULL,	'Introduction',	'In this lesson, we will go over variable types.&nbsp;<br /><br />We will also go through how we can use them.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	55,	NULL,	NULL,	'2020-06-08 03:23:15',	'2020-06-08 03:23:15'),
(570,	NULL,	NULL,	'Types',	'A variable can be defined as to reserve memory space to store the values. These can be initialized at the time of declaration or later on depending on the type of variable.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	55,	NULL,	NULL,	'2020-06-08 03:23:30',	'2020-06-08 03:23:30'),
(571,	NULL,	NULL,	'Java Variables',	'There are basically three types of variables available in Java.&nbsp;<br /><br />They are local variables, instance variables, and static variables.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	55,	NULL,	NULL,	'2020-06-08 03:23:48',	'2020-06-08 03:23:48'),
(572,	NULL,	NULL,	'Local Variable',	'It is mandatory to initialize the local variable. Otherwise, you will get run time errors from compiling.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	55,	'These can be defined inside method constructors or also inside blocks. The scope or lifetime of local variables is destroyed with the end of the method completion.',	NULL,	'2020-06-08 03:24:27',	'2020-06-08 03:24:27'),
(573,	NULL,	NULL,	'Instance Variable',	'Instance variables are also known as member variables or fields. These are associated with object creation.&nbsp;<br />As the object gets created, instance variables also get created. These live on heap memory.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	55,	NULL,	'In case, if you don&#39;t initialize instance variables with initial values, these get default values at run time implicitly.',	'2020-06-08 03:24:59',	'2020-06-08 03:24:59'),
(574,	NULL,	NULL,	'Static Variables',	'Static variables, also known as class variables, are loaded and initialized when class is loaded in JVM. There exists only one copy of a class variable.<br /><br />They live on heap memory, and if these variables are not initialized to some default value is assigned to them implicitly.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	55,	'JVM is the Java Virtual Machine that turns a Java program into bytecode which can be used in different platforms.',	NULL,	'2020-06-08 03:25:35',	'2020-06-08 03:25:35'),
(575,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"Local\",\"question\":\"What type of variable does not exist in heap memory?\",\"code\":null,\"option\":{\"1\":\"Static\",\"2\":\"Instance\",\"3\":\"Local\"}}',	55,	NULL,	NULL,	'2020-06-08 03:26:07',	'2020-06-08 03:26:07'),
(576,	NULL,	NULL,	'take',	'Local variables do not live in heap memory, they live in stack memory.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	55,	NULL,	NULL,	'2020-06-08 03:26:22',	'2020-06-08 03:26:22'),
(577,	NULL,	NULL,	'Recap',	'Let&rsquo;s recap all the things we learn so we understand how effective this course was for us.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	57,	NULL,	NULL,	'2020-06-08 05:08:05',	'2020-06-08 05:08:05'),
(578,	NULL,	NULL,	'What is Java?',	'We learn that Java is a highly popular programming language used for App Development.<br /><br />It is Object-Oriented and has a similar syntax to C++ but very fast and powerful.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	57,	NULL,	NULL,	'2020-06-08 05:08:19',	'2020-06-08 05:08:19'),
(579,	NULL,	NULL,	'Output',	'We learn how we can use output to send information to the user to better understand how we see data in a mobile app.<br /><br />We use the System.out.println() function to output different text.',	NULL,	'',	NULL,	'class Main {\n    public static void main(String[] args) {\n        System.out.println(“Hello World);\n    }\n}',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	57,	NULL,	NULL,	'2020-06-08 05:09:00',	'2020-06-08 05:09:00'),
(580,	NULL,	NULL,	'Introduction',	'Let&#39;s explore operators and how we can use them.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	58,	NULL,	NULL,	'2020-06-08 07:49:11',	'2020-06-08 07:49:11'),
(581,	NULL,	NULL,	'Operators',	'In computer programming, operators are symbols that tell the compiler to perform specific actions which can be done mathematically or logically.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	58,	NULL,	NULL,	'2020-06-08 07:49:24',	'2020-06-08 07:49:24'),
(582,	NULL,	NULL,	'Adding and Subtracting',	'For example: &lsquo;+&rsquo; is an additive operator which makes addition of two numbers.<br /><br />Example:',	NULL,	'',	NULL,	'int x = 8 + 7 - 3;',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	58,	NULL,	'&lsquo;+&rsquo; and &lsquo;-&rsquo; are addition and subtraction operators respectively, which comes under Arithmetic Operator.)<br />\r\n<br />\r\n&ldquo;8&rdquo;, &ldquo;7&rdquo; and &ldquo;3&rdquo; are operand (operands are objects that are manipulated by operators).<br />\r\n<br />\r\n&ldquo;=&rdquo; is an assignment operator which assigns the result of calculations (value 12 in this case) to x.',	'2020-06-08 07:50:21',	'2020-06-08 07:50:21'),
(583,	NULL,	NULL,	'Multiplying and Dividing',	'To multiply and divide numbers, we use the &lsquo;*&rsquo; and &lsquo;/&rdquo; symbols respectively.&nbsp;<br /><br />Example:',	NULL,	'',	NULL,	'int x = 8 * 2 / 8;',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	58,	NULL,	NULL,	'2020-06-08 07:50:49',	'2020-06-08 07:50:49'),
(584,	NULL,	NULL,	'Postfix',	'If you want to quickly add 1 to a variable, use the postfix. You can do this by typing the variable name and then adding 2 &lsquo;+&rsquo; signs.<br /><br />Example:',	NULL,	'',	NULL,	'int x = 2;\n\nx++;',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	58,	NULL,	NULL,	'2020-06-08 07:51:09',	'2020-06-08 07:51:09'),
(585,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"+, -, *, \\/\",\"question\":\"What signs are used to perform basic operations?\",\"code\":null,\"option\":{\"1\":\"A, S, M, D\",\"2\":\"+, -, *, \\/\",\"3\":\"+, -, x, \\/\"}}',	58,	NULL,	NULL,	'2020-06-08 07:51:41',	'2020-06-08 07:51:41'),
(586,	NULL,	NULL,	'take',	'Use the +, -, *, and / signs to perform basic mathematical operations.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	58,	NULL,	NULL,	'2020-06-08 07:51:55',	'2020-06-08 07:51:55'),
(587,	NULL,	NULL,	'Introduction',	'In this lesson, we will go over what comments are in Java and how we can use them.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	59,	NULL,	NULL,	'2020-06-08 07:53:26',	'2020-06-08 07:53:26'),
(588,	NULL,	NULL,	'Statement',	'Imagine you create a robot. You might want to leave your name on it somewhere or add a disclaimer for your creation. Maybe if you are selling it, you would leave a warranty on it. You are commenting on it as extra information.&nbsp;<br /><br />The robot does not need it but it is there to help other users or engineers understand the robot better.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	59,	NULL,	NULL,	'2020-06-08 07:58:35',	'2020-06-08 07:58:35'),
(589,	NULL,	NULL,	'Comments',	'Similarly, in programming, we use comments as well. It helps us leave notes or explain the code to ourselves or others.&nbsp;<br /><br />It can be especially useful if you are working with multiple people and you want other developers to understand your code.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	59,	NULL,	NULL,	'2020-06-08 07:58:47',	'2020-06-08 07:58:47'),
(590,	NULL,	NULL,	'Comments in Java',	'There are 2 ways you can use comments in Java. We will go over both so don&rsquo;t worry.&nbsp;<br /><br />One will be single lined and another will be able to comment multiple lines.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	59,	NULL,	NULL,	'2020-06-08 07:59:01',	'2020-06-08 07:59:01'),
(591,	NULL,	NULL,	'Single-Line Comments',	'If you want to comment out a single line in Java, you may do it using 2 forward slashes(//).',	NULL,	'',	NULL,	'class Main{\n    public static void main(String[] args){\n        \n        // The code below outputs Hello World\n\n        System.out.println(“Hello World”);\n    }\n}',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	59,	NULL,	NULL,	'2020-06-08 07:59:58',	'2020-06-08 07:59:58'),
(592,	NULL,	NULL,	'Multi-Line Comments',	'You can comment multiple lines using a forward slash and star(*). They flip around when you want to close the comment.',	NULL,	'',	NULL,	'class Main{\n    public static void main(String[] args){ \n         /* The code below adds the value 4 to 2\n         It also subtracts the value 5 */\n        \n        int x = 2 + 4 - 5;\n        System.out.println(x);\n    }\n}',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	59,	NULL,	NULL,	'2020-06-08 08:01:04',	'2020-06-08 08:01:04'),
(593,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"\\/\\/\",\"question\":\"What is used for single-line comments?\",\"code\":null,\"option\":{\"1\":\"\\/comment\",\"2\":\"\\/*\",\"3\":\"\\/\\/\"}}',	59,	NULL,	NULL,	'2020-06-08 08:01:41',	'2020-06-08 08:01:41'),
(594,	NULL,	NULL,	'take',	'Use // to create a single-line comment.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	59,	NULL,	NULL,	'2020-06-08 08:01:51',	'2020-06-08 08:01:51'),
(595,	NULL,	NULL,	'Introduction',	'In this lesson, we will go over the different ways we can use conditions in Java.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	60,	NULL,	NULL,	'2020-06-08 08:02:27',	'2020-06-08 08:02:27'),
(596,	NULL,	NULL,	'Example',	'In the real world, we deal with conditions a lot. We make decisions to go to work. Why? Because we need to make money to feed ourselves and/or our family.&nbsp;<br /><br />The condition is if we want to be fed, then we go to work.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	60,	NULL,	NULL,	'2020-06-08 08:02:44',	'2020-06-08 08:02:44'),
(597,	NULL,	NULL,	'Java',	'In Java, we have conditions as well. We call them If &amp; Else statements.<br /><br />They consist of 3 parts which are important in the creation.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	60,	NULL,	NULL,	'2020-06-08 08:02:57',	'2020-06-08 08:02:57'),
(598,	NULL,	NULL,	'If & Else',	'If then allows us to control the flow of our program based on conditions. It helps us decide whether to execute a piece of code or not.<br /><br />In programming, we need to make those decisions many times and that is why If &amp; Else statements are often used.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	60,	NULL,	NULL,	'2020-06-08 08:03:12',	'2020-06-08 08:03:12'),
(599,	NULL,	NULL,	'Syntax',	'If then execute a block of code or single statement if a Boolean expression inside the braces is true. The basic syntax of it then is the following:<br /><br />if(Boolean expression is true)<br />&nbsp;&nbsp;&nbsp; Execute this single statement;<br /><br />Boolean expression is enclosed in parenthesis and single statements are terminated with semicolons.<br /><br />if(Boolean expression is true){<br />&nbsp;&nbsp;&nbsp; Execute all statement inside code block;<br />}',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	60,	NULL,	NULL,	'2020-06-08 08:03:59',	'2020-06-08 08:03:59'),
(600,	NULL,	NULL,	'Demonstration',	'If you are using a code block, then each statement inside the block should also be terminated with semicolons.<br /><br />Example:<br /><br />Let&rsquo;s create a simple program when water evaporate if temperature is 100-degrees Celsius:',	NULL,	'',	NULL,	'class Main {\n           public static void main (String[] args){\n                    int evapTemp = 100;\n\n                    if(evapTemp == 100){\n                    System.out.println(“Water started evaporating”);\n           }\n}',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	60,	NULL,	'In the example, since if Boolean expression is true, the single statement just below will be executed.<br />\r\n<br />\r\nThus, the output will be &ldquo;Water started evaporating&rdquo;.',	'2020-06-08 08:05:11',	'2020-06-08 08:05:11'),
(601,	NULL,	'hints|Think about what keyword you use in real life to describe a condition.|The answer is if because we use if in a condition. For example, if I like ice cream, I will eat it more often.|if',	'Quiz',	'Fill in the blank to create the if statement below:',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	'printsln',	'{\"soln\":\"if\",\"tf1\":\"[blank](evapTemp == 100){<br \\/>\\r\\n&nbsp;&nbsp;&nbsp; System.out.println(&ldquo;Water started evaporating&rdquo;);<br \\/>\\r\\n}\"}',	NULL,	60,	NULL,	NULL,	'2020-06-08 08:06:19',	'2020-06-08 08:06:19'),
(602,	NULL,	NULL,	'take',	'Use the if keyword to create an if statement in Java.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	60,	NULL,	NULL,	'2020-06-08 08:06:25',	'2020-06-08 08:06:25'),
(603,	NULL,	NULL,	'Introduction',	'In this lesson, we will go over arrays, how they are used, and how we can use them.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	61,	NULL,	NULL,	'2020-06-08 08:07:34',	'2020-06-08 08:07:34'),
(604,	NULL,	NULL,	'Example',	'In the real world, there are many ways of organizing data.<br /><br />For example, when we take a quiz and turn it in to the teacher, the teacher puts all the quizzes in one pile. That is because that pile stores all the quizzes, which are in the similar category of &ldquo;quizzes&rdquo;.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	61,	NULL,	NULL,	'2020-06-08 08:07:53',	'2020-06-08 08:07:53'),
(605,	NULL,	NULL,	'Java',	'In Java, we can do the same by storing similar data in an array.&nbsp;<br /><br />It is a variable that can store multiple values of a single data type. The integer array can be declared as int[] intArray; (recommended by Java). Here intArray is the name of the array variable.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	61,	NULL,	NULL,	'2020-06-08 08:08:14',	'2020-06-08 08:08:14'),
(606,	NULL,	NULL,	'Arrays',	'<br />The length/size of an array is fixed and defined when an array is created. For example, intArray = new int[5]; fix the length of array with the variable name intArray to the value 5. This means it can store 5 values of an integer data type.',	NULL,	'',	NULL,	'public class Main {\n    public static void main(String arg[]) {\n        int[] intArray; // Array Declared\n        intArray = new int[5]; // Array length fixed for 5 integers\n\n        int Array[0] = 10; // Value stored at index position 0\n        int Array[1] = 20; // Value stored at index position 1\n    }\n}',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	61,	NULL,	NULL,	'2020-06-08 08:17:12',	'2020-06-08 08:17:12'),
(607,	NULL,	NULL,	'Index and Element Values',	'int[] intArray = {10, 20, 30, 40, 50};',	'https://i.ibb.co/vXQzv4G/array-data.png',	'Two things are very clear at first sight from the table. In other words, arrays have an index value which starts from 0 and other element values.&nbsp;<br /><br />For example, we can track value 20 by using intArray[1];. Element value is the value stored in the array.',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	61,	NULL,	'Index values start with zero and move on in increasing order. It has an upper bound and lower bound.',	'2020-06-10 04:47:03',	'2020-06-10 04:47:03'),
(608,	NULL,	NULL,	'Program Example',	'Now let&rsquo;s build some array programs to understand the array concept more deeply.<br /><br />This is a very simple program in which integer arrays are declared, initialized, and finally all its values are printed.',	NULL,	'',	NULL,	'public class Main {\n    public static void main(String arg[]) {\n        int[] array = new int[3];\n        array[0] = 10;\n        array[1] = 20;\n        array[2] = 30;\n\n        System.out.println(array[0]);\n        System.out.println(array[1]);\n        System.out.println(array[2]);\n    }\n}',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	61,	NULL,	NULL,	'2020-06-10 05:23:08',	'2020-06-10 05:23:08'),
(609,	NULL,	NULL,	'Outcome',	'In the program we created previously, we declared an array variable to store 3 values of integer data type. When we added the values 10, 20, and 30 to the array.&nbsp;<br /><br />Then we printed each of the values using their index value. It will output the following:<br /><br />10<br />20<br />30',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	61,	NULL,	NULL,	'2020-06-10 05:23:36',	'2020-06-10 05:23:36'),
(610,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"3\",\"question\":\"If we create an array that stores the values 1, 2, 3, 4, and 5 in order, what would be the index value for the number 4?\",\"code\":null,\"option\":{\"1\":\"3\",\"2\":\"4\",\"3\":\"1\"}}',	61,	NULL,	NULL,	'2020-06-10 05:24:01',	'2020-06-10 05:24:01'),
(611,	NULL,	NULL,	'take',	'Index values start with zero and move on in increasing order.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	61,	NULL,	NULL,	'2020-06-10 05:24:11',	'2020-06-10 05:24:11'),
(612,	NULL,	NULL,	'Introduction',	'In this lesson, we will give you a crystal clear concept of what loops are and how they work.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	62,	NULL,	NULL,	'2020-06-10 05:24:54',	'2020-06-10 05:24:54'),
(613,	NULL,	NULL,	'Repeating Tasks',	'There must have been at least 1 instance where you had to repeat a specific task.&nbsp;<br /><br />If you have ever tried to write from 1 to 100, that must have been boring and frustrating.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	62,	NULL,	NULL,	'2020-06-10 05:25:20',	'2020-06-10 05:25:20'),
(614,	NULL,	NULL,	'Java',	'In Java, we can repeat actions easily using a Loop. A loop in Java repeats a specific task with a condition.&nbsp;<br /><br />As long as the condition is true, the loop keeps on executing the code.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	62,	NULL,	NULL,	'2020-06-10 05:25:34',	'2020-06-10 05:25:34'),
(615,	NULL,	NULL,	'For Loop',	'A For Loop is a way to control the flow of your program.&nbsp;<br /><br />The most basic syntax for a For Loop is:<br /><br />for (initialization-expression; termination-expression; increment-or decrement-expression){<br />&nbsp;&nbsp;&nbsp; // put here your code to execute<br />}',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	62,	NULL,	'Initialization-expression - The initialization expression is executed once before the loop begins. It initializes the loop.<br />\r\n<br />\r\nTermination-expression - This is executed each time to check whether looping should terminate or continue. The looping continues to execute the code until it evaluates to true and terminates when evaluated to false.<br />\r\n<br />\r\nincrement -or-decrement-expression - It is executed after each iteration which increment or decrements the value of the initialized variable.<br />\r\n<br />\r\nstatements-or-code-to-be-executed-here - Here we put the code or statement which we want to be iterated until the for looping is terminated and the expression evaluates to false.',	'2020-06-10 05:26:41',	'2020-06-10 05:26:41'),
(616,	NULL,	NULL,	'Example Program',	'Let&rsquo;s create a program to find the sum of 1 to 50 numbers using just a for loop.',	NULL,	'',	NULL,	'public class Main {\n    public static void main(String[] args) {\n        int i;\n        int total = 0;\n        for (i = 1; i <= 50; i++) {\n            total = total + i;\n        }\n        System.out.println(“Sum of Value from 1 to 50 number is: “+total);\n    }\n\n}',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	62,	NULL,	NULL,	'2020-06-10 05:27:36',	'2020-06-10 05:27:36'),
(617,	NULL,	NULL,	'Explanation',	'In the previous example, we created a for loop. We declare 2 variables named i and total.&nbsp;<br /><br />We used the i variable as the condition and counter argument. We used the total as the output of the loop.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	62,	NULL,	NULL,	'2020-06-10 05:27:46',	'2020-06-10 05:27:46'),
(618,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"Initialization-expression\",\"question\":\"What is the first thing that is executed in a for loop?\",\"code\":null,\"option\":{\"1\":\"Termination-expression\",\"2\":\"Statements-or-code-to-be-executed-here\",\"3\":\"Initialization-expression\"}}',	62,	NULL,	NULL,	'2020-06-10 05:28:15',	'2020-06-10 05:28:15'),
(619,	NULL,	NULL,	'take',	'The initialization-expression is executed before the loop begins.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	62,	NULL,	NULL,	'2020-06-10 05:28:27',	'2020-06-10 05:28:27'),
(620,	NULL,	NULL,	'Introduction',	'In this lesson, we will explain what the while loop is and how we can use it in Java.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	63,	NULL,	NULL,	'2020-06-10 05:29:01',	'2020-06-10 05:29:01'),
(621,	NULL,	NULL,	'While Loop',	'The While loop is a type of loop which evaluates the condition first.&nbsp;<br /><br />The While Loop in Java has two parts.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	63,	NULL,	NULL,	'2020-06-10 05:29:11',	'2020-06-10 05:29:11'),
(622,	NULL,	NULL,	'Parts',	'The first part is defining a Boolean expression inside parentheses which will be tested.<br /><br />The second part is a statement or code which will be executed continually until the Boolean expression evaluates to be true.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	63,	NULL,	NULL,	'2020-06-10 05:29:24',	'2020-06-10 05:29:24'),
(623,	NULL,	NULL,	'Syntax',	'The syntax for the While Loop is very simple.<br /><br />initialize-value;<br />while(Boolean-Expression){<br />&nbsp;&nbsp;&nbsp; // here is your code<br />}',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	63,	NULL,	NULL,	'2020-06-10 05:29:48',	'2020-06-10 05:29:48'),
(624,	NULL,	NULL,	'Syntax Explanation',	'Initialize-value - First initialize the value first before starting the while loop.&nbsp;<br /><br />Boolean-Expression - Boolean expression will be evaluated. If it comes out to be true then the code inside it will be executed. Otherwise, the compiler jumps outside the loop.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	63,	NULL,	'Statement-or-code - The code that you want to execute after the Boolean expression evaluates to true.<br />\r\n<br />\r\nIncrement-decrement-value - Increment or decrement the value of the initialized variable.',	'2020-06-10 05:30:10',	'2020-06-10 05:30:10'),
(625,	NULL,	NULL,	'Code Example',	'',	NULL,	'',	NULL,	'public class Main {\n    public static void main(String[] args) {\n\n        int i = 1;\n\n        while (i <= 5) {\n            System.out.println(“Hello World”);\n            i++;\n        }\n    }\n}',	'true',	'The code above creates a while loop that outputs &ldquo;Hello World&rdquo; 5 times.',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	63,	NULL,	NULL,	'2020-06-10 05:31:01',	'2020-06-10 05:31:01'),
(626,	NULL,	'hints|Go to the previous slide and see what keyword is used to create a while loop.|The answer if while|while',	'Quiz',	'Fill in the blank to create a while loop.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	'printsln',	'{\"soln\":\"while\",\"tf1\":\"public class Main {<br \\/>\\r\\n&nbsp;&nbsp;&nbsp; public static void main(String[] args) {<br \\/>\\r\\n<br \\/>\\r\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i = 1;<br \\/>\\r\\n<br \\/>\\r\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [blank] (i &lt;= 5) {<br \\/>\\r\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&ldquo;Hello World&rdquo;);<br \\/>\\r\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i++;<br \\/>\\r\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br \\/>\\r\\n&nbsp;&nbsp;&nbsp; }<br \\/>\\r\\n}\"}',	NULL,	63,	NULL,	NULL,	'2020-06-10 05:33:13',	'2020-06-10 05:33:13'),
(627,	NULL,	NULL,	'take',	'Use the keyword while to to create a While Loop.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	63,	NULL,	NULL,	'2020-06-10 05:33:21',	'2020-06-10 05:33:21'),
(628,	NULL,	NULL,	'Introduction',	'Let&#39;s explore OOP.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	64,	NULL,	NULL,	'2020-06-10 05:38:50',	'2020-06-10 05:38:50'),
(629,	NULL,	NULL,	'Shopping Cart',	'Think about going shopping. You have a shopping cart and inside it you put the items you want to buy.&nbsp;<br /><br />Those items have details like their name, category, expiration date, etc.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	64,	NULL,	NULL,	'2020-06-10 05:39:02',	'2020-06-10 05:39:02'),
(630,	NULL,	NULL,	'Analogy Explained',	'OOP has 2 basic parts which are a class and the objects. The shopping cart is the class which creates/stores the objects. The objects are the items in the shopping cart, and each of them have details.<br /><br />This is OOP (Object-Oriented Programming).',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	64,	NULL,	NULL,	'2020-06-10 05:39:21',	'2020-06-10 05:39:21'),
(631,	NULL,	NULL,	'What is OOP?',	'Object-oriented programming includes constructing structures with both system and methods.<br /><br />In the next few lessons, we will clearly explain to you what objects, classes, and methods are.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	64,	NULL,	NULL,	'2020-06-10 05:39:34',	'2020-06-10 05:39:34'),
(632,	NULL,	NULL,	'Reason for OOP',	'There are many reasons to use OOP and one of them is that OOP is fast.&nbsp;<br /><br />It runs quickly on Java and has less of an execution time. It also helps with security because you can set your classes as private.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	64,	NULL,	NULL,	'2020-06-10 05:40:00',	'2020-06-10 05:40:00'),
(633,	NULL,	NULL,	'Clear OOP Structures',	'OOP has a very clear structure. It is easy to learn because of this since you can create many different programs that follow the same steps.<br /><br />Java makes OOP really easy compared to other languages like C++.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	64,	NULL,	NULL,	'2020-06-10 05:40:15',	'2020-06-10 05:40:15'),
(634,	NULL,	NULL,	'Similar To Functions',	'OOP is similar to a function but is stored in another file. It helps you so you don&rsquo;t have to repeat yourself.&nbsp;<br /><br />If you ever want to perform an action, you just use OOP so you don&rsquo;t type the same code to perform that action again.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	64,	NULL,	NULL,	'2020-06-10 05:40:42',	'2020-06-10 05:40:42'),
(635,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"Class\",\"question\":\"What does OOP include?\",\"code\":null,\"option\":{\"1\":\"Method\",\"2\":\"Class\",\"3\":\"Object\"}}',	64,	NULL,	NULL,	'2020-06-10 05:41:11',	'2020-06-10 05:41:11'),
(636,	NULL,	NULL,	'take',	'OOP includes 2 main parts which are classes and objects.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	64,	NULL,	NULL,	'2020-06-10 05:41:22',	'2020-06-10 05:41:22'),
(637,	NULL,	NULL,	'Introduction',	'In this lesson, we will explain one of the main parts of OOP programming which are classes.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	65,	NULL,	NULL,	'2020-06-10 05:41:52',	'2020-06-10 05:41:52'),
(638,	NULL,	NULL,	'Items',	'If you ever look at different items, they have details and a name. Your video game, let&#39;s say Minecraft, has a name, publisher, developer, and many more. The main item or detail is the name.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	65,	NULL,	NULL,	'2020-06-10 05:42:03',	'2020-06-10 05:42:03'),
(639,	NULL,	NULL,	'Classes Are Categories',	'Classes are categories which store those items. The concept of a class comes into play when we see certain types of objects or things around us, and the common idea or a blueprint behind these types of objects is called a class.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	65,	NULL,	NULL,	'2020-06-10 05:42:21',	'2020-06-10 05:42:21'),
(640,	NULL,	NULL,	'Properties of Objects',	'Classes store the details of specific objects.<br /><br />In other words, classes are a property behind each of the objects or things stored in it.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	65,	NULL,	NULL,	'2020-06-10 05:42:31',	'2020-06-10 05:42:31'),
(641,	NULL,	NULL,	'Real-World Example',	'A real-world example would be this:<br /><br />Consider you have iPhone, Samsung, and Sony devices and you want to represent them in Java. To do that, we first need to find out what can be the blueprint behind these devices.&nbsp;<br /><br />Here, a blueprint can be a Mobile because they all are a type of Mobile. So Mobile is a class which represents those devices.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	65,	NULL,	NULL,	'2020-06-10 05:42:54',	'2020-06-10 05:42:54'),
(642,	NULL,	NULL,	'Declaring A Class',	'To declare a class, we need to use the keyword &ldquo;class&rdquo; and give it a name. We then enter the code it needs to do.<br /><br />class Mobile{<br />&nbsp;&nbsp;&nbsp; /*ToDo Code Here*/<br />}',	NULL,	'Class is a representation of similar types of objects or it is an implementation of encapsulation. We will explain more of what that is soon.',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	65,	NULL,	NULL,	'2020-06-10 05:43:24',	'2020-06-10 05:43:24'),
(643,	NULL,	NULL,	'Declaration Explanation',	'The class is a blueprint for a specific type. In the human language across the world, if you count, there are lots of classes.&nbsp;<br /><br />For example, cars, banks, birds, students, employees, etc, are very simple examples of classes.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	65,	NULL,	NULL,	'2020-06-10 05:43:40',	'2020-06-10 05:43:40'),
(644,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"Cars\",\"question\":\"What is an example of a class?\",\"code\":null,\"option\":{\"1\":\"Samsung Galaxy A90\",\"2\":\"Cars\",\"3\":\"Bill Gates\"}}',	65,	NULL,	NULL,	'2020-06-10 05:44:13',	'2020-06-10 05:44:13'),
(645,	NULL,	NULL,	'take',	'Cars, banks, birds, employees, etc, are very simple examples of classes.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	65,	NULL,	NULL,	'2020-06-10 05:44:26',	'2020-06-10 05:44:26'),
(646,	NULL,	NULL,	'Introduction',	'In this lesson, we will talk about constructors and how we can use them with OOP.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	66,	NULL,	NULL,	'2020-06-10 05:44:56',	'2020-06-10 05:44:56'),
(647,	NULL,	NULL,	'Checkout',	'When you buy things at a supermarket, you don&rsquo;t just leave. That would be stealing!&nbsp;<br /><br />You go to the checkout and buy the items by money. It is to make sure you are owning the product(s) before you use them.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	66,	NULL,	NULL,	'2020-06-10 05:45:06',	'2020-06-10 05:45:06'),
(648,	NULL,	NULL,	'Constructors',	'A constructor is not a person that builds structures in Java. No!<br /><br />A constructor is a special method that is called whenever an object is created using the new keyword. It contains a block of statements that are used to initialize the instance variables of an object before the reference of the object is returned by new.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	66,	NULL,	NULL,	'2020-06-10 05:45:20',	'2020-06-10 05:45:20'),
(649,	NULL,	NULL,	'Constructors vs Methods',	'Constructors can be defined as a method having the same name as class name without any return type. A constructor does look and feel a lot like a method, but it is different from a method in 2 ways.<br /><br />A constructor always has the same name as the class whose instance members they initialize.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	66,	NULL,	'A constructor does not have a return type. Not even void! It is because the constructor is automatically called by the compiler whenever an object of the class is created.',	'2020-06-10 05:45:45',	'2020-06-10 05:45:45'),
(650,	NULL,	NULL,	'Benefits',	'No class can exist without any constructor. If there is no constructor in a class, then one non-parameterized (default) constructor is inserted in that class by the compiler.<br /><br />Copy constructor is used to create a duplicate of existing objects.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	66,	NULL,	NULL,	'2020-06-10 05:45:58',	'2020-06-10 05:45:58'),
(651,	NULL,	NULL,	'Syntax',	'The syntax for a constructor is as follows:<br /><br />ConstructorName([parameterlist]) {<br />&nbsp;&nbsp;&nbsp; // constructor body<br />}',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	66,	NULL,	NULL,	'2020-06-10 05:46:11',	'2020-06-10 05:46:11'),
(652,	NULL,	NULL,	'Create a Constructor',	'First we make a class called Rectangle in which we declare a constructor and method to show how to use it:',	NULL,	'',	NULL,	'class Rectangle {\n    int length;\n    int breadth;\n    // declare constructor to initialize length and width of rectangle\n\n    Rectangle() {\n        length = 20;\n        breadth = 10;\n    }\n\n    // declare method to calculate area of rectangle\n\n    int area() {\n        int rectArea = length * breadth;\n        return rectArea;\n    }\n}',	NULL,	'Then we create a class ConstructorDemo which inherits the above class Rectangle and used to create objects of the Rectangle class and calculate its area:',	'// class to create a rectangle objects and calculate area\nclass ConstructorDemo {\n    public static void main(String[] args) {\n        Rectangle r = new Rectangle();\n        System.out.println(“Area of rectangle = “+r.area());\n    }\n}\n\n//Output: Area of rectangle = 200',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	66,	NULL,	NULL,	'2020-06-10 05:47:35',	'2020-06-10 05:47:35'),
(653,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"They don\\u2019t return values.\",\"question\":\"What is 1 difference between a constructor and a method?\",\"code\":null,\"option\":{\"1\":\"They return values.\",\"2\":\"They can\\u2019t have the same name as the class.\",\"3\":\"They don\\u2019t return values.\"}}',	66,	NULL,	NULL,	'2020-06-10 05:48:19',	'2020-06-10 05:48:19'),
(654,	NULL,	NULL,	'take',	'A constructor does not return a value but a method can.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	66,	NULL,	NULL,	'2020-06-10 05:48:27',	'2020-06-10 05:48:27'),
(655,	NULL,	NULL,	'Introduction',	'In this lesson, we will go over the second main part of OOP which is Object.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	67,	NULL,	NULL,	'2020-06-10 05:49:10',	'2020-06-10 05:49:10'),
(656,	NULL,	NULL,	'Shopping Cart Example',	'In the previous lesson, we talked about classes and compared it to a Shopping Cart.<br /><br />In a shopping cart, what do you think the object would be?',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	67,	NULL,	NULL,	'2020-06-10 05:49:23',	'2020-06-10 05:49:23'),
(657,	NULL,	NULL,	'Items In A Cart',	'Inside a shopping cart, we have items that we want to buy like food, clothing, etc.&nbsp;<br /><br />Similarly, in a class, the objects represent the items and each of them have properties.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	67,	NULL,	NULL,	'2020-06-10 05:49:39',	'2020-06-10 05:49:39'),
(658,	NULL,	NULL,	'Objects Explained',	'An Object is an instance of a class. An instance is when something is indicated like a class. Understanding the concept of objects is a lot easier when considering real life examples around us because the concept is actually based on real life objects.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	67,	NULL,	NULL,	'2020-06-10 05:49:53',	'2020-06-10 05:49:53'),
(659,	NULL,	NULL,	'Creating Objects',	'Suppose shoppingCart is the class for which we want to create an object named orange.<br /><br />Below is the code:<br /><br />// Object orange is declared<br />shoppingItem orange;<br />// Object is created using new keyword&nbsp;<br />orange = new shoppingItem();',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	67,	'You can also create an object in 1 line:<br />\r\n<br />\r\nshoppingItem orange = new shoppingItem();<br />\r\n<br />\r\nObjects can be defined as a state, behavior of a class.<br />\r\nObjects are the instance variable of a class.<br />\r\nObjects are stored through references.',	NULL,	'2020-06-10 05:50:39',	'2020-06-10 05:50:39'),
(660,	NULL,	NULL,	'Class/Object Communication',	'Every object has its own memory.&nbsp;<br /><br />Objects of a class of the same type can interact with each other means you can pass your message from one object to another.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	67,	NULL,	NULL,	'2020-06-10 05:50:54',	'2020-06-10 05:50:54'),
(661,	NULL,	NULL,	'Methods vs Objects',	'Objects are created from a class.<br /><br />Methods are actions performed and do not represent the object or something separate from it. Methods or actions are performed on objects.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	67,	NULL,	NULL,	'2020-06-10 05:51:06',	'2020-06-10 05:51:06'),
(662,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"Same type\",\"question\":\"Classes and objects will only communicate in what condition?\",\"code\":null,\"option\":{\"1\":\"Same name\",\"2\":\"Same type\",\"3\":\"Different names\"}}',	67,	NULL,	NULL,	'2020-06-10 05:51:34',	'2020-06-10 05:51:34'),
(663,	NULL,	NULL,	'take',	'Classes communicate with objects only if they are the same type.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	67,	NULL,	NULL,	'2020-06-10 05:51:44',	'2020-06-10 05:51:44'),
(664,	NULL,	NULL,	'Introduction',	'In this lesson, we will explain what methods are and how to use them.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	68,	NULL,	NULL,	'2020-06-10 06:09:58',	'2020-06-10 06:09:58'),
(665,	NULL,	NULL,	'Shopping Cart',	'Previously, we explained that a shopping cart represents a class, and an orange in the shopping cart represents an object.<br /><br />What do you think represents a method?',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	68,	NULL,	NULL,	'2020-06-10 06:10:11',	'2020-06-10 06:10:11'),
(666,	NULL,	NULL,	'Orange',	'Our object is the orange, but what does it do? An orange gives us vitamins and minerals. That represents what an orange does and its purpose.&nbsp;<br /><br />A method is what an object does or its purpose. The vitamins and minerals given off by the orange is the method.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	68,	NULL,	NULL,	'2020-06-10 06:10:26',	'2020-06-10 06:10:26'),
(667,	NULL,	NULL,	'Methods Explained',	'Methods are truly the backbone of the Java programs. A method is a self contained block of code that performs a specific task. They provide a way of defining the behavior of an object or in other words, what the object does.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	68,	NULL,	NULL,	'2020-06-10 06:10:43',	'2020-06-10 06:10:43'),
(668,	NULL,	NULL,	'Syntax of Methods',	'The following is the syntax of a method which consists of method header of method body:<br />returnType methodName(Parameter list) // Method Header<br />{<br />//declarations and statements<br />//Method Body<br />// Method Return Result<br />}',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	68,	NULL,	NULL,	'2020-06-10 06:11:07',	'2020-06-10 06:11:07'),
(669,	NULL,	NULL,	'returnType',	'The returnType in a method header specifies the type of value, if any, that the method returns. If the method does not return a value, then the return type must be void. For example: return type may be void, int, double, etc.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	68,	NULL,	NULL,	'2020-06-10 06:11:17',	'2020-06-10 06:11:17'),
(670,	NULL,	NULL,	'methodName',	'The methodName in the method header specifies the name of the method. It follows the same rules and conversations as that of identifiers. For example: method name may be area, display, show, etc.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	68,	NULL,	'The parameter list in the method header must be enclosed in parenthesis. A parameter is a variable that temporarily stores data values known as arguments that are being passed to the method. Whenever it is called, the parameter list takes the following form:<br />\r\n<br />\r\n{datatype varName1, datatype varName2, &hellip;.)',	'2020-06-10 06:11:35',	'2020-06-10 06:11:35'),
(671,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"Return Type\",\"question\":\"What can you ignore in a method?\",\"code\":null,\"option\":{\"1\":\"Method Name\",\"2\":\"Parameter\",\"3\":\"Return Type\"}}',	68,	NULL,	NULL,	'2020-06-10 06:12:01',	'2020-06-10 06:12:01'),
(672,	NULL,	NULL,	'take',	'You can use void as the return type to return nothing.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	68,	NULL,	NULL,	'2020-06-10 06:12:09',	'2020-06-10 06:12:09'),
(673,	NULL,	NULL,	'Introduction',	'In this lesson, we will explain what inheritance is and how we use it in OOP?',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	69,	NULL,	NULL,	'2020-06-10 06:12:40',	'2020-06-10 06:12:40'),
(674,	NULL,	NULL,	'Grandma’s Rings',	'Imagine you have/had a grandma. She was married so she had a ring. Your family tells you to take the ring because you will be married soon.&nbsp;<br /><br />The ring was <strong><font color=\"#078ef9\">inherited</font></strong> from your grandma to you. In other words, it was passed down to you.<br /><br />The same way, sharing something that belongs to you like a house is also an example of inheritance.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	69,	NULL,	NULL,	'2020-06-10 06:12:59',	'2020-06-10 06:12:59'),
(675,	NULL,	NULL,	'Inheritance',	'Inheritance is a mechanism that allows the class to use the states and behavior of another class. In simple words a class derives fields and methods from another class.<br /><br />The derived class in inheritance is called a sub class and the class from which it is derived is called the super class.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	69,	NULL,	NULL,	'2020-06-10 06:13:10',	'2020-06-10 06:13:10'),
(676,	NULL,	NULL,	'Super/Sub Classes',	'A super class can have any number of subclasses in inheritance but subclass can only extend one super class. Multiple inheritance is not supported in Java.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	69,	NULL,	NULL,	'2020-06-10 06:13:27',	'2020-06-10 06:13:27'),
(677,	NULL,	NULL,	'Inheritance in OOP',	'Inheritance is one of the important concepts of object-oriented programming. The simple definition says inheritance provides a mechanism that allows a class to inherit properties of another class.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	69,	NULL,	'Inheritance means inheriting the properties and behaviors of an existing object in a new object.',	'2020-06-10 06:13:42',	'2020-06-10 06:13:42'),
(678,	NULL,	NULL,	'Achieving Inheritance',	'It is achieved by deriving a new class from an existing class using extended keywords. Example, class Child extends Base { }.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	69,	NULL,	'In inheritance by default all data members and member functions of a parent class are available to child class if they are not private inheritance defines a relationship between a superclass(parent) and its subclass(child).',	'2020-06-10 06:14:10',	'2020-06-10 06:14:10'),
(679,	NULL,	NULL,	'Code Example',	'Suppose a class name Base.java<br /><br />class Base {<br />&nbsp;&nbsp;&nbsp; //code of Base class<br />}<br /><br />Another class Child.java uses inheritance to extend properties from Base class.<br /><br />class Child extends Base {<br />&nbsp;&nbsp;&nbsp; //extends the properties of base class<br />}<br /><br />Child class will inherit the field and methods of Base class.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	69,	NULL,	NULL,	'2020-06-10 06:15:08',	'2020-06-10 06:15:08'),
(680,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"class Child extends Base\",\"question\":\"What do we use to inherit a class?\",\"code\":null,\"option\":{\"1\":\"class Child extends Base\",\"2\":\"class Base\",\"3\":\"class = new Child(Base)\"}}',	69,	NULL,	NULL,	'2020-06-10 06:15:34',	'2020-06-10 06:15:34'),
(681,	NULL,	NULL,	'take',	'Use class Child extends Base to inherit in Java.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	69,	NULL,	NULL,	'2020-06-10 06:15:43',	'2020-06-10 06:15:43'),
(682,	NULL,	NULL,	'Introduction',	'In this lesson, we will explain overriding in a method is.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	70,	NULL,	NULL,	'2020-06-10 06:16:12',	'2020-06-10 06:16:12'),
(683,	NULL,	NULL,	'Overriding',	'Overriding means to extend or to pass over something, especially to overlap the previously described functionality. So method overriding to re-write the previously described method again of parent class in the subclass with different functionality.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	70,	NULL,	NULL,	'2020-06-10 06:16:22',	'2020-06-10 06:16:22'),
(684,	NULL,	NULL,	'Method Overriding',	'In method overriding, we override the method of the superclass in the subclass. The method overriding is also called run-time polymorphism or dynamic binding.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	70,	NULL,	'It makes our programming much easier as previously defined code is reused, and we can add our own functionality.<br />\r\nThe class which extends the properties of another class is called sub-class, child-class, or derived-class. The class whose methods and fields or any other property is inherited is called super-class, base-class, or parent-class.',	'2020-06-10 06:16:41',	'2020-06-10 06:16:41'),
(685,	NULL,	NULL,	'Output explained',	'Output: Horse is Going<br /><br />Here we see method run() is defined again in the sub-class Horse or in other words method run() is overlapped in the child class, giving it a different functionality.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	70,	NULL,	NULL,	'2020-06-10 06:20:38',	'2020-06-10 06:20:38'),
(686,	NULL,	NULL,	'Run-time Polymorphism',	'Method overriding is also called as run-time polymorphism or dynamic binding. This is due to the fact that the compiler doesn&rsquo;t necessarily know what type of object is being passed at compile-time.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	70,	NULL,	NULL,	'2020-06-10 06:21:00',	'2020-06-10 06:21:00'),
(687,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"Polymorphism\",\"question\":\"What is overriding a part of?\",\"code\":null,\"option\":{\"1\":\"Method\",\"2\":\"Class\",\"3\":\"Polymorphism\"}}',	70,	NULL,	NULL,	'2020-06-10 06:21:58',	'2020-06-10 06:21:58'),
(688,	NULL,	NULL,	'take',	'Overriding is a type of polymorphism that we will explain.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	70,	NULL,	NULL,	'2020-06-10 06:22:08',	'2020-06-10 06:22:08'),
(689,	NULL,	NULL,	'Introduction',	'In this lesson, we will go over how interfaces work in Java.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	71,	NULL,	NULL,	'2020-06-10 06:22:37',	'2020-06-10 06:22:37'),
(690,	NULL,	NULL,	'Data Types',	'Have you ever heard of morse code? It is a form of communication or sending data through dots and lines. They can be represented as &lsquo;-&rsquo; or &lsquo;.&rsquo;<br /><br />That is a form of the data type. Similarly, an interface in Java is a data type that uses OOP.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	71,	NULL,	NULL,	'2020-06-10 06:22:53',	'2020-06-10 06:22:53'),
(691,	NULL,	NULL,	'Interfaces',	'Interfaces are the contract between a programmer and a Java programming language.<br /><br />We can use the same example of sending SMS to explain an interface.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	71,	NULL,	NULL,	'2020-06-10 06:23:07',	'2020-06-10 06:23:07'),
(692,	NULL,	NULL,	'Full Abstraction',	'Interfaces providing body, or in other words implementation to all the methods that were declared in an interface is called class implements.<br /><br />The implements keyword is used for implementing interfaces.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	71,	NULL,	NULL,	'2020-06-10 06:23:19',	'2020-06-10 06:23:19'),
(693,	NULL,	NULL,	'Overriding Methods',	'Since all methods of an interface do not have a body at all, we use the implement keyword. So these methods must be implemented in some other class before accessing them.<br /><br />The class which is implementing the interface must override/implement all the declared methods inside the interface.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	71,	NULL,	NULL,	'2020-06-10 06:23:39',	'2020-06-10 06:23:39'),
(694,	NULL,	NULL,	'Class Implementations',	'The class implements the interface but an interface extends another interface. After an example, we will show you how interfaces extend to another interface.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	71,	NULL,	NULL,	'2020-06-10 06:23:49',	'2020-06-10 06:23:49'),
(695,	NULL,	NULL,	'Example of Interface',	'Then we need to create a class called Car which implements Run.&nbsp;<br /><br />After that, we need another class called Boat which also implements Run. You can then create a class called Vehicle which will be our main class. We will instantiate both Car and Boat classes.',	NULL,	'',	NULL,	'interface Run {\n    void goForward();\n    void goDown();\n}\n\nclass Main implements Run {\n    public void goForward() {\n        System.out.println(“”Car going forward”);\n    }\n\n    public class Boat implements Run {\n        public void goForward() {\n            System.out.println(“Boat is going forward”);\n        }\n        public void goDown() {\n            System.out.println(“Boat is going down”);\n        }\n    }\n\n    public static void main(String[] args) {\n        Boat boat = new Boat();\n        boat.goForward();\n        boat.goDown();\n\n        Main car = new Main();\n        car.goForward();\n        car.goDown();\n    }\n}',	'true',	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	71,	NULL,	NULL,	'2020-06-10 06:26:08',	'2020-06-10 06:26:08'),
(696,	NULL,	'hints|Try to think about what keyword you would use to create an interface.|The answer is &ldquo;interface&rdquo; because we use that keyword to create an interface.|interface',	'Quiz',	'Fill in the blank to create an interface named Apple and Pineapple.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	'printsln',	'{\"soln\":\"interface\",\"tf1\":\"[blank] Run {<br \\/>\\r\\n&nbsp;&nbsp;&nbsp; void Apple();<br \\/>\\r\\n&nbsp;&nbsp;&nbsp; void Pineapple();<br \\/>\\r\\n}\"}',	NULL,	71,	NULL,	NULL,	'2020-06-10 06:27:08',	'2020-06-10 06:27:08'),
(697,	NULL,	NULL,	'take',	'Use the interface keyword to create an interface.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	71,	NULL,	NULL,	'2020-06-10 06:27:16',	'2020-06-10 06:27:16'),
(698,	NULL,	NULL,	'Introduction',	'In this lesson, we will go through one of the concepts in OOP which is Encapsulation.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	72,	NULL,	NULL,	'2020-06-10 06:27:56',	'2020-06-10 06:27:56'),
(699,	NULL,	NULL,	'Stealing',	'Now we don&rsquo;t ever recommend you do this, but just as an example, imagine trying to steal from a store.<br /><br />Obviously you don&rsquo;t tell everyone you are stealing and show it to them. You hide it in your clothes or in your bag so no one finds out.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	72,	NULL,	NULL,	'2020-06-10 06:28:11',	'2020-06-10 06:28:11'),
(700,	NULL,	NULL,	'Encapsulation',	'Similarly, Encapsulation is the process of hiding the data from the users or in other words we can say it protects the code by preventing access from the outside class.&nbsp;<br /><br />We can say wrapping up data into a single unit like a class, is called Encapsulation.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	72,	NULL,	NULL,	'2020-06-10 06:28:27',	'2020-06-10 06:28:27'),
(701,	NULL,	NULL,	'Data Hiding',	'Encapsulation is also known as data hiding. Encapsulation is achieved by making the fields private and using setter and getter public methods to set and get data in it.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	72,	NULL,	NULL,	'2020-06-10 06:28:39',	'2020-06-10 06:28:39'),
(702,	NULL,	NULL,	'Why so important?',	'It is important because it is the ability to modify our implemented code without breaking the code of others who use our code.<br /><br />Many hackers can also try to break our code, and this is a way of preventing that from happening.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	72,	NULL,	NULL,	'2020-06-10 06:28:53',	'2020-06-10 06:28:53'),
(703,	NULL,	NULL,	'Other Benefits',	'Encapsulation gives maintainability, flexibility, and extensibility to our code. Encapsulation in Java makes unit testing easy.<br /><br />Encapsulation allows you to change one part of the code without affecting other classes or parts of the code.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	72,	NULL,	NULL,	'2020-06-10 06:29:08',	'2020-06-10 06:29:08'),
(704,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"False\",\"question\":\"Encapsulation allows you to access data anywhere, even as a user.\",\"code\":null,\"option\":{\"1\":\"True\",\"2\":\"False\",\"3\":\"Maybe\"}}',	72,	NULL,	NULL,	'2020-06-10 06:29:32',	'2020-06-10 06:29:32'),
(705,	NULL,	NULL,	'take',	'Encapsulation is the process of hiding data from the user.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	72,	NULL,	NULL,	'2020-06-10 06:29:42',	'2020-06-10 06:29:42'),
(706,	NULL,	NULL,	'Introduction',	'In this lesson, we will go over what polymorphism is in OOP.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	73,	NULL,	NULL,	'2020-06-10 06:30:17',	'2020-06-10 06:30:17'),
(707,	NULL,	NULL,	'Buying A Phone',	'Let&rsquo;s say you go to the Apple store to buy the latest iPhone. It might be called iPhone 12 S R XR plus Pro Ultra 5G, and other taglines&hellip;<br />&nbsp;<br />It goes by 1 name right? Though it can manage many things from your banking, job, entertainment, communication, productivity, education, etc.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	73,	NULL,	NULL,	'2020-06-10 06:30:32',	'2020-06-10 06:30:32'),
(708,	NULL,	NULL,	'Polymorphism',	'Similarly, polymorphism means one name and many jobs. Polymorphism refers to the ability of one thing to take many(Poly) distinct forms(Morphism).&nbsp;<br /><br />It is the property by which the same message is sent to objects of different classes and the objects behave differently.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	73,	NULL,	NULL,	'2020-06-10 06:30:46',	'2020-06-10 06:30:46'),
(709,	NULL,	NULL,	'Multitasking',	'Polymorphism can be defined as the ability to use the same for two or more related but technically different tasks.&nbsp;<br /><br />In other words, polymorphism can be defined as an interface that can be used to perform related but different tasks with 1 thing.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	73,	NULL,	NULL,	'2020-06-10 06:31:01',	'2020-06-10 06:31:01'),
(710,	NULL,	NULL,	'Benefits',	'Polymorphism reduces the complexity of the object.&nbsp; Through polymorphism, complete implementation can be replaced by using the same method signatures.<br /><br />It reduces the volume of work in terms of handling various objects.&nbsp;',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	73,	NULL,	NULL,	'2020-06-10 06:31:14',	'2020-06-10 06:31:14'),
(711,	NULL,	NULL,	'Outside OOP',	'Polymorphism is important to remember even outside of OOP.&nbsp;<br /><br />If you want to keep the number of arguments in each function the same, and still you want to overload them, then change the datatype of their arguments.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	73,	NULL,	NULL,	'2020-06-10 06:31:34',	'2020-06-10 06:31:34'),
(712,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"Both\",\"question\":\"What does polymorphism help with?\",\"code\":null,\"option\":{\"1\":\"Multitasking\",\"2\":\"Complexity\",\"3\":\"Both\"}}',	73,	NULL,	NULL,	'2020-06-10 06:33:16',	'2020-06-10 06:33:16'),
(713,	NULL,	NULL,	'take',	'Polymorphism helps with multitasking and complexity.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	73,	NULL,	NULL,	'2020-06-10 06:33:24',	'2020-06-10 06:33:24'),
(714,	NULL,	NULL,	'Introduction',	'Welcome to the Android course. We will introduce you to the course and what you will be learning about Android.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	74,	NULL,	NULL,	'2020-06-10 21:28:57',	'2020-06-10 21:28:57'),
(715,	NULL,	NULL,	'Upcoming',	'Android is the most popular Operating System. Over 70% of phones run on Android!<br /><br />We will be learning all the basics we need to know to understand an Android app better. This will help with developing an Android application.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	74,	NULL,	NULL,	'2020-06-10 21:29:14',	'2020-06-10 21:29:14'),
(716,	NULL,	NULL,	'take',	'Let&rsquo;s learn about Android apps.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	74,	NULL,	NULL,	'2020-06-10 21:29:22',	'2020-06-10 21:29:22'),
(717,	NULL,	NULL,	'Introduction',	'Let&rsquo;s cover the basic tool we need before we get to understand how Android applications are made.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	75,	NULL,	NULL,	'2020-06-10 21:29:59',	'2020-06-10 21:29:59'),
(718,	NULL,	NULL,	'Tools',	'We all need tools for different jobs. We need a hammer to stick a nail in the wall. We need a computer to go to the internet. We need an ax to butcher an animal.<br /><br />In other words, we need tools for everything.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	75,	NULL,	NULL,	'2020-06-10 21:30:12',	'2020-06-10 21:30:12'),
(719,	NULL,	NULL,	'Android Studio',	'Similarly, we use Android Studio to develop Android applications.<br /><br />It is an IDE(Integrated Development Environment) that will take care of all the complexities of compiling our code and linking it with the JDK and Android API.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	75,	NULL,	NULL,	'2020-06-10 21:30:26',	'2020-06-10 21:30:26'),
(720,	NULL,	NULL,	'JDK',	'To use Java code, we need some free software called Java Development Kit (JDK).<br /><br />The JDK also includes even more code from other people that is separate from the Android API.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	75,	NULL,	NULL,	'2020-06-10 21:30:41',	'2020-06-10 21:30:41'),
(721,	NULL,	NULL,	'SDK',	'There is an entire range of tools needed to develop for Android, and we also need the Android API of course.&nbsp;<br /><br />This whole suite of requirements is collectively known as the Android Software Development Kit(SDK).',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	75,	NULL,	NULL,	'2020-06-10 21:30:54',	'2020-06-10 21:30:54'),
(722,	NULL,	NULL,	'Setup',	'Setting up is very simple!<br /><br />Visit developer.android.com/studio/index.html. Click the download button to proceed.<br /><br />Accept the terms and conditions by checking the checkbox, and then click the download button for Windows.<br /><br />After downloading is finished, run the installation file and finish the setup like any normal Windows program.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	75,	NULL,	NULL,	'2020-06-10 21:31:22',	'2020-06-10 21:31:22'),
(723,	NULL,	NULL,	'First Project',	'To create our first project, we need to run Android Studio and click on &ldquo;Start a new Android Studio project&rdquo;.<br /><br />Select an empty layout.<br /><br />Fill in the different information with an application name like &ldquo;Hello World&rdquo;, company domain such as programming-hero.com, project location like C:\\AndroidProjects\\HelloWorld.<br /><br />From there on, you can code your project with Java code.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	75,	NULL,	NULL,	'2020-06-10 21:33:01',	'2020-06-10 21:33:01'),
(724,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"True\",\"question\":\"Android Studio installs all the JDK, Android API, and SDK for you.\",\"code\":null,\"option\":{\"1\":\"True\",\"2\":\"False\",\"3\":\"None\"}}',	75,	NULL,	NULL,	'2020-06-10 21:33:24',	'2020-06-10 21:33:24'),
(725,	NULL,	NULL,	'take',	'Use Android Studio for Android Development.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	75,	NULL,	NULL,	'2020-06-10 21:33:32',	'2020-06-10 21:33:32'),
(726,	NULL,	NULL,	'Introduction',	'In this lesson, we will learn what emulators are, and how it is used with Android Studio.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	76,	NULL,	NULL,	'2020-06-10 21:34:02',	'2020-06-10 21:34:02'),
(727,	NULL,	NULL,	'Soccer Video Game',	'Have you ever wanted to play soccer, but it was raining outside? You might have decided to play Soccer on your Xbox or PS5.&nbsp;<br /><br />You are actually emulating soccer in your Xbox/PS5.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	76,	NULL,	NULL,	'2020-06-10 21:34:13',	'2020-06-10 21:34:13'),
(728,	NULL,	NULL,	'Emulators',	'Similarly, <strong><font color=\"#078ef9\">Emulators </font></strong>are virtual devices that are programmed to have the characteristics of the device you want to emulate. You can run a phone or Xbox or Mac on your Windows emulated.<br /><br />An Android Virtual Device(AVD) is a configuration that defines the characteristics of an Android device that you want to simulate in an Emulator.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	76,	NULL,	NULL,	'2020-06-10 21:34:37',	'2020-06-10 21:34:37'),
(729,	NULL,	NULL,	'Android Studio Emulators',	'To enable the Android Studio emulator or manage it, you need to launch Andriod Studio, navigate to Tools, navigate to Android, navigate to AVD Manager, and select Create Virtual Device.<br /><br />You can configure different settings like the architecture(84x, 64x), hardware acceleration, and device definition.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	76,	NULL,	NULL,	'2020-06-10 21:34:48',	'2020-06-10 21:34:48'),
(730,	NULL,	NULL,	'Running Emulators',	'To run the Android Studio emulator, you must go to Virtual Device Manager, then click Run in the toolbar. The Emulator starts up and displays the default canvas for your selected OS version and device.<br /><br />You must install Intel Hardware Accelerated Execution Manager (HAXM) before creating an Emulator.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	76,	NULL,	NULL,	'2020-06-10 21:35:02',	'2020-06-10 21:35:02'),
(731,	NULL,	NULL,	'Real Device',	'To run on a real device, tap the Settings menu option or the Settings app on your phone/tablet.<br /><br />The next step will vary but in general, the Developer Options menu is hidden away so as not to trouble regular users.&nbsp;<br /><br />You must perform a slightly odd task to unlock it. Tap the About device or About Phone option on the phone. Find the Build Number and tap it until it says &ldquo;You are now a developer!&rdquo;',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	76,	NULL,	NULL,	'2020-06-10 21:35:23',	'2020-06-10 21:35:23'),
(732,	NULL,	NULL,	'USB Debugging',	'Go to the Settings menu or app on your phone/tablet. Tap Developer Options and then tap the checkbox for USB Debugging.<br /><br />Connect your Android device to the USB port of your computer. Click the play icon from the Android Studio toolbar.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	76,	NULL,	NULL,	'2020-06-10 21:35:36',	'2020-06-10 21:35:36'),
(733,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"Developer Option\",\"question\":\"What option is needed to use a real device for emulating?\",\"code\":null,\"option\":{\"1\":\"Emulator\",\"2\":\"Developer Option\",\"3\":\"Device Build\"}}',	76,	NULL,	NULL,	'2020-06-10 21:36:05',	'2020-06-10 21:36:05'),
(734,	NULL,	NULL,	'take',	'Use Emulators to test your Android app.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	76,	NULL,	NULL,	'2020-06-10 21:36:14',	'2020-06-10 21:36:14'),
(735,	NULL,	NULL,	'Introduction',	'Let&rsquo;s learn about the first look into Android Studio and the parts of it.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	77,	NULL,	NULL,	'2020-06-10 21:36:44',	'2020-06-10 21:36:44'),
(736,	NULL,	NULL,	'Parts',	'Everything we use is made up of different parts. Computers are made up of CPU, RAM, SSD, etc. Our room is made up of the very basics like a door, bed, windows, etc.<br /><br />Even water is made up of parts. Hydrogen atoms and 1 Oxygen atom. Just when you thought life was simple!',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	77,	NULL,	NULL,	'2020-06-10 21:37:19',	'2020-06-10 21:37:19'),
(737,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"Both\",\"question\":\"Which of the following is made up of parts?\",\"code\":null,\"option\":{\"1\":\"Clouds\",\"2\":\"Humans\",\"3\":\"Both\"}}',	77,	NULL,	NULL,	'2020-06-10 21:37:53',	'2020-06-10 21:37:53'),
(738,	NULL,	NULL,	'Android Studio Parts',	'Similarly, Android Studio and Android applications are made of many different parts. The Android Studio user interface might seem complex but is not that hard to understand.&nbsp;<br /><br />The very basic part is actually the<strong><font color=\"#078ef9\"> Project Window</font></strong>. It enables you to explore the folders, code, and resources of the project.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	77,	NULL,	NULL,	'2020-06-10 21:38:11',	'2020-06-10 21:38:11'),
(739,	NULL,	NULL,	'Editor Window',	'The <strong><font color=\"#078ef9\">Editor Window</font></strong> takes a few different forms depending on what it is we are editing. If we are editing Java, then we can see our code neatly formatted and ready for editing.&nbsp;<br /><br />If we are designing a UI, then it offers us either a virtual editing view or a text/XML code view.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	77,	NULL,	NULL,	'2020-06-10 21:38:25',	'2020-06-10 21:38:25'),
(740,	NULL,	NULL,	'Tabs',	'<strong><font color=\"#078ef9\">Tabs</font></strong> let us switch between different files in our project. Tabs can contain many options that we can edit our project settings, structure, editor, running the app, compilers, and many more.<br /><br />Tabs can also we used for running the app &amp; selecting the device that we&rsquo;ll use.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	77,	NULL,	NULL,	'2020-06-10 21:38:42',	'2020-06-10 21:38:42'),
(741,	NULL,	NULL,	'Window',	'The <strong><font color=\"#078ef9\">Window </font></strong>varies depending upon the option selected in switching between the different areas of the UI.&nbsp;<br /><br />We can switch between the Build Window, to see that our project has been compiled and launched without errors.<br /><br />It shows output, errors, and crashes.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	77,	NULL,	NULL,	'2020-06-10 21:38:58',	'2020-06-10 21:38:58'),
(742,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"Editor Window\",\"question\":\"Which part of the Android Studio UI helps us edit our project code?\",\"code\":null,\"option\":{\"1\":\"Project Window\",\"2\":\"Edit Tab\",\"3\":\"Editor Window\"}}',	77,	NULL,	NULL,	'2020-06-10 21:39:25',	'2020-06-10 21:39:25'),
(743,	NULL,	NULL,	'take',	'Use UI for Android Studio navigation.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	77,	NULL,	NULL,	'2020-06-10 21:39:32',	'2020-06-10 21:39:32'),
(744,	NULL,	NULL,	'Introduction',	'In this lesson, we will talk about the manifest folder and the file inside it.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	78,	NULL,	NULL,	'2020-06-10 21:40:04',	'2020-06-10 21:40:04'),
(745,	NULL,	NULL,	'Important Info',	'Sometime we would want to have all the basic information we need for an app in 1 file.<br /><br />Thankfully, we have such a file!',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	78,	NULL,	NULL,	'2020-06-10 21:40:15',	'2020-06-10 21:40:15'),
(746,	NULL,	NULL,	'Manifest',	'The <strong><font color=\"#078ef9\">manifests</font></strong> folder has just one file inside it. Expand the manifests folder and double click the AndroidManifest.xml file to view it.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	78,	NULL,	NULL,	'2020-06-10 21:40:27',	'2020-06-10 21:40:27'),
(747,	NULL,	NULL,	'Information',	'The manifests file is very important in our app. It contains very important information like:<ul>	<li>Permissions</li>	<li>Created Activities</li>	<li>Assigning Themes</li>	<li>Launcher Activity</li>	<li>Created Services</li>	<li>Created Broadcasts</li>	<li>Created Fragments</li></ul>',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	78,	NULL,	NULL,	'2020-06-10 21:40:51',	'2020-06-10 21:40:51'),
(748,	NULL,	NULL,	'App Info',	'In the file, a line tells Android that the icon we want to show the user in their app drawer/home screen to launch the app is contained in the mipmap folder and is called ic_launcher.<br /><br />&lt;application<br />&nbsp;&nbsp;android: icon=&quot;@mipmap/ic_launcher&quot;<br /><br />Then there is the app name. We first denote the name that we gave our app, and then the name is contained as a String with a label of app_name.<br /><br />&lt;application<br />&nbsp;&nbsp;android: label=&quot;@String/app_name&quot;',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	78,	NULL,	NULL,	'2020-06-10 21:41:18',	'2020-06-10 21:41:18'),
(749,	NULL,	NULL,	'Themes',	'We can use the created themes inside an app or activity using a simple line. We will soon learn how to create themes in our User Interface section.&nbsp;<br /><br />&lt;application<br />&nbsp;&nbsp;android: theme=&quot;@style/AppTheme&quot;&gt;<br /><br />We define themes for our app and use them in activities &amp; apps.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	78,	NULL,	NULL,	'2020-06-10 21:41:35',	'2020-06-10 21:41:35'),
(750,	NULL,	NULL,	'Activities',	'Every activity we create, a new line will be created in manifest.xml.<br />Notice that if you copy source codes from another project, you need to create a line like this, otherwise you&#39;ll get an error.<br /><br />&lt;activity<br />&nbsp;&nbsp;android: name=&quot;.MainActivity&quot;&gt;<br /><br />In an app, there are many activities, but we need to specify one activity only to be displayed first to the user when opening the app.<br /><br />&lt;intent-filter&gt;<br />&nbsp;&nbsp;&lt;action<br />&nbsp;&nbsp;&nbsp;&nbsp;android:name=&quot;android.intent.action.MAIN&quot;/&gt;<br />&nbsp;&nbsp;&lt;category<br />&nbsp;&nbsp;&nbsp;&nbsp;android:name=&quot;android.intent.category.LAUNCHER&quot;/&gt;<br />&lt;/intent-filter&gt;',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	78,	NULL,	NULL,	'2020-06-10 21:41:59',	'2020-06-10 21:41:59'),
(751,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"To store important info\",\"question\":\"What is the purpose of the manifest file?\",\"code\":null,\"option\":{\"1\":\"To optimize the app\",\"2\":\"To store cache\",\"3\":\"To store important info\"}}',	78,	NULL,	NULL,	'2020-06-10 21:42:25',	'2020-06-10 21:42:25'),
(752,	NULL,	NULL,	'take',	'AndroidManifest.xml stores important information.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	78,	NULL,	NULL,	'2020-06-10 21:42:33',	'2020-06-10 21:42:33'),
(753,	NULL,	NULL,	'Introduction',	'Welcome back!&nbsp;<br /><br />This is the <strong><font color=\"#078ef9\">Android Fundamentals</font></strong> galaxy, where you will learn the fundamentals of Android Development &amp; Android Studio.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	81,	NULL,	NULL,	'2020-06-10 23:07:54',	'2020-06-10 23:07:54'),
(754,	NULL,	NULL,	'Learning',	'In this galaxy, we will learn about the comments, logs, activities, intents, services, layouts, widgets, and more.<br /><br />This will allow us to have a fundamental understanding of <strong><font color=\"#078ef9\">Android Development</font></strong>. We hope you learn a lot from this next adventure!',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	81,	NULL,	NULL,	'2020-06-10 23:08:07',	'2020-06-10 23:08:07'),
(755,	NULL,	NULL,	'take',	'Let&#39;s get learning!',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	81,	NULL,	NULL,	'2020-06-10 23:08:23',	'2020-06-10 23:08:23'),
(756,	NULL,	NULL,	'Introduction',	'In this lesson, we will learn how we can use comments in different languages.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	82,	NULL,	NULL,	'2020-06-10 23:08:49',	'2020-06-10 23:08:49'),
(757,	NULL,	NULL,	'Notes',	'Have you ever taken <strong><font color=\"#078ef9\">notes</font></strong> in class? You probably have because it helps you remember your lessons better in the future.<br /><br />Whenever you look back at them, you will understand what you have learned better.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	82,	NULL,	NULL,	'2020-06-10 23:09:00',	'2020-06-10 23:09:00'),
(758,	NULL,	NULL,	'Comments',	'Similarly, in programming, we can layout <strong><font color=\"#078ef9\">comments</font></strong> in our project. This is to help us understand the code after a period of time.<br /><br />It is also efficient because we would not be able to put a lot of sticky notes on our program since it is digital.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	82,	NULL,	NULL,	'2020-06-10 23:09:14',	'2020-06-10 23:09:14'),
(759,	NULL,	NULL,	'Remembering',	'Every developer needs to make notes about his/her code. This is to remember what he/she wrote easily.&nbsp;<br /><br />For that, Android Studio &amp; other IDEs, allow the developers to create comments inside their codes to easily remember their algorithms when they want to edit them.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	82,	NULL,	NULL,	'2020-06-10 23:09:31',	'2020-06-10 23:09:31'),
(760,	NULL,	NULL,	'Java Comments',	'In Java, you leave comments using <strong><font color=\"#078ef9\">//</font></strong>, <strong><font color=\"#078ef9\">/*</font></strong>, or <strong><font color=\"#078ef9\">/**</font></strong>.&nbsp;<br /><br />Use <strong><font color=\"#078ef9\">//</font></strong> to comment for 1 entire line.<br /><br />// This is a comment.&nbsp;<br /><br />Use <strong><font color=\"#078ef9\">/*</font></strong> for multiple lines of comments.<br /><br />/* This is another<br />comment. */<br /><br />Use <strong><font color=\"#078ef9\">/**</font></strong> for Doc Tools from HTML.<br /><br />/**<br />Hello!<br />This is also another type of comment.<br />**/',	NULL,	'',	NULL,	'code block',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	82,	NULL,	NULL,	'2020-06-10 23:11:14',	'2020-06-10 23:11:34'),
(761,	NULL,	NULL,	'XML Comments',	'To comment on XML, you can use something similar to an open tag and a closing tag.&nbsp;<br /><br />&lt;!-- This is a comment in XML. --&gt;<br /><br />Use <strong><font color=\"#078ef9\">&lt;!--</font></strong> to open the comment. Use <strong><font color=\"#078ef9\">--&gt;</font></strong> to close the comment.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	82,	NULL,	NULL,	'2020-06-10 23:11:57',	'2020-06-10 23:11:57'),
(762,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"They can use Doc Tools from HTML.\",\"question\":\"What makes <strong>\\/**<\\/strong> special in Java comments?\",\"code\":null,\"option\":{\"1\":\"They are multiline comments.\",\"2\":\"They can write in CSS.\",\"3\":\"They can use Doc Tools from HTML.\"}}',	82,	NULL,	NULL,	'2020-06-10 23:12:49',	'2020-06-10 23:12:49'),
(763,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"<!-- -->\",\"question\":\"How do you comment in XML?\",\"code\":null,\"option\":{\"1\":\"<!-- -->\",\"2\":\"<--  -->\",\"3\":\"\\/*      *\\/\"}}',	82,	NULL,	NULL,	'2020-06-10 23:13:28',	'2020-06-10 23:13:28'),
(764,	NULL,	NULL,	'take',	'Use <strong><font color=\"#078ef9\">comments</font></strong> to remember your code.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	82,	NULL,	NULL,	'2020-06-10 23:13:41',	'2020-06-10 23:13:41'),
(765,	NULL,	NULL,	'Introduction',	'Let&#39;s learn what logs are and how we can use them to understand our app better.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	83,	NULL,	NULL,	'2020-06-10 23:16:39',	'2020-06-10 23:16:39'),
(766,	NULL,	NULL,	'Movies',	'We hope you have gone to the movies because it is amazing. But you know what else is amazing? The process of making the movie.&nbsp;<br /><br />We can&#39;t see it though, because it is the process of how the movie is created. We honestly don&#39;t want to hear the director yelling anyway.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	83,	NULL,	NULL,	'2020-06-10 23:16:54',	'2020-06-10 23:16:54'),
(767,	NULL,	NULL,	'System messages',	'Similarly, when we run our program, the <strong><font color=\"#078ef9\">system</font></strong> creates it in the process. They are system messages.<br /><br />The system acts like the director screaming at the computer to perform tasks and outputting the process to us. So mean, right?',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	83,	NULL,	NULL,	'2020-06-10 23:17:11',	'2020-06-10 23:17:11'),
(768,	NULL,	NULL,	'Logs',	'These system messages are called <strong><font color=\"#078ef9\">logs</font></strong>. They are added to your app with the <strong><font color=\"#078ef9\">Log</font></strong> class.<br /><br />You can use <strong><font color=\"#078ef9\">LogCat</font></strong> logging utility to monitor your application&#39;s log output, either on the emulator or a device that is attached to Eclipse via the debugger.&nbsp;<br /><br />This skill is invaluable for debugging issues, even when great debuggers are available for stepping through code.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	83,	NULL,	NULL,	'2020-06-10 23:17:25',	'2020-06-10 23:17:25'),
(769,	NULL,	NULL,	'Logging',	'The Android SDK includes a useful logging utility class called <strong><font color=\"#078ef9\">android.util.log</font></strong>.&nbsp;<br /><br />logging messages are categorized by <strong><font color=\"#078ef9\">severity</font></strong>, with errors being the most severe, then warnings, and informational messages.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	83,	NULL,	'Each type of logging message has its own <strong>method</strong>. Simply call the method and a log message is created.<br />\r\n<br />\r\nThe message types and their related method calls are:<br />\r\n<br />\r\nThe <strong>Log.e()</strong> method for errors.<br />\r\nThe <strong>Log.w()</strong> method for warnings.<br />\r\nThe <strong>Log.i()</strong> method for informational messages.<br />\r\nThe <strong>Log.d()</strong> method for debug messages.<br />\r\nThe <strong>Log.v()</strong> method for verbose messages.',	'2020-06-10 23:18:06',	'2020-06-10 23:18:06'),
(770,	NULL,	NULL,	'Parameters',	'The first <strong><font color=\"#078ef9\">parameter</font></strong> of each Log method is a String called a <strong><font color=\"#078ef9\">tag</font></strong>.&nbsp;<br /><br />It&#39;s common practice to define a global static <strong><font color=\"#078ef9\">String</font></strong> to represent the overall application or the specific activity within the application.<br /><br />private static final String TAG = &quot;MyApp&quot;;',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	83,	NULL,	NULL,	'2020-06-10 23:18:21',	'2020-06-10 23:18:21'),
(771,	NULL,	NULL,	'Method',	'You will often find that the tag is defined as the class in which the Log statement occurs. This is a reasonable conversion, but anything identifiable or useful to you will do.<br /><br />Now anytime you use a Log <strong><font color=\"#078ef9\">method</font></strong>, you supply this tag. An informational logging message might look like this:<br /><br />Log.i(TAG, &quot;Download the Programming Hero app&quot;);',	NULL,	'',	NULL,	'code block',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	83,	NULL,	'You can also add logging to your <strong>Activity</strong> class. First, you add the appropriate import statement for the logging class <strong>android.util.Log</strong>.<br />\r\n<br />\r\nThen you declare a logging tag for use within your class or app.&nbsp;<br />\r\n<br />\r\nFinally, add logging methods to call wherever you want to log output.',	'2020-06-10 23:18:53',	'2020-06-10 23:19:08'),
(772,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"Debugging\",\"question\":\"What is the main use of logging?\",\"code\":null,\"option\":{\"1\":\"Finding Hackers\",\"2\":\"Debugging\",\"3\":\"Nothing\"}}',	83,	NULL,	NULL,	'2020-06-10 23:19:39',	'2020-06-10 23:19:39'),
(773,	NULL,	NULL,	'take',	'Use <strong><font color=\"#078ef9\">Logging</font></strong> for debugging.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	83,	NULL,	NULL,	'2020-06-10 23:19:49',	'2020-06-10 23:19:49'),
(774,	NULL,	NULL,	'Introduction',	'In this lesson, we will learn about Android activities in apps.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	84,	NULL,	NULL,	'2020-06-10 23:20:13',	'2020-06-10 23:20:13'),
(775,	NULL,	NULL,	'Desktop',	'Have you ever used a Windows Desktop? If you have, you probably know that it has different apps you can open from the bottom.<br /><br />Each of the apps you open display inside a window. That window is the task running.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	84,	NULL,	NULL,	'2020-06-10 23:20:25',	'2020-06-10 23:20:25'),
(776,	NULL,	NULL,	'Activity',	'Similarly, an Android app&#39;s <strong><font color=\"#078ef9\">activity</font></strong> is the User interface or task you are using.<br /><br />You will find the display to be able to perform tasks. You can also switch between different activities.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	84,	NULL,	NULL,	'2020-06-10 23:20:37',	'2020-06-10 23:20:37'),
(777,	NULL,	NULL,	'main()',	'If you have worked with C, C++, or Java, then you must have seen that your program starts from a <strong><font color=\"#078ef9\">main()</font></strong> function.<br /><br />Android system initiates its program within an Activity starting with a call of <strong><font color=\"#078ef9\">onCreate()</font></strong> callback method.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	84,	NULL,	NULL,	'2020-06-10 23:20:52',	'2020-06-10 23:20:52'),
(778,	NULL,	NULL,	'Main Activity',	'An Android app may contain one or more activities, meaning one or more screens.<br /><br />The Android app starts by showing the <strong><font color=\"#078ef9\">main activity</font></strong>, and from there the app may make it possible to open additional activities.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	84,	NULL,	NULL,	'2020-06-10 23:21:13',	'2020-06-10 23:21:13'),
(779,	NULL,	NULL,	'Creating Activities',	'When you create a new project in Android Studio, the <strong><font color=\"#078ef9\">new project dialog</font></strong> will ask you if you want to create an activity as part of the project.<br /><br />If your app only needs a single activity, you do not need to create more Activity <strong><font color=\"#078ef9\">subclasses</font></strong>.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	84,	NULL,	NULL,	'2020-06-10 23:21:27',	'2020-06-10 23:21:27'),
(780,	NULL,	NULL,	'Navigation',	'You can create new activities from the Java Folder &rarr; Right Click &rarr; New &rarr; Activity &rarr; Empty Activity',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	84,	'An activity may have an associated <strong>XML layout</strong> file. The XML layout file specifies how the GUI components in the activity are to be rendered relative to each other.<br />\r\n<br />\r\nYou are not forced to have a layout XML file for each activity. An activity can also create the layout programmatically, but XML layout files are easier.',	NULL,	'2020-06-10 23:21:50',	'2020-06-10 23:21:50'),
(781,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"A Screen\",\"question\":\"What does each activity represent in an Android app?\",\"code\":null,\"option\":{\"1\":\"A Screen\",\"2\":\"A XML file\",\"3\":\"A Desktop\"}}',	84,	NULL,	NULL,	'2020-06-10 23:22:14',	'2020-06-10 23:22:14'),
(782,	NULL,	NULL,	'take',	'Use <strong><font color=\"#078ef9\">activities</font></strong> to represent a UI screen.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	84,	NULL,	NULL,	'2020-06-10 23:22:24',	'2020-06-10 23:22:24'),
(783,	NULL,	NULL,	'Introduction',	'Let&#39;s learn a bit about intents and how useful they are.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	85,	NULL,	NULL,	'2020-06-10 23:22:57',	'2020-06-10 23:22:57'),
(784,	NULL,	NULL,	'More Activity Functions',	'We know how to create activities. But what if we want to <strong><font color=\"#078ef9\">start, launch, remove, or pause?</font></strong><br /><br />If only we were able to say &quot;activity start&quot;. Technology can such sometimes. :(',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	85,	NULL,	NULL,	'2020-06-10 23:23:07',	'2020-06-10 23:23:07'),
(785,	NULL,	NULL,	'Intents',	'Thankfully, there is a way! No, we don&#39;t say &quot;activity start&quot;, but we can use something known as an <strong><font color=\"#078ef9\">intent</font></strong>.<br /><br /><strong><font color=\"#078ef9\">Android Intent</font></strong> is the message that is passed between components such as activities, content providers, broadcast receivers, services, etc.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	85,	NULL,	NULL,	'2020-06-10 23:23:22',	'2020-06-10 23:23:22'),
(786,	NULL,	NULL,	'Usage',	'The intent is generally used with the <strong><font color=\"#078ef9\">startActivity()</font></strong> method to invoke activity, broadcast receivers, etc.<br /><br />The dictionary meaning of intent is <strong><font color=\"#078ef9\">intention or purpose</font></strong>. So, it can be described as the intention to perform an action.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	85,	NULL,	NULL,	'2020-06-10 23:23:35',	'2020-06-10 23:23:35'),
(787,	NULL,	NULL,	'Benefits',	'Android intents are mainly used to:<ul>	<li>start the service</li>	<li>Launch an activity</li>	<li>Display a web page</li>	<li>Display a list of contacts</li>	<li>Broadcast a message</li>	<li>Dial a phone number</li></ul>There are 2 types of intents. They are <strong><font color=\"#078ef9\">Explicit</font></strong> and <strong><font color=\"#078ef9\">Implicit</font></strong> Intents.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	85,	NULL,	NULL,	'2020-06-10 23:23:53',	'2020-06-10 23:23:53'),
(788,	NULL,	NULL,	'Explicit Intents',	'<strong><font color=\"#078ef9\">Explicit Intents</font></strong> mean you know who will be handling your action. In this cause, an <strong><font color=\"#078ef9\">mp3</font></strong> file that can be downloaded.&nbsp;<br /><br />You can specify this intent in your app. The mp3 file will be handled by someone else and you will download it from them.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	85,	NULL,	NULL,	'2020-06-10 23:24:09',	'2020-06-10 23:24:09'),
(789,	NULL,	NULL,	'Implicit Intents',	'<strong><font color=\"#078ef9\">Implicit intents</font></strong> mean that you don&#39;t know who will be handling your action in the app.&nbsp;<br /><br />This is because it belongs to something outside of your app. An example would be a <strong><font color=\"#078ef9\">camera app </font></strong>that receives your action and performs accordingly.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	85,	NULL,	NULL,	'2020-06-10 23:24:44',	'2020-06-10 23:24:44'),
(790,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"Both\",\"question\":\"Which intent performs an action with a purpose?\",\"code\":null,\"option\":{\"1\":\"Explicit Intents\",\"2\":\"Implicit Intents\",\"3\":\"Both\"}}',	85,	NULL,	NULL,	'2020-06-10 23:25:10',	'2020-06-10 23:25:10'),
(791,	NULL,	NULL,	'take',	'Use <strong><font color=\"#078ef9\">intents</font></strong> to perform actions with a purpose.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	85,	NULL,	NULL,	'2020-06-10 23:25:18',	'2020-06-10 23:25:18'),
(792,	NULL,	NULL,	'Introduction',	'Let&#39;s learn about one of the major pillars of every Android app, services.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	86,	NULL,	NULL,	'2020-06-10 23:25:51',	'2020-06-10 23:25:51'),
(793,	NULL,	NULL,	'Actions',	'Sometimes we might want to perform an action such as send an email or send data to a server.&nbsp;<br /><br />To do so, we hire a man and pay him/her $500/hr to sit there 24/7 and perform those actions for us.<br /><br />No, but seriously, we have a much better solution than that. Don&#39;t you think?',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	86,	NULL,	NULL,	'2020-06-10 23:26:03',	'2020-06-10 23:26:03'),
(794,	NULL,	NULL,	'Services',	'The solution to this issue is adding a service.&nbsp;<br /><br />Services are one of the major pillars of Android which is used when you need to perform any background task without disturbing the application flow.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	86,	NULL,	NULL,	'2020-06-10 23:26:15',	'2020-06-10 23:26:15'),
(795,	NULL,	NULL,	'Background Process',	'The background services are independent of the application&#39;s life cycle. Once the service has run, it won&#39;t be stopped when your application is closed.&nbsp;<br /><br />It will be running as a background task.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	86,	NULL,	NULL,	'2020-06-10 23:26:30',	'2020-06-10 23:26:30'),
(796,	NULL,	NULL,	'Example',	'As you can see when you open a music app for listening to your favorite songs, after you play any song and go out from your app, you are not in your app.<br /><br />But still, hear music playing in the background.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	86,	NULL,	NULL,	'2020-06-10 23:26:46',	'2020-06-10 23:26:46'),
(797,	NULL,	NULL,	'Explanation',	'This is what services do for you in Android. It offers you to do some work in your application in the background.&nbsp;<br /><br />Another example is downloading a file in the background and using another app at the same time.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	86,	NULL,	NULL,	'2020-06-10 23:27:01',	'2020-06-10 23:27:01'),
(798,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"Multitask\",\"question\":\"What do services allow you to do?\",\"code\":null,\"option\":{\"1\":\"Multitask\",\"2\":\"Protect Privacy\",\"3\":\"Run Applications Faster\"}}',	86,	NULL,	NULL,	'2020-06-10 23:27:30',	'2020-06-10 23:27:30'),
(799,	NULL,	NULL,	'take',	'Use <strong><font color=\"#078ef9\">services</font></strong> for tasks in the background.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	86,	NULL,	NULL,	'2020-06-10 23:27:39',	'2020-06-10 23:27:39'),
(800,	NULL,	NULL,	'Introduction',	'In this lesson, we will learn about different views in our UI.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	88,	NULL,	NULL,	'2020-06-10 23:28:13',	'2020-06-10 23:28:13'),
(801,	NULL,	NULL,	'Views',	'We have different views in life. We can see objects in different perspectives. This can allow us to understand them better and feel a sense of comfort.&nbsp;<br /><br />Similarly, <strong><font color=\"#078ef9\">views</font></strong> in Android apps are the building blocks of the UI that we see and enjoy. It makes the app more satisfying.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	88,	NULL,	NULL,	'2020-06-10 23:28:23',	'2020-06-10 23:28:23'),
(802,	NULL,	NULL,	'Text View',	'<strong><font color=\"#078ef9\">Text View</font></strong> is the first type of view in an Android app. It displays text, and is used in 99% of apps.&nbsp;<br /><br />First, you need to find the TextView in the palette. This can be found in both common and text categories. Left-click and drag the <strong><font color=\"#078ef9\">TextView</font></strong> onto the UI and notice that it sites neatly.<br /><br />The XML file contains the following:',	NULL,	'',	NULL,	'<TextView android:id=\"@+id/simpleTextView\"\n  android:layout_width=\"wrap_content\"\n  android:layout_height=\"wrap_content\"\n  android:text=\"Programming Hero\" />',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	88,	NULL,	'A view object may have a unique ID assigned to it which will identify the View uniquely within the tree. The syntax for an XML tag is:<br />\r\n<br />\r\nandroid:id=&quot;@+id/texty&quot;<br />\r\n<br />\r\nWe specified the id as &quot;texty&quot; which will be used in Java code.<br />\r\n<br />\r\nYou can also create an instance of the Control object and capture it from the layout:<br />\r\n<br />\r\nTextView myText = findViewById(R.id.texty);',	'2020-06-10 23:29:28',	'2020-06-10 23:29:28'),
(803,	NULL,	NULL,	'EditText',	'In Android, <strong><font color=\"#078ef9\">EditText</font></strong> is a standard entry widget in Android apps. It is an overlay over TextView that configures itself to be editable.&nbsp;<br /><br />EditText is a subclass of TextView with the text editing operations. We can create an EditText instance by declaring it inside a layout or by instantiating it programmatically.<br /><br />You need to search for &quot;EditText&quot; in the widget search box. Drag and drop any of the EditText, and then you will see the XML code in your layout.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	88,	NULL,	NULL,	'2020-06-10 23:29:56',	'2020-06-10 23:29:56'),
(804,	NULL,	NULL,	'ImageView',	'<strong><font color=\"#078ef9\">ImageView</font></strong> classes are used to display an image file in an application. Android is enriched with some of the best UI design widgets that allows us to build good looking and attractive UI.<br /><br />We need to add ImageView code in XML or you can drag and drop ImageView widgets from the panel. Put the image inside the <strong><font color=\"#078ef9\">drawable folder</font></strong>, and then add Java code to instantiate the ImageView.<br /><br />XML:',	NULL,	'',	NULL,	'XML:\n\n<ImageView\nandroid:id=\"@+id/simpleImageView\"\nandroid:layout_width=\"fill_parent\"\nandroid:layout_height=\"wrap_content\"\nandroid:src=\"@drawable/lion\" />\n\nJava:\n\nImageView simpleImageView=(ImageView) findViewById(R.id.simpleImageView);',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	88,	NULL,	NULL,	'2020-06-10 23:31:52',	'2020-06-10 23:31:52'),
(805,	NULL,	NULL,	'Button',	'<strong><font color=\"#078ef9\">Button</font></strong> represents a push button. A push button can be clicked or pressed by the user to perform an action.<br /><br />There are different types of buttons used in Android such as CompoundButton, ToggleButton, and RadioButton.<br /><br />We need to drag and drop a button widget to our layout. Then we need to instantiate the button in Java code.',	NULL,	'',	NULL,	'XML: \n\n<Button\nandroid:id=\"@+id/simpleButton\"\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:text=\"Programming Hero\"/>\n\nJava:\n\nButton button = (Button) findViewById(R.id.simpleButton);\nbutton.setText(\"Learn Programming In Programming Hero\");',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	88,	NULL,	NULL,	'2020-06-10 23:32:24',	'2020-06-10 23:32:24'),
(806,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"True\",\"question\":\"Views need to be declared in a Java file in order to be used.\",\"code\":null,\"option\":{\"1\":\"True\",\"2\":\"False\",\"3\":\"None\"}}',	88,	NULL,	NULL,	'2020-06-10 23:32:48',	'2020-06-10 23:32:48'),
(807,	NULL,	NULL,	'take',	'Use <strong><font color=\"#078ef9\">Views</font></strong> for better UI.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	88,	NULL,	NULL,	'2020-06-10 23:32:56',	'2020-06-10 23:32:56'),
(808,	NULL,	NULL,	'Introduction',	'Welcome to the Advanced Android Development Galaxy.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	89,	NULL,	NULL,	'2020-06-11 01:05:49',	'2020-06-11 01:05:49'),
(809,	NULL,	NULL,	'Advanced',	'In this galaxy, we learn how to develop advanced Android applications. This will help us become more fluent in our understanding of Android apps.<br /><br />We will try to create the best experience for the user.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	89,	NULL,	NULL,	'2020-06-11 01:06:10',	'2020-06-11 01:06:10'),
(810,	NULL,	NULL,	'take',	'Let&#39;s start learning!',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	89,	NULL,	NULL,	'2020-06-11 01:06:24',	'2020-06-11 01:06:24'),
(811,	NULL,	NULL,	'Introduction',	'In this lesson, we will learn how we can create a Progress Bar for our Android application.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	90,	NULL,	NULL,	'2020-06-11 01:07:10',	'2020-06-11 01:07:10'),
(812,	NULL,	NULL,	'Progress',	'When we perform an <strong><font color=\"#078ef9\">action or set goals</font></strong>, we want to see how close or how far we are to achieving those goals.&nbsp;<br /><br />For example, if you have ever taken a course online, you might see a percentage of how much of the course you have completed.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	90,	NULL,	NULL,	'2020-06-11 01:07:32',	'2020-06-11 01:07:32'),
(813,	NULL,	NULL,	'Progress Bar',	'Similarly in applications, we need to show or display the<strong><font color=\"#078ef9\"> progress or status</font></strong> of the work being done graphically.<br /><br /><strong><font color=\"#078ef9\">ProgressBar</font></strong> is used to display the status of work being done like analyzing status of work or downloading a file, etc.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	90,	NULL,	NULL,	'2020-06-11 01:08:22',	'2020-06-11 01:08:22'),
(814,	NULL,	NULL,	'Default',	'In Android, by default a progress bar will be displayed as a spinning wheel but if we want to be displayed as a horizontal bar, then we need to use a style attribute as horizontal.<br /><br />It mainly uses the <strong><font color=\"#078ef9\">android.widget.ProgressBar</font></strong> class.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	90,	NULL,	NULL,	'2020-06-11 01:08:41',	'2020-06-11 01:08:41'),
(815,	NULL,	NULL,	'Code',	'To add a progress bar to a layout file, you can use the <strong><font color=\"#078ef9\">&lt;ProgressBar&gt; </font></strong>element. By default, a progress bar is a spinning wheel.<br /><br />Add the following XML code into the layout-<br /><br />&lt;ProgressBar<br />&nbsp;&nbsp;android:id=&quot;@+id/myProgressBar&quot;<br />&nbsp;&nbsp;android:layout_width=&quot;wrap_content&quot;<br />&nbsp;&nbsp;android:layout_height=&quot;wrap_content&quot; /&gt;<br /><br />You can change the style of the ProgressBar circular to horizontal by changing only the style.<br /><br />style=&quot;@style/Widget.AppCompat.ProgressBar.Horizontal&quot;',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	90,	NULL,	NULL,	'2020-06-11 01:09:20',	'2020-06-11 01:09:20'),
(816,	NULL,	NULL,	'Java',	'Before we can move on with using the Progress Bar, we need to initialize it in a <strong><font color=\"#078ef9\">Java</font></strong><strong><font color=\"#078ef9\"> </font></strong>class.<br /><br />ProgressBar progressBar = findViewById(R.id.myProgressBar);<br /><br />int progressValue = progressBar.getProgress();',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	90,	NULL,	NULL,	'2020-06-11 01:09:42',	'2020-06-11 01:09:42'),
(817,	NULL,	NULL,	'Attribute',	'<strong><font color=\"#078ef9\">max</font></strong> is an attribute used in Android to define the maximum value of the progress bar that can be taken.<br /><br /><strong><font color=\"#078ef9\">progress</font></strong> is an attribute used to define the default progress value between 0 and max.<br /><br /><strong><font color=\"#078ef9\">progressDrawable</font></strong> is an attribute used to set a custom drawable for the progress mode.<br /><br /><strong><font color=\"#078ef9\">background</font></strong> is an attribute used to set the background of a Progress Bar. We can set a color or a drawable in the background of a Progress Bar.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	90,	NULL,	NULL,	'2020-06-11 01:10:08',	'2020-06-11 01:10:08'),
(818,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"Circular\",\"question\":\"What is the default style of a Progress Bar set by Android?\",\"code\":null,\"option\":{\"1\":\"Horizontal\",\"2\":\"Vertical\",\"3\":\"Circular\"}}',	90,	NULL,	NULL,	'2020-06-11 01:10:57',	'2020-06-11 01:10:57'),
(819,	NULL,	NULL,	'take',	'Use a <strong><font color=\"#078ef9\">Progress Bar </font></strong>to display progress.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	90,	NULL,	NULL,	'2020-06-11 01:11:16',	'2020-06-11 01:11:16'),
(820,	NULL,	NULL,	'Introduction',	'Let&#39;s learn about fragments, what they are, and how we can use them as an independent Android component.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	91,	NULL,	NULL,	'2020-06-11 01:12:20',	'2020-06-11 01:12:20'),
(821,	NULL,	NULL,	'Individual Tasks',	'I am sure you have multiple <strong><font color=\"#078ef9\">tasks</font></strong> you have to complete during the day. Each of them is specific like cleaning your room, washing the dishes, doing homework, etc.<br /><br />They act like individual components!',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	91,	NULL,	NULL,	'2020-06-11 01:12:36',	'2020-06-11 01:12:36'),
(822,	NULL,	NULL,	'Fragments',	'Similarly, <strong><font color=\"#078ef9\">fragments</font></strong> are an independent Android component that can be used by an activity. It is fairly similar to a function.<br /><br />A fragment encapsulates functionality so that it is easier to reuse within activities and layouts.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	91,	NULL,	NULL,	'2020-06-11 01:12:53',	'2020-06-11 01:12:53'),
(823,	NULL,	NULL,	'Context',	'A fragment runs in the context of activity but has its own life cycle and typically its own user interface.<br /><br />It is also possible to define fragments without a user interface. It is also possible to define fragments without a user interface.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	91,	NULL,	'Android devices exist in a variety of screen sizes and densities. Fragments simplify the reuse of components in different layouts and their logic.&nbsp;<br />\r\n<br />\r\nYou can build single-pane layouts for phones and multi-pane layouts for tablets. You can also use fragments that support different layouts for landscape and portrait orientations.',	'2020-06-11 01:13:32',	'2020-06-11 01:13:32'),
(824,	NULL,	NULL,	'Creation',	'To create a fragment, you need to first create an Android project, go to the <strong><font color=\"#078ef9\">package folder</font></strong>, and then create a blank fragment.<br /><br />In the next screen, the name of the fragment you want it can be chosen. You will need o to uncheck 2 boxes for <strong><font color=\"#078ef9\">Include fragments factory methods</font></strong> and <strong><font color=\"#078ef9\">Include interface callbacks</font></strong>.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	91,	NULL,	NULL,	'2020-06-11 01:13:54',	'2020-06-11 01:13:54'),
(825,	NULL,	NULL,	'Code',	'After you create a fragment, you will get a <strong><font color=\"#078ef9\">Java</font></strong> file. It will contain the following code-',	NULL,	'',	NULL,	'import android.os.Bundle;\nimport android.support.v4.app.Fragment;\nimport android.view.LayoutInflater;\nimport android.view.ViewGroup;\n\npublic class ArticleFragment extends Fragment {\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n        Bundle savedInstanceState) {\n        // Inflate the layout for this fragment\n        return inflater.inflate(R.layout.article_view, container, false);\n    }\n}',	NULL,	'Let&#39;s explore each part of the code!',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	91,	NULL,	NULL,	'2020-06-11 01:14:37',	'2020-06-11 01:14:37'),
(826,	NULL,	NULL,	'Explanation',	'The <strong><font color=\"#078ef9\">onCreateView()</font></strong> method gets a LayoutInflater, a ViewGroup, and a Bundle as parameters.<br /><br />The <strong><font color=\"#078ef9\">LayoutInflater</font></strong> is a component that can create View instances based on layout XML files. The file does that by calling <strong><font color=\"#078ef9\">layout.inflate()</font></strong>.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	91,	'The <strong>ViewGroup</strong> parameter of onCreateView() is the parent ViewGroup into which the View of the fragment is to be inserted. That is a ViewGroup inside the activity that will host the fragment.<br />\r\n<br />\r\nThe <strong>Bundle</strong> parameter of onCreateView() is a Bundle into which the fragment can save information, just like an Activity can.',	NULL,	'2020-06-11 01:15:10',	'2020-06-11 01:15:10'),
(827,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"False\",\"question\":\"Fragments can only be used once in an activity.\",\"code\":null,\"option\":{\"1\":\"True\",\"2\":\"False\",\"3\":\"Maybe\"}}',	91,	NULL,	NULL,	'2020-06-11 01:15:40',	'2020-06-11 01:15:40'),
(828,	NULL,	NULL,	'take',	'Use <strong><font color=\"#078ef9\">fragments</font></strong> as reusable components.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	91,	NULL,	NULL,	'2020-06-11 01:15:49',	'2020-06-11 01:15:49'),
(829,	NULL,	NULL,	'Introduction',	'In this lesson, we will explore ViewPagers to be able to organize the UI for our app.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	92,	NULL,	NULL,	'2020-06-11 01:16:41',	'2020-06-11 01:16:41'),
(830,	NULL,	NULL,	'Books',	'When you read a book, you go through the different <strong><font color=\"#078ef9\">pages</font></strong>. In an app, you need to be able to swipe through different views for better navigation.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	92,	NULL,	NULL,	'2020-06-11 01:16:54',	'2020-06-11 01:16:54'),
(831,	NULL,	NULL,	'ViewPager',	'The Android apps do this is called a <strong><font color=\"#078ef9\">ViewPager</font></strong>. They allow the user to flip left and right through pages of data.<br /><br />The Android ViewPager widget is found in the support library and it allows the user to swipe left or right to see an entirely new screen.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	92,	NULL,	NULL,	'2020-06-11 01:17:09',	'2020-06-11 01:17:09'),
(832,	NULL,	NULL,	'PagerAdapter',	'We will now try to implement a ViewPager by using Views and <strong><font color=\"#078ef9\">PagerAdapter</font></strong>. Though we can implement the same using Fragments too.<br /><br />The ViewPager uses a PagerAdapter whose job is to apply views to the <strong><font color=\"#078ef9\">MainActivity</font></strong>.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	92,	NULL,	NULL,	'2020-06-11 01:17:37',	'2020-06-11 01:17:37'),
(833,	NULL,	NULL,	'Creation',	'To create it, you first need to create a layout that contains ViewPager for the MainActivity.&nbsp;<br /><br />Then you need to add the <strong><font color=\"#078ef9\">FragmentPagerAdapter</font></strong>/<strong><font color=\"#078ef9\">FragmentStatePagerAdapter</font></strong> class which controls the fragments to be shown on the page swipes.<br /><br />Finally, create the fragments to be shown on swiping the screen.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	92,	NULL,	NULL,	'2020-06-11 01:18:02',	'2020-06-11 01:18:02'),
(834,	NULL,	NULL,	'Code',	'To create the ViewPager in our layout, open the MainActivity.xml.<br /><br />Declare the ViewPager in Java-',	NULL,	'',	NULL,	'package com.journaldev.viewpager;\n\nimport android.support.v4.view.ViewPager;\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.view.Menu;\nimport android.view.MenuItem;\n\npublic class MainActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        ViewPager viewPager = (ViewPager) findViewById(R.id.viewpager);\n        viewPager.setAdapter(new CustomPagerAdapter(this));\n    }\n}',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	92,	NULL,	NULL,	'2020-06-11 01:18:39',	'2020-06-11 01:18:39'),
(835,	NULL,	NULL,	'Explanation',	'The role of the MainActivity in the code is to just <strong><font color=\"#078ef9\">reference</font></strong> the ViewPager and set the CustomPagerAdapter that <strong><font color=\"#078ef9\">extends</font></strong> the PagerAdapter.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	92,	NULL,	NULL,	'2020-06-11 01:18:57',	'2020-06-11 01:18:57'),
(836,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"To swipe through different pages.\",\"question\":\"What is the role of a ViewPager?\",\"code\":null,\"option\":{\"1\":\"To swipe through different pages.\",\"2\":\"To view pages from top to bottom.\",\"3\":\"To extend the code to CustomPagerAdapter.\"}}',	92,	NULL,	NULL,	'2020-06-11 01:19:23',	'2020-06-11 01:19:23'),
(837,	NULL,	NULL,	'take',	'Use <strong><font color=\"#078ef9\">ViewPager</font></strong> for displaying different pages.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	92,	NULL,	NULL,	'2020-06-11 01:19:33',	'2020-06-11 01:19:33'),
(838,	NULL,	NULL,	'Introduction',	'Let&#39;s learn what Tabs and TabLayouts are, so we can implement them into our app.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	93,	NULL,	NULL,	'2020-06-11 01:20:20',	'2020-06-11 01:20:20'),
(839,	NULL,	NULL,	'Tabs',	'If you have used Google Chrome before, you know that you have <strong><font color=\"#078ef9\">tabs</font></strong> to switch between different websites and activities.<br /><br />Imagine using Google Chrome with only 1 tab. That might be easier for your Grandma, but not for you.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	93,	NULL,	NULL,	'2020-06-11 01:20:33',	'2020-06-11 01:20:33'),
(840,	NULL,	NULL,	'TabLayout',	'Tabs are now best implemented by leveraging the <strong><font color=\"#078ef9\">ViewPager</font></strong> with a custom <strong><font color=\"#078ef9\">tab indicator</font></strong> on top.&nbsp;<br /><br />We will be using Google&#39;s new TabLayout included in the support design library release for Android &quot;M&quot;.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	93,	NULL,	NULL,	'2020-06-11 01:20:49',	'2020-06-11 01:20:49'),
(841,	NULL,	NULL,	'Creation',	'Let&#39;s see how we can add Android tab layout with swipe-able views inside your app.&nbsp;<br /><br />Open the <strong><font color=\"#078ef9\">Gradle</font></strong> file, and add the material library dependency. In order to use TabLayout, we need to implement the material library which has a lot of good features.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	93,	NULL,	NULL,	'2020-06-11 01:21:14',	'2020-06-11 01:21:14'),
(842,	NULL,	NULL,	'Code',	'Drag &amp; drop a TabLayout from the panel to your layout.<br /><br />You can also customize the appearance by changing the bar background color, selected tab color, and the tabs text color-<br /><br />android:background=&quot;@color/button_background&quot;<br />app:tabSelectedTextColor=&quot;@color/color_primary_text&quot;<br />app:tabTextColor=&quot;@color/color_secondary_text&quot; /&gt;<br /><br />Before leaving the layout, change the <strong><font color=\"#078ef9\">ID and text</font></strong> for each Tab under Tablayout.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	93,	NULL,	NULL,	'2020-06-11 01:52:28',	'2020-06-11 01:52:28'),
(843,	NULL,	NULL,	'Code',	'Now you need to add Android ViewPager to allow us to swipe through the tabs with <strong><font color=\"#078ef9\">gestures-</font></strong><br /><br />&lt;androidx.viewpager.widget.ViewPager<br />android:id=&quot;@+id/detail_feed_view_pager_activity&quot;<br />android:layout_width=&quot;0dp&quot; android:layout_height=&quot;0dp&quot; app:layout_behavior=&quot;@string/appbar_scrolling_view_behavior&quot;<br />app:layout_constraintBottom_toBottomOf=&quot;parent&quot;<br />app:layout_constraintEnd_toEndOf=&quot;parent&quot;<br />app:layout_constraintStart_toStartOf=&quot;parent&quot;<br />app:layout_constraintTop_toTopOf=&quot;parent&quot;&gt; &lt;/androidx.viewpager.widget.ViewPager&gt;<br /><br />Then we need to create the instance of the TabLayout &amp; ViewPager in our <strong><font color=\"#078ef9\">MainActivity.class</font></strong>-',	NULL,	'',	NULL,	'@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n\n    tabLayout = (TabLayout) findViewById(R.id.tabLayout);\n    viewPager = (ViewPager) findViewById(R.id.viewPager);\n\n    tabLayout.addTab(tabLayout.newTab().setText(\"Home\"));\n    tabLayout.addTab(tabLayout.newTab().setText(\"Sport\"));\n    tabLayout.addTab(tabLayout.newTab().setText(\"Movie\"));\n    tabLayout.setTabGravity(TabLayout.GRAVITY_FILL);\n\n    final MyAdapter adapter = new MyAdapter(this, getSupportFragmentManager(), tabLayout.getTabCount());\n    viewPager.setAdapter(adapter);\n\n    viewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(tabLayout));\n\n    tabLayout.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {\n        @Override\n        public void onTabSelected(TabLayout.Tab tab) {\n            viewPager.setCurrentItem(tab.getPosition());\n        }\n\n        @Override\n        public void onTabUnselected(TabLayout.Tab tab) {\n\n        }\n\n        @Override\n        public void onTabReselected(TabLayout.Tab tab) {\n\n        }\n    });\n\n}',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	93,	NULL,	NULL,	'2020-06-11 01:55:24',	'2020-06-11 01:55:24'),
(844,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"ViewPager\",\"question\":\"What other component can we use for a TabLayout?\",\"code\":null,\"option\":{\"1\":\"XML\",\"2\":\"TableLayout\",\"3\":\"ViewPager\"}}',	93,	NULL,	NULL,	'2020-06-11 01:55:56',	'2020-06-11 01:55:56'),
(845,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"True\",\"question\":\"The best way to implement a TabLayout is by using a &quot;tab indicator&quot;.\",\"code\":null,\"option\":{\"1\":\"True\",\"2\":\"False\",\"3\":\"None\"}}',	93,	NULL,	NULL,	'2020-06-11 01:56:26',	'2020-06-11 01:56:26'),
(846,	NULL,	NULL,	'take',	'Use <strong><font color=\"#078ef9\">TabLayouts</font></strong> for multiple tab implementations.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	93,	NULL,	NULL,	'2020-06-11 01:56:36',	'2020-06-11 01:56:36'),
(847,	NULL,	NULL,	'Introduction',	'Let&#39;s explore the creation of a Navigation Drawer.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	94,	NULL,	NULL,	'2020-06-11 01:58:45',	'2020-06-11 01:58:45'),
(848,	NULL,	NULL,	'Drawer',	'You might have a drawer at your home. You can open each of them and navigate through the various items that are available.<br /><br />This is a useful implementation both <strong><font color=\"#078ef9\">functionally</font></strong> and <strong><font color=\"#078ef9\">ergonomically</font></strong>.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	94,	NULL,	NULL,	'2020-06-11 01:59:04',	'2020-06-11 01:59:04'),
(849,	NULL,	NULL,	'Navigation Drawer',	'Similarly, with a <strong><font color=\"#078ef9\">navigation drawer</font></strong>, one can navigate to many screens or functionalities of the app by clicking on the hamburger icon(the 3 horizontal lines).&nbsp;<br /><br />Swiping from the left is also a way to bring the drawer into view, a screen then slides in, and you will see many items.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	94,	NULL,	NULL,	'2020-06-11 01:59:27',	'2020-06-11 01:59:27'),
(850,	NULL,	NULL,	'Creation',	'After creating a new project, you will need a specific code for your main activity in XML.',	NULL,	'',	NULL,	'<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.v4.widget.DrawerLayout xmlns:android=\"https://schemas.android.com/apk/res/android\"\n    xmlns:app=\"https://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"https://schemas.android.com/tools\"\n    android:id=\"@+id/drawer_layout\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:fitsSystemWindows=\"true\"\n    tools:openDrawer=\"start\">\n\n    <include\n        layout=\"@layout/app_bar_main\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\" />\n\n    <android.support.design.widget.NavigationView\n        android:id=\"@+id/nav_view\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"match_parent\"\n        android:layout_gravity=\"start\"\n        android:fitsSystemWindows=\"true\"\n        app:headerLayout=\"@layout/nav_header_main\"\n        app:menu=\"@menu/activity_main_drawer\" />\n\n</android.support.v4.widget.DrawerLayout>',	NULL,	'We will also need to create a layout resource file that will serve as the header for the Navigation drawer. To do so, right-click the <strong><font color=\"#078ef9\">res folder</font></strong> &rarr; click <strong><font color=\"#078ef9\">new</font></strong> &rarr; Select <strong><font color=\"#078ef9\">Layout resource</font></strong>.<br /><br />Name it nav_header.xml.',	'<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n   android:orientation=\"vertical\"\n   android:layout_width=\"match_parent\"\n   android:layout_height=\"wrap_content\"\n   android:gravity=\"center\"\n   android:background=\"@color/colorPrimaryDark\">\n   <ImageView\n     android:layout_width=\"180dp\"\n     android:layout_height=\"130dp\"\n     android:layout_marginBottom=\"15dp\"\n     android:layout_marginTop=\"15dp\"\n     android:background=\"@drawable/ic_android_black_24dp\"/>\n</LinearLayout>',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	94,	NULL,	NULL,	'2020-06-11 02:02:15',	'2020-06-11 02:02:15'),
(851,	NULL,	NULL,	'Creation',	'After creating a header, we need to create a menu resource file that will hold the items to be displayed in the drawer.&nbsp;<br /><br />Right Click the <strong><font color=\"#078ef9\">res folder</font></strong> &rarr; Select <strong><font color=\"#078ef9\">new</font></strong> &rarr; <strong><font color=\"#078ef9\">Android resource file</font></strong> &rarr; Choose <strong><font color=\"#078ef9\">menu</font></strong> under the resource type drop-down list. Name the file <strong><font color=\"#078ef9\">navigation_menu.xml</font></strong>',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	94,	NULL,	NULL,	'2020-06-11 02:02:33',	'2020-06-11 02:02:33'),
(852,	NULL,	NULL,	'Code',	'For the <strong><font color=\"#078ef9\">navigation file</font></strong>, we need to contain the following code-',	NULL,	'',	NULL,	'<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\">\n  <item android:id=\"@+id/account\"\n    android:icon=\"@drawable/ic_portrait_black_24dp\"\n    android:title=\"My Account\"/>\n  <item android:id=\"@+id/settings\"\n    android:icon=\"@drawable/ic_brightness_high_black_24dp\"\n    android:title=\"Settings\"/>\n  <item android:id=\"@+id/mycard\"\n    android:icon=\"@drawable/ic_local_grocery_store_black_24dp\"\n    android:title=\"My Cart\"/>\n</menu>',	NULL,	'The code will create 3 listings for the navigation drawer.',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	94,	NULL,	NULL,	'2020-06-11 02:03:34',	'2020-06-11 02:03:34'),
(853,	NULL,	NULL,	'Java Declaration',	'As always, don&#39;t forget to declare the drawer in your <strong><font color=\"#078ef9\">MainActivity.java</font></strong> file.&nbsp;<br /><br />After doing so, we will be able to view the navigation drawer right when the main activity is shown.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	94,	NULL,	NULL,	'2020-06-11 02:03:46',	'2020-06-11 02:03:46'),
(854,	NULL,	NULL,	'Quiz',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	'lock',	NULL,	NULL,	'{\"solution\":\"Both\",\"question\":\"What main property can we give to create a navigation drawer?\",\"code\":null,\"option\":{\"1\":\"Name\",\"2\":\"Icon\",\"3\":\"Both\"}}',	94,	NULL,	NULL,	'2020-06-11 02:04:20',	'2020-06-11 02:04:20'),
(855,	NULL,	NULL,	'take',	'Use the <strong><font color=\"#078ef9\">Navigation Drawer</font></strong> for side navigation.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'lock',	NULL,	NULL,	NULL,	94,	NULL,	NULL,	'2020-06-11 02:04:44',	'2020-06-11 02:04:44');

DROP TABLE IF EXISTS `planets`;
CREATE TABLE `planets` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT,
  `pid` bigint unsigned NOT NULL DEFAULT '0',
  `index` bigint unsigned NOT NULL DEFAULT '0',
  `content` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `title` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `type` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'Single',
  `total` int unsigned NOT NULL DEFAULT '0',
  `status` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'lock',
  `course_id` int unsigned NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO `planets` (`id`, `pid`, `index`, `content`, `title`, `type`, `total`, `status`, `course_id`, `created_at`, `updated_at`) VALUES
(5,	0,	0,	NULL,	'Introduction',	'Single',	0,	'lock',	1,	'2020-04-18 09:13:46',	'2020-04-18 09:13:46'),
(6,	0,	0,	NULL,	'Array',	'Single',	0,	'lock',	1,	'2020-04-18 09:13:53',	'2020-04-18 09:13:53'),
(7,	0,	0,	NULL,	'Accessing Array',	'Single',	0,	'lock',	1,	'2020-04-18 09:14:33',	'2020-04-18 09:14:33'),
(8,	0,	0,	NULL,	'Loops',	'Single',	0,	'lock',	1,	'2020-04-18 09:14:33',	'2020-04-18 09:14:33'),
(9,	0,	0,	NULL,	'Type of Loops',	'double',	0,	'lock',	1,	'2020-04-18 09:14:33',	'2020-04-18 09:14:33'),
(10,	0,	0,	NULL,	'Functions',	'Single',	0,	'lock',	1,	'2020-04-18 09:14:33',	'2020-04-18 09:14:33'),
(11,	0,	0,	NULL,	'More on Function',	'Single',	0,	'lock',	1,	'2020-04-18 09:15:34',	'2020-04-18 09:15:34'),
(12,	0,	0,	NULL,	'Important Messages',	'Single',	0,	'lock',	1,	'2020-04-18 09:15:34',	'2020-04-18 09:15:34'),
(13,	0,	0,	NULL,	'Recap',	'Single',	0,	'lock',	1,	'2020-04-18 09:15:34',	'2020-04-18 09:15:34'),
(14,	0,	0,	NULL,	'Introduction',	'Single',	0,	'lock',	2,	'2020-04-20 23:18:02',	'2020-04-20 23:18:02'),
(15,	0,	0,	NULL,	'Methods',	'Single',	0,	'lock',	2,	'2020-04-20 23:18:02',	'2020-04-20 23:18:02'),
(16,	0,	0,	NULL,	'Document',	'Single',	0,	'lock',	2,	'2020-04-20 23:18:02',	'2020-04-20 23:18:02'),
(17,	0,	0,	NULL,	'Elements',	'Single',	0,	'lock',	2,	'2020-04-20 23:18:02',	'2020-04-20 23:18:02'),
(18,	0,	0,	NULL,	'HTML',	'Single',	0,	'lock',	2,	'2020-04-20 23:18:02',	'2020-04-20 23:18:02'),
(19,	0,	0,	NULL,	'CSS',	'Single',	0,	'lock',	2,	'2020-04-20 23:18:02',	'2020-04-20 23:18:02'),
(20,	0,	0,	NULL,	'Events',	'Single',	0,	'lock',	2,	'2020-04-20 23:18:02',	'2020-04-20 23:18:02'),
(21,	0,	0,	NULL,	'Collections',	'Single',	0,	'lock',	2,	'2020-04-20 23:18:02',	'2020-04-20 23:18:02'),
(22,	0,	0,	NULL,	'Nodes',	'Single',	0,	'lock',	2,	'2020-04-20 23:18:02',	'2020-04-20 23:18:02'),
(23,	0,	0,	NULL,	'Recap',	'Single',	0,	'lock',	2,	'2020-04-20 23:18:02',	'2020-04-20 23:18:02'),
(24,	0,	0,	NULL,	'What is ES6?',	'Single',	0,	'lock',	3,	'2020-04-21 03:35:04',	'2020-04-21 03:35:04'),
(25,	0,	0,	NULL,	'Let',	'Single',	0,	'lock',	3,	'2020-04-21 03:35:04',	'2020-04-26 13:59:49'),
(26,	0,	0,	NULL,	'Template Strings',	'Single',	0,	'lock',	3,	'2020-04-21 03:35:04',	'2020-04-26 13:59:49'),
(27,	0,	0,	NULL,	'Contrants',	'Single',	0,	'lock',	3,	'2020-04-21 03:35:04',	'2020-04-21 03:35:04'),
(28,	0,	0,	NULL,	'for...of',	'Single',	0,	'lock',	3,	'2020-04-21 03:35:04',	'2020-04-21 03:35:04'),
(29,	0,	0,	NULL,	'Arrow Functions',	'Single',	0,	'lock',	3,	'2020-04-21 03:35:04',	'2020-04-21 03:35:04'),
(30,	0,	0,	NULL,	'Rest Parameters',	'Single',	0,	'lock',	3,	'2020-04-21 03:35:04',	'2020-04-21 03:35:04'),
(31,	0,	0,	NULL,	'Modules',	'Single',	0,	'lock',	3,	'2020-04-21 03:35:04',	'2020-04-21 03:35:04'),
(32,	0,	0,	NULL,	'WeakSet',	'Single',	0,	'lock',	3,	'2020-04-21 03:35:04',	'2020-04-21 03:35:04'),
(33,	0,	0,	NULL,	'Recap',	'Single',	0,	'lock',	3,	'2020-04-21 03:35:04',	'2020-04-21 03:35:04'),
(34,	0,	0,	NULL,	'Introduction',	'Single',	0,	'lock',	4,	'2020-04-25 01:54:49',	'2020-04-25 02:00:34'),
(35,	0,	0,	NULL,	'Typography',	'Single',	0,	'lock',	4,	'2020-04-25 01:54:49',	'2020-04-25 01:54:49'),
(36,	0,	0,	NULL,	'Buttons',	'Single',	0,	'lock',	4,	'2020-04-25 01:54:49',	'2020-04-25 01:54:49'),
(37,	0,	0,	NULL,	'Tables',	'Single',	0,	'lock',	4,	'2020-04-25 01:54:49',	'2020-04-25 01:54:49'),
(38,	0,	0,	NULL,	'Form Layout',	'Single',	0,	'lock',	4,	'2020-04-25 01:54:49',	'2020-04-25 01:54:49'),
(39,	0,	0,	NULL,	'Cards',	'Single',	0,	'lock',	4,	'2020-04-25 01:54:49',	'2020-04-25 01:54:49'),
(40,	0,	0,	NULL,	'Images',	'Single',	0,	'lock',	4,	'2020-04-25 01:54:49',	'2020-04-25 01:54:49'),
(41,	0,	0,	NULL,	'Alerts',	'Single',	0,	'lock',	4,	'2020-04-25 01:54:49',	'2020-04-25 01:54:49'),
(42,	0,	0,	NULL,	'Grid Layout',	'Single',	0,	'lock',	4,	'2020-04-25 01:54:49',	'2020-04-25 01:54:49'),
(43,	0,	0,	NULL,	'Navbar',	'Single',	0,	'lock',	4,	'2020-04-25 01:54:49',	'2020-04-25 01:54:49'),
(44,	0,	0,	NULL,	'Recap',	'Single',	0,	'lock',	4,	'2020-04-25 01:54:49',	'2020-04-25 01:54:49'),
(45,	0,	0,	NULL,	'Introduction',	'Single',	0,	'lock',	5,	'2020-04-26 01:50:59',	'2020-04-26 01:50:59'),
(46,	0,	0,	NULL,	'Input and Output',	'Single',	0,	'lock',	5,	'2020-04-26 01:50:59',	'2020-04-26 01:50:59'),
(47,	0,	0,	NULL,	'Variable',	'Single',	0,	'lock',	5,	'2020-04-26 01:50:59',	'2020-04-26 01:50:59'),
(48,	0,	0,	NULL,	'Types of Variable',	'double',	0,	'lock',	5,	'2020-04-26 01:50:59',	'2020-04-26 01:50:59'),
(49,	0,	0,	NULL,	'Decision Making',	'Single',	0,	'lock',	5,	'2020-04-26 01:50:59',	'2020-04-26 01:50:59'),
(50,	0,	0,	NULL,	'Comments',	'Single',	0,	'lock',	5,	'2020-04-26 01:50:59',	'2020-04-26 01:50:59'),
(51,	0,	0,	NULL,	'Recap',	'Single',	0,	'lock',	5,	'2020-04-26 01:50:59',	'2020-04-26 01:50:59'),
(52,	0,	0,	NULL,	'Introduction',	'Single',	0,	'lock',	6,	'2020-06-08 02:56:51',	'2020-06-08 02:56:51'),
(53,	0,	0,	NULL,	'Output',	'Single',	0,	'lock',	6,	'2020-06-08 02:56:51',	'2020-06-08 02:56:51'),
(54,	0,	0,	NULL,	'Variable',	'Single',	0,	'lock',	6,	'2020-06-08 02:56:51',	'2020-06-08 02:56:51'),
(55,	0,	0,	NULL,	'Variable Types',	'Single',	0,	'lock',	6,	'2020-06-08 02:56:51',	'2020-06-08 02:56:51'),
(56,	0,	0,	NULL,	'Data Types',	'double',	0,	'lock',	6,	'2020-06-08 02:56:51',	'2020-06-08 02:56:51'),
(57,	0,	0,	NULL,	'Recap',	'Single',	0,	'lock',	6,	'2020-06-08 02:56:51',	'2020-06-08 02:56:51'),
(58,	0,	0,	NULL,	'Operators',	'Single',	0,	'lock',	7,	'2020-06-08 07:47:43',	'2020-06-08 07:47:43'),
(59,	0,	0,	NULL,	'Comments',	'Single',	0,	'lock',	7,	'2020-06-08 07:47:43',	'2020-06-08 07:47:43'),
(60,	0,	0,	NULL,	'Conditions',	'Single',	0,	'lock',	7,	'2020-06-08 07:47:43',	'2020-06-08 07:47:43'),
(61,	0,	0,	NULL,	'Arrays',	'Single',	0,	'lock',	7,	'2020-06-08 07:47:43',	'2020-06-08 07:47:43'),
(62,	0,	0,	NULL,	'Loops',	'Single',	0,	'lock',	7,	'2020-06-08 07:47:43',	'2020-06-08 07:47:43'),
(63,	0,	0,	NULL,	'While Loops',	'Single',	0,	'lock',	7,	'2020-06-08 07:47:43',	'2020-06-08 07:47:43'),
(64,	0,	0,	NULL,	'OOP',	'Single',	0,	'lock',	8,	'2020-06-10 05:37:53',	'2020-06-10 05:37:53'),
(65,	0,	0,	NULL,	'Classes',	'Single',	0,	'lock',	8,	'2020-06-10 05:37:53',	'2020-06-10 05:37:53'),
(66,	0,	0,	NULL,	'Constructors',	'Single',	0,	'lock',	8,	'2020-06-10 05:37:53',	'2020-06-10 05:37:53'),
(67,	0,	0,	NULL,	'Objects',	'Single',	0,	'lock',	8,	'2020-06-10 05:37:53',	'2020-06-10 05:37:53'),
(68,	0,	0,	NULL,	'Methods',	'Single',	0,	'lock',	8,	'2020-06-10 05:37:53',	'2020-06-10 05:37:53'),
(69,	0,	0,	NULL,	'Inheritance',	'Single',	0,	'lock',	8,	'2020-06-10 05:37:53',	'2020-06-10 05:37:53'),
(70,	0,	0,	NULL,	'Overriding',	'Single',	0,	'lock',	8,	'2020-06-10 05:37:53',	'2020-06-10 05:37:53'),
(71,	0,	0,	NULL,	'Interface',	'Single',	0,	'lock',	8,	'2020-06-10 05:37:53',	'2020-06-10 05:37:53'),
(72,	0,	0,	NULL,	'Encapsulation',	'Single',	0,	'lock',	8,	'2020-06-10 05:37:53',	'2020-06-10 05:37:53'),
(73,	0,	0,	NULL,	'Polymorphism',	'Single',	0,	'lock',	8,	'2020-06-10 05:37:53',	'2020-06-10 05:37:53'),
(74,	0,	0,	NULL,	'Introduction',	'Single',	0,	'lock',	9,	'2020-06-10 21:25:41',	'2020-06-10 21:25:41'),
(75,	0,	0,	NULL,	'Android Studio',	'Single',	0,	'lock',	9,	'2020-06-10 21:25:41',	'2020-06-10 21:25:41'),
(76,	0,	0,	NULL,	'Emulators',	'Single',	0,	'lock',	9,	'2020-06-10 21:25:41',	'2020-06-10 21:25:41'),
(77,	0,	0,	NULL,	'UI',	'Single',	0,	'lock',	9,	'2020-06-10 21:25:41',	'2020-06-10 21:25:41'),
(78,	0,	0,	NULL,	'Manifest',	'Single',	0,	'lock',	9,	'2020-06-10 21:25:41',	'2020-06-10 21:25:41'),
(79,	0,	0,	NULL,	'Resources',	'double',	0,	'lock',	9,	'2020-06-10 21:25:41',	'2020-06-10 21:25:41'),
(80,	0,	0,	NULL,	'Gradle',	'double',	0,	'lock',	9,	'2020-06-10 21:25:41',	'2020-06-10 21:25:41'),
(81,	0,	0,	NULL,	'Continution',	'Single',	0,	'lock',	10,	'2020-06-10 23:05:13',	'2020-06-10 23:05:13'),
(82,	0,	0,	NULL,	'Comments',	'Single',	0,	'lock',	10,	'2020-06-10 23:05:13',	'2020-06-10 23:05:13'),
(83,	0,	0,	NULL,	'Log',	'Single',	0,	'lock',	10,	'2020-06-10 23:05:13',	'2020-06-10 23:05:13'),
(84,	0,	0,	NULL,	'Activity',	'Single',	0,	'lock',	10,	'2020-06-10 23:05:13',	'2020-06-10 23:05:13'),
(85,	0,	0,	NULL,	'Intents',	'Single',	0,	'lock',	10,	'2020-06-10 23:05:13',	'2020-06-10 23:05:13'),
(86,	0,	0,	NULL,	'Services',	'Single',	0,	'lock',	10,	'2020-06-10 23:05:13',	'2020-06-10 23:05:13'),
(87,	0,	0,	NULL,	'Layouts',	'double',	0,	'lock',	10,	'2020-06-10 23:05:13',	'2020-06-10 23:05:13'),
(88,	0,	0,	NULL,	'Views',	'Single',	0,	'lock',	10,	'2020-06-10 23:05:13',	'2020-06-10 23:05:13'),
(89,	0,	0,	NULL,	'Introduction',	'Single',	0,	'lock',	11,	'2020-06-11 01:04:00',	'2020-06-11 01:04:00'),
(90,	0,	0,	NULL,	'Progress Bar',	'Single',	0,	'lock',	11,	'2020-06-11 01:04:00',	'2020-06-11 01:04:00'),
(91,	0,	0,	NULL,	'Fragments',	'Single',	0,	'lock',	11,	'2020-06-11 01:04:00',	'2020-06-11 01:04:00'),
(92,	0,	0,	NULL,	'ViewPager',	'Single',	0,	'lock',	11,	'2020-06-11 01:04:00',	'2020-06-11 01:04:00'),
(93,	0,	0,	NULL,	'TabLayout',	'Single',	0,	'lock',	11,	'2020-06-11 01:04:00',	'2020-06-11 01:04:00'),
(94,	0,	0,	NULL,	'Navigation Drawer',	'Single',	0,	'lock',	11,	'2020-06-11 01:04:00',	'2020-06-11 01:04:00');

DROP TABLE IF EXISTS `questions`;
CREATE TABLE `questions` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT,
  `isBlank` tinyint(1) NOT NULL DEFAULT '0',
  `question` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `options` text COLLATE utf8mb4_unicode_ci,
  `answer` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `unit_id` bigint unsigned NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `questions_unit_id_foreign` (`unit_id`),
  CONSTRAINT `questions_unit_id_foreign` FOREIGN KEY (`unit_id`) REFERENCES `units` (`id`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO `questions` (`id`, `isBlank`, `question`, `options`, `answer`, `unit_id`, `created_at`, `updated_at`) VALUES
(5,	0,	'dasf',	'[\"f\",\"d\",\"i\"]',	'f',	4,	'2020-07-15 05:26:53',	'2020-07-15 05:27:17'),
(6,	1,	'dfsa',	'[\"c\",\"d\",\"f\"]',	'fff',	5,	'2020-07-15 05:29:08',	'2020-07-15 05:33:30'),
(8,	0,	'What is correct ?',	'[\"yes\",\"no\",\"correct\"]',	'correct',	4,	'2020-07-15 07:38:50',	'2020-07-15 07:40:48'),
(9,	1,	'what is your name ?\r\n[blank]',	NULL,	'anwar',	4,	'2020-07-15 07:38:50',	'2020-07-15 07:38:50');

DROP TABLE IF EXISTS `quizzes`;
CREATE TABLE `quizzes` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT,
  `solution` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `question` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `code` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'null',
  `option` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;


DROP TABLE IF EXISTS `sub_planet_contents`;
CREATE TABLE `sub_planet_contents` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT,
  `mid` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `bookmark` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `des_01` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `link01` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `des_02` varchar(5000) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `link02` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `code` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `output` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `des_03` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `code2` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `ptxt` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `mtxt` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `qtype` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `finish` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `mark` int DEFAULT NULL,
  `status` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `blankstype` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `quiz` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `blanks` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci,
  `sub_planet_id` int unsigned NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO `sub_planet_contents` (`id`, `mid`, `bookmark`, `name`, `des_01`, `link01`, `des_02`, `link02`, `code`, `output`, `des_03`, `code2`, `ptxt`, `mtxt`, `qtype`, `finish`, `mark`, `status`, `blankstype`, `quiz`, `blanks`, `sub_planet_id`, `created_at`, `updated_at`) VALUES
(25,	'104',	NULL,	'What is a string?',	'Are we talking about the strings in threads that your Mom uses to stitch your clothes?<br /><br />NOPE. Think of your name...it is a word.&nbsp;<br /><br />Think of your crush&rsquo;s name, that&rsquo;s a word. Think of your favorite food, it&#39;s a word.<br /><br />Thus, anything that can be represented as letters/words is called a String in JavaScript.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	3,	'2020-04-26 02:32:38',	'2020-04-26 02:32:38'),
(26,	'104',	NULL,	'What can strings be used for?',	'Strings are useful if you want to tag or label a part of a webpage using JavaScript. If you are not familiar with HTML, it is a good way to present text or an article.<br /><br />They help you to store data that contains words, to be precise.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	3,	'2020-04-26 02:33:00',	'2020-04-26 02:33:00'),
(27,	'104',	NULL,	'How to use a string?',	'In order to create a string you have to:<ol>	<li>Declare a variable using the &ldquo;var&rdquo; keyword.</li>	<li>Enter a name for the variable.</li>	<li>Use Quotation marks(&ldquo;&rdquo;) to indicate a string.</li>	<li>Enter the content inside the quotation marks.&nbsp;</li>	<li>End the line using a semicolon(;)</li></ol>',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	3,	'2020-04-26 02:33:14',	'2020-04-26 02:33:14'),
(28,	'104',	NULL,	'Printing',	'In order to print a variable, you can use the &ldquo;<strong>console.log()</strong>&rdquo; function and enter the variable&#39;s name in the parentheses as shown in the previous example. This will allow you to print the variable.&nbsp;',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	3,	'2020-04-26 02:33:28',	'2020-04-26 02:33:28'),
(29,	'104',	NULL,	'Example',	'',	NULL,	'',	NULL,	'var rich = “I am rich!”;\nconsole.log(rich);',	'true',	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	3,	'2020-04-26 02:33:44',	'2020-04-26 02:33:44'),
(30,	NULL,	NULL,	'Quiz',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	NULL,	NULL,	'{\"solution\":\"console.log(variable_name);\",\"question\":\"How do you output a string variable?\",\"code\":null,\"option\":{\"1\":\"console.log(variable_name)\",\"2\":\"console.log(text);\",\"3\":\"console.log(variable_name);\"}}',	NULL,	3,	'2020-04-26 02:34:12',	'2020-04-26 02:34:12'),
(31,	NULL,	NULL,	'take',	'Now you can show off how rich you are! Congrats!',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	3,	'2020-04-26 02:34:20',	'2020-04-26 02:34:20'),
(32,	'104',	NULL,	'What is a boolean?',	'Assume, your<strong> [based on gender: girlfriend/boyfriend/gender]</strong> wants to know the weather.<br /><strong>[Based on gender: His/Her/The]</strong> question is: Will it rain today?<br /><br />What could be your answer? Either Yes or No.&nbsp;<br /><br />Similarly, in JavaScript, Yes is represented as True and No as False!<br /><br />These two values, True and False are called Booleans.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	4,	'2020-04-26 02:35:39',	'2020-04-26 02:35:39'),
(33,	'104',	NULL,	'Examples of Booleans',	'Booleans are these same things:<ul>	<li>Yes/No</li>	<li>On/Off</li>	<li>True/False</li></ul>',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	4,	'2020-04-26 02:35:57',	'2020-04-26 02:35:57'),
(34,	'104',	NULL,	'How to use a boolean?',	'In order to create a boolean, you must:<ol>	<li>Declare a boolean using the function &ldquo;Boolean()&rdquo;.</li>	<li>Enter a condition in the parenthesis(Ex. 5 &gt; 4).</li></ol>',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	4,	'2020-04-26 02:36:13',	'2020-04-26 02:36:13'),
(35,	'104',	NULL,	'Example When False',	'This will return false:',	NULL,	'',	NULL,	'Boolean(10 < 5)',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	4,	'2020-04-26 02:36:38',	'2020-04-26 02:36:38'),
(36,	'104',	NULL,	'Example When True',	'This will return true:',	NULL,	'',	NULL,	'Boolean(10 > 5)',	NULL,	'',	'',	NULL,	'An easier way of declaring a boolean is by just typing in a condition.<br />\r\n<br />\r\nFor example, Boolean(4 &gt; 2) will output true and 4 &gt; 2 will also output true.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	4,	'2020-04-26 02:37:07',	'2020-04-26 02:37:07'),
(37,	NULL,	NULL,	'Quiz',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	NULL,	NULL,	'{\"solution\":\"6 < 7\",\"question\":\"What is the easiest way to create a Boolean?\",\"code\":null,\"option\":{\"1\":\"6 < 7;\",\"2\":\"6 < 7\",\"3\":\"Boolean(6 < 7)\"}}',	NULL,	4,	'2020-04-26 02:37:44',	'2020-04-26 02:37:44'),
(38,	NULL,	NULL,	'take',	'Use booleans to answer simply in - <strong>True</strong> or <strong>False</strong>',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	4,	'2020-04-26 02:38:06',	'2020-04-26 02:38:06'),
(39,	'104',	NULL,	'Numbers in JavaScript',	'If I ask for your age, your answer will be a number.<br /><br />If I ask how much money you have, your answer will be a number.<br /><br />If I ask how many times your mom kicked you out of her basement, the answer will be a number.<br /><br />When you express a variable with a number, it is called a numeric variable.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	5,	'2020-04-26 02:38:49',	'2020-04-26 02:38:49'),
(40,	'104',	NULL,	'What is quantitative data?',	'If you have ever looked at a data table, the main result will be something to do with numbers.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	5,	'2020-04-26 02:39:11',	'2020-04-26 02:39:11'),
(41,	'104',	NULL,	'Numbers',	'Quantitative Data is any type of data stored in the form of numerical values. Things like 1, 2, 3, 4, 5, 6&hellip; are all numbers.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	5,	'2020-04-26 02:39:24',	'2020-04-26 02:39:24'),
(42,	'104',	NULL,	'Decimals',	'<strong>Keep in mind:</strong> decimals are also numbers so any number between 1 and 2, such as 1.1, 1.2, 1.25&hellip; are all decimal values.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	5,	'2020-04-26 02:39:35',	'2020-04-26 02:39:35'),
(43,	'104',	NULL,	'How do you store a number?',	'To store a number inside a variable is fairly similar to storing a string. To store a number as a variable, you have to:<ol>	<li>use the keyword &ldquo;var&rdquo;.</li>	<li>Give the name to the variable.</li>	<li>Add an equal sign.</li>	<li>Add the number.</li>	<li>End the line with a semicolon.</li></ol>',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	5,	'2020-04-26 02:39:49',	'2020-04-26 02:39:49'),
(44,	'104',	NULL,	'An Example',	'',	NULL,	'',	NULL,	'var marks = 74;',	NULL,	'',	'',	NULL,	'In JavaScript, you don&rsquo;t have to define the type of variable with a different keyword each time. You are also able to type numbers as decimals without using a different type of it. In programming languages like C++, you have to declare them separately as a &ldquo;double&rdquo; or a &ldquo;float&rdquo;.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	5,	'2020-04-26 02:40:04',	'2020-04-26 02:41:50'),
(45,	NULL,	NULL,	'Quiz',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	NULL,	NULL,	'{\"solution\":\"var customers = 8;\",\"question\":\"How do you create a variable storing a number?\",\"code\":null,\"option\":{\"1\":\"Var customers = 8;\",\"2\":\"var customers 8;\",\"3\":\"var customers = 8;\"}}',	NULL,	5,	'2020-04-26 02:42:20',	'2020-04-26 02:42:20'),
(46,	NULL,	NULL,	'take',	'Congrats! Now you understand how to store numbers in a variable.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	5,	'2020-04-26 02:42:28',	'2020-04-26 02:42:28'),
(47,	'104',	NULL,	'Operation',	'Back to the school!&nbsp;<br /><br />Remember your school days when you used to do basic math operations?<br />We use adding, multiplying, dividing, and subtracting all the time, we might just not notice it.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	6,	'2020-04-26 02:43:04',	'2020-04-26 02:43:04'),
(48,	'104',	NULL,	'Example of Operation',	'For example, you might be adding calories to your diet or the amount of sugar to put in your coffee.&nbsp;<br /><br />Adding and subtracting is everywhere!',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	6,	'2020-04-26 02:43:20',	'2020-04-26 02:43:20'),
(49,	'104',	NULL,	'How to use operations?',	'In order to add, you use the &ldquo;<strong>+</strong>&rdquo; symbol, and to subtract, you use the &ldquo;<strong>-</strong>&rdquo; symbol. It is like any normal math operation that you did in school. To multiply, you use the &ldquo;<strong>*</strong>&rdquo; symbol and the &ldquo;<strong>/</strong>&rdquo; symbol to divide.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	6,	'2020-04-26 02:43:40',	'2020-04-26 02:43:40'),
(50,	'104',	NULL,	'Example',	'',	NULL,	'',	NULL,	'var y = 3 + 3;\n\nvar x = y - 5;\n\nvar z = x * 2;\n\nvar w = z / 1;\n\nconsole.log(w);',	'true',	'You get an answer of 2! Now you know how to do quick math!',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	6,	'2020-04-26 02:43:56',	'2020-04-26 02:44:07'),
(51,	NULL,	NULL,	'Quiz',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	NULL,	NULL,	'{\"solution\":\"2\",\"question\":\"What is the output of the following code?\",\"code\":\"var x = 7;\\r\\nvar y = 5;\\r\\nvar z = 2;\\r\\nvar res = z * y + x;\\r\\n\\r\\nconsole.log(z);\",\"option\":{\"1\":\"2\",\"2\":\"17\",\"3\":\"7\"}}',	NULL,	6,	'2020-04-26 02:44:49',	'2020-04-26 02:44:49'),
(52,	NULL,	NULL,	'take',	'Congrats! Now you can easily calculate how much pocket money you are left with!',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	6,	'2020-04-26 02:44:58',	'2020-04-26 02:44:58'),
(53,	'105',	NULL,	'What is a For Loop?',	'A For Loops has different parts. A variable, a value, a condition, and a statement countering the condition.<br /><br />We learned what conditions are in the last Galaxy, so now let&rsquo;s bring them back.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	1,	'2020-04-26 04:34:36',	'2020-04-26 04:34:36'),
(54,	'105',	NULL,	'How to create a For Loop?',	'To create a For Loop, you first have to create a variable.',	NULL,	'',	NULL,	'var x;',	NULL,	'Now, you can define a for loop,',	'for(var x = 1; i <= 10; i++) {\n\n}',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	1,	'2020-04-26 04:37:59',	'2020-04-26 04:37:59'),
(55,	'105',	NULL,	'How to create a For Loop?',	'Keep in mind that in a For Loop, things are separated by semicolons(&quot;;&quot;).<br /><br />Now, to repeat our previous task 10 times, we have to use curly brackets(&ldquo;{}&rdquo;) to put the code we want to repeat.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	1,	'2020-04-26 04:38:20',	'2020-04-26 04:38:20'),
(56,	'105',	NULL,	'Example',	'',	NULL,	'',	NULL,	'for(var i = 1; i <= 10; i++) {\n    console.log(\"I love you\");\n}',	'true',	'The above code now will repeat outputting &ldquo;I love you&rdquo;.',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	1,	'2020-04-26 04:38:49',	'2020-04-27 08:40:18'),
(57,	'105',	NULL,	'Final Code',	'',	NULL,	'',	NULL,	'for(var i = 1; i <= 10; i++) {\n    console.log(\"I love you\");\n}',	'true',	'Don&rsquo;t forget to always declare the variables because the For loop will not do it for you. It&#39;s not your Mom. 😁',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	1,	'2020-04-26 04:39:27',	'2020-04-27 08:39:50'),
(58,	NULL,	NULL,	'Quiz',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	NULL,	NULL,	'{\"solution\":\"False\",\"question\":\"A For Loop can run without a declaration of a variable.\",\"code\":null,\"option\":{\"1\":\"True\",\"2\":\"False\",\"3\":\"Maybe\"}}',	NULL,	1,	'2020-04-26 04:40:11',	'2020-04-26 04:40:11'),
(59,	NULL,	NULL,	'take',	'You have to declare a variable for a for loop.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	1,	'2020-04-26 04:40:24',	'2020-04-26 04:40:24'),
(60,	'105',	NULL,	'While Loop',	'JavaScript is super rich, It has various kinds of loops, not only for loops!<br />Let&rsquo;s explore the other one -While loop<br /><br />A While loop is similar to a For Loop. A While Loop will do something when<strong> </strong>a condition is true.<br />Now let&rsquo;s see how we can create one!',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	2,	'2020-04-26 04:41:14',	'2020-04-26 04:41:14'),
(61,	'105',	NULL,	'How to create a While Loop?',	'To create a While Loop, you first have to create a variable.',	NULL,	'',	NULL,	'var x = 1;',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	2,	'2020-04-26 04:41:48',	'2020-04-26 04:41:48'),
(62,	'105',	NULL,	'Syntax',	'Then we create the while statement.',	NULL,	'',	NULL,	'var x = 1;\n\nwhile(x <= 10){\n         console.log(\'I love you\');\n         var x = x + 1;\n}',	'true',	'The while statement will output the code and the counter condition.',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	2,	'2020-04-26 04:42:40',	'2020-04-26 04:42:40'),
(63,	'105',	NULL,	'How to create a while loop?',	'In the while statement, we mentioned the task we want to perform and the counter statement for the condition being x = x + 1. This is the same as saying x++.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	2,	'2020-04-26 04:42:59',	'2020-04-26 04:42:59'),
(64,	'105',	NULL,	'Final Code',	'Now our code will be:',	NULL,	'',	NULL,	'var x = 1;\n\nwhile(x <= 10){\n         console.log(\'I love you\');\n         var x = x + 1;\n}',	'true',	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	2,	'2020-04-26 04:43:20',	'2020-04-26 04:43:20'),
(67,	NULL,	'hints|Go back and see what keyword is used to create a while loop.|The answer is while, because we use the keyword &ldquo;while&rdquo; to declare a while loop.|while',	'Quiz',	'Fill in the blank:',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'printsln',	NULL,	'{\"soln\":\"while\",\"tf1\":\"[blank](x &lt;= 10){<br \\/>\\r\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&#39;I love you&#39;);<br \\/>\\r\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var x = x + 1;<br \\/>\\r\\n}\"}',	2,	'2020-04-26 05:24:13',	'2020-04-26 05:24:13'),
(68,	NULL,	NULL,	'take',	'Use a while loop to iterate until the condition is true.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	2,	'2020-04-26 05:24:21',	'2020-04-26 05:24:21'),
(69,	'108',	NULL,	'Introduction',	'In this lesson, we will go over the 8 different data types that exist in Java.<br /><br />We will also go over how to use them.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	7,	'2020-06-08 03:27:14',	'2020-06-08 03:27:14'),
(70,	'108',	NULL,	'Data Types',	'When we say Data Type, think of a type of information you want to store in a variable like integer, character, decimal, etc. Primitive means this data type is pre-defined by Java.<br /><br />If Granny was using an app and got an error saying she could not enter numbers, she would get mad because maybe she was trying to type her age.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	7,	'2020-06-08 03:27:28',	'2020-06-08 03:27:28'),
(71,	'108',	NULL,	'Keywords',	'In Java, there are 8 reserved keywords for primitive data types for assigning 8 different types of information based on value (type of information) and byte (memory or space).',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	'Data type must be declared with variables when creating them. This helps the compiler to ensure we are inserting the right type of data in the variables which we assigned with a particular type.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	7,	'2020-06-08 03:27:58',	'2020-06-08 03:27:58'),
(72,	'108',	NULL,	'Integers',	'Let&rsquo;s try to understand the concept with examples of int data type which is used for assigning integers (numbers without a decimal point).&nbsp;<br /><br />Suppose we want to store initial value 5 in lunchMoney variables:',	NULL,	'',	NULL,	'int lunchMoney = 5;',	NULL,	'',	'',	NULL,	'But what if we want to store 5.5 in the integer data type:<br />\r\n<br />\r\nint lunchMoney = 5.5;<br />\r\n<br />\r\nThe compiler will throw an error because we are trying to store decimal values in an integer data type.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	7,	'2020-06-08 03:28:25',	'2020-06-08 03:28:56'),
(73,	'108',	NULL,	'Size',	'One more important thing to note is that data types also assign the limit of space that can be stored in variables.&nbsp;<br /><br />For example, int can store a minimum value of -231 and a maximum value of 231-1. If you try to store higher values than 231-1 or lesser values than -231, then compilers will throw an error.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	7,	'2020-06-08 03:29:19',	'2020-06-08 03:29:19'),
(74,	'108',	NULL,	'Memory',	'Suppose we try to insert a value of 3,447,543,435 in an integer variables:',	NULL,	'',	NULL,	'class Main {\n      public static void main (Strings[] args){\n               int cityPopulation = 3447673559;\n     }\n}',	'true',	'The compiler will give an error because we are trying to store higher values than 231-1.',	'',	NULL,	'This concept will make more sense as we proceed in this course, where we will discuss 8 different primitive data types in Java.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	7,	'2020-06-08 03:30:46',	'2020-06-08 03:30:46'),
(75,	NULL,	NULL,	'Quiz',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	NULL,	NULL,	'{\"solution\":\"-2^31\",\"question\":\"What is the smallest value you are able to store in an integer?\",\"code\":null,\"option\":{\"1\":\"-2^31\",\"2\":\"-10000000000\",\"3\":\"0\"}}',	NULL,	7,	'2020-06-08 03:32:01',	'2020-06-08 03:32:01'),
(76,	NULL,	NULL,	'take',	'The smallest value you can store in an integer data type is -2^31.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	7,	'2020-06-08 03:33:02',	'2020-06-08 03:33:02'),
(77,	'108',	NULL,	'Introduction',	'In this lesson, we will go over 8 different primitive data types.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	8,	'2020-06-08 03:33:32',	'2020-06-08 03:33:32'),
(78,	'108',	NULL,	'Bytes',	'A byte is an 8-bit(1-byte) integer value which has a minimum value of -128 and a maximum value of 127.<br />Example:',	NULL,	'',	NULL,	'byte x = 120;',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	8,	'2020-06-08 03:34:05',	'2020-06-08 03:34:05'),
(79,	'108',	NULL,	'Short',	'A short is a 16-bit (2-byte) integer value which has a minimum value of -32,768 and a maximum value of 32,767.&nbsp;<br /><br />Example:',	NULL,	'',	NULL,	'short x = 30000;',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	8,	'2020-06-08 03:34:24',	'2020-06-08 03:34:24'),
(80,	'108',	NULL,	'Int',	'A int is a 32-bit (4-byte) integer value which has a minimum value of -231 and a maximum value of 231-1. Int is the most common, preferred, and widely used data type in Android.<br /><br />Example:',	NULL,	'',	NULL,	'int bankBalance = 1245678;\n\nSystem.out.println(bankBalance);',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	8,	'2020-06-08 03:34:52',	'2020-06-08 03:34:52'),
(81,	'108',	NULL,	'Long',	'A long is a 64-bit (8-byte) integer value which has a minimum value of -263 and a maximum value of 263-1. This data type is also preferred in Android for storing very large values like a game&rsquo;s high score which can be in billions.<br /><br />Example:',	NULL,	'',	NULL,	'long x = 12345987609L;',	NULL,	'',	'',	NULL,	'Keep in mind that either &lsquo;l&rsquo; or &lsquo;L&rsquo; in the long data type is used after the value. This is because it tells the computer we are storing a value in a long data type.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	8,	'2020-06-08 03:35:20',	'2020-06-08 03:35:20'),
(82,	'108',	NULL,	'Char',	'A char is a 16-bit character using the Unicode encoding scheme that has a minimum value of &lsquo;\\u0000&rsquo; and a maximum value of &lsquo;\\uffff&rsquo;.&nbsp;<br /><br />Example:',	NULL,	'',	NULL,	'char character = ‘0’;',	NULL,	'We use single quotes in char for representing a character.',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	8,	'2020-06-08 03:36:03',	'2020-06-08 03:36:03'),
(83,	NULL,	NULL,	'Quiz',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	NULL,	NULL,	'{\"solution\":\"Byte\",\"question\":\"Which data type has the smallest capacity?\",\"code\":null,\"option\":{\"1\":\"Long\",\"2\":\"Byte\",\"3\":\"Char\"}}',	NULL,	8,	'2020-06-08 03:36:44',	'2020-06-08 03:36:44'),
(84,	NULL,	NULL,	'take',	'Bytes are the smallest data type.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	8,	'2020-06-08 03:36:52',	'2020-06-08 03:36:52'),
(85,	'108',	NULL,	'Introduction',	'In this lesson, we will go over the rest of the data types in Java.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	9,	'2020-06-08 03:37:47',	'2020-06-08 03:37:47'),
(86,	'108',	NULL,	'Data Types',	'In the char data type, we can only store one character, number, special character, or unicode character. To store more than one character, we need to use a String.&nbsp;<br /><br />We will discuss the basics of strings in this course after finishing eight primitive data types.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	9,	'2020-06-08 03:38:17',	'2020-06-08 03:38:17'),
(87,	'108',	NULL,	'Float',	'It is a single-precision 32-bit(4-byte) floating-point value.',	NULL,	'',	NULL,	'float myNumber = 6.85f;',	NULL,	'Put f after a float number because it is good practice and by default a decimal number in Java is assumed as a double.',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	9,	'2020-06-08 03:38:57',	'2020-06-08 03:38:57'),
(88,	'108',	NULL,	'Double',	'It is a double precision 64-bit(8-byte) floating-point value.',	NULL,	'',	NULL,	'double myNumber = 6.532d;\n\n//or \n\ndouble myNumber = 6.532;',	NULL,	'Both are accepted as by default decimal number is assumed as double in Java. It is preferred that you put d because it is considered good practice in good coding.',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	9,	'2020-06-08 03:40:04',	'2020-06-08 03:40:04'),
(89,	'108',	NULL,	'Boolean',	'The boolean data type has only 2 possible values: true and false. It is very useful for conditional logic.',	NULL,	'',	NULL,	'boolean myStatement = true;',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	9,	'2020-06-08 03:40:28',	'2020-06-08 03:40:44'),
(90,	'108',	NULL,	'String',	'String is a sequence of characters. As we saw previously, a char is limited to store just one character or unicode character while a String can store a sequence of characters.',	NULL,	'',	NULL,	'string myName = “Sam”;',	NULL,	'Here we used a double quote to represent a string which is storing characters.',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	9,	'2020-06-08 03:41:24',	'2020-06-08 03:41:24'),
(91,	NULL,	NULL,	'Quiz',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	NULL,	NULL,	'{\"solution\":\"Double\",\"question\":\"What is used to store a lot of decimals?\",\"code\":null,\"option\":{\"1\":\"String\",\"2\":\"Float\",\"3\":\"Double\"}}',	NULL,	9,	'2020-06-08 03:41:53',	'2020-06-08 03:41:53'),
(92,	NULL,	NULL,	'take',	'A double can store the most decimal points.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	9,	'2020-06-08 03:42:04',	'2020-06-08 03:42:04'),
(93,	'108',	NULL,	'Introduction',	'In this lesson, we will go in depth into strings and different ways we can use them in Java',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	10,	'2020-06-08 03:42:43',	'2020-06-08 03:42:43'),
(94,	'108',	NULL,	'Strings',	'Strings are the most commonly used class in Java. In Java, every string we create is an object of the String class that implements serializable, comparable, and CharSequence interfaces.&nbsp;<br /><br />If Granny were to text someone, she would not be able to use letters. How frustrating can that be?',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	10,	'2020-06-08 03:42:56',	'2020-06-08 03:42:56'),
(95,	'108',	NULL,	'Character Array',	'It is nothing, but a character array example for &ldquo;Programming&rdquo; is a string of 11 characters.<br /><br />Example:',	NULL,	'',	NULL,	'char[] programming = {‘P’, ‘r’, ‘o’, ‘g’, ‘r’, ‘a’, ‘m’, ‘m’, ‘i’, ‘n’, ‘g’};\nString test = new String(programming);',	NULL,	'Strings are unchangeable, which means once a string is created, its value cannot be altered, but we can create a new instance of it.',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	10,	'2020-06-08 03:45:27',	'2020-06-08 03:45:27'),
(96,	'108',	NULL,	'Immutable',	'Any object whose state cannot be altered once created are called immutable objects. String, Integer, Byte, Short, all other wrapper class objects are immutable in nature.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	10,	'2020-06-08 03:45:44',	'2020-06-08 03:45:44'),
(97,	'108',	NULL,	'Creating A String',	'Strings can be created very easily, by assigning a string value to the string literal.<br /><br />Example:',	NULL,	'',	NULL,	'String string1 = “Hello World”;\nString string2 = “ Hello World “;',	NULL,	'',	'',	'If the object is already present in the memory compiler, it does not create a new object.&nbsp;<br />\r\n<br />\r\nRather it assigns the same old object to the new instance created, which means even though we have 2 string instances above string1 and string2, the compiler only creates one string object having the value &ldquo;Hello World&rdquo;, and assigns the same to both the instances String1 and String2.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	10,	'2020-06-08 03:46:21',	'2020-06-08 03:46:21'),
(98,	'108',	NULL,	'New Keyword',	'As we saw in the previous slide, by using only String, the compiler assigned the same string object to two different string literals. To overcome this approach, we can create a string using the new keyword.<br /><br />Example:',	NULL,	'',	NULL,	'String string1 = new String(“ Hello World “);\nString string2 = new String(“ Hello World “);',	NULL,	'In this approach, the compiler will create two different objects in memory having the same value.',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	10,	'2020-06-08 03:47:01',	'2020-06-08 03:47:01'),
(99,	NULL,	'hints|Go to the previous slide and see what keyword we used to create a new object.|Use the new keyword to create a new instance variable.|new',	'Quiz',	'Fill in the blank to create a String instance',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'printsln',	NULL,	'{\"soln\":\"new\",\"tf1\":\"String string1 = [blank] String(&quot;Programming Hero&quot;);\"}',	10,	'2020-06-08 05:06:21',	'2020-06-08 05:06:21'),
(100,	NULL,	NULL,	'take',	'Use the new keyword to add the same instance of an object in a string.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	10,	'2020-06-08 05:06:31',	'2020-06-08 05:06:31'),
(101,	'111',	NULL,	'Introduction',	'In many ways, Android is organized, but we need to understand how. Let&#39;s see how the different folders of our app perform different activities.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	11,	'2020-06-10 21:43:17',	'2020-06-10 21:43:17'),
(102,	'111',	NULL,	'Java Folder',	'The <strong><font color=\"#078ef9\">Java</font></strong> Folder contains 1 really important file. It is the MainActivity.java file.<br /><br />This file contains all the activities in Java. You can use methods in the file, and use super() and override methods.',	NULL,	'',	NULL,	'package com.programminghero.myappication;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.os.Bundle;\n\npublic class MainActivity extends AppCompatActivity {\n\n    @override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n    }\n}',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	11,	'2020-06-10 21:44:22',	'2020-06-10 21:44:22'),
(103,	'111',	NULL,	'Res Folder',	'App <strong><font color=\"#078ef9\">resources</font></strong> such as bitmaps and layouts are organized into type-specific directories inside each module&#39;s <strong><font color=\"#078ef9\">res</font></strong>/directory.<br /><br />There are 4 folders inside the res folder:<ul>	<li>drawable</li>	<li>layout</li>	<li>mipmap</li>	<li>values</li></ul>',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	11,	'2020-06-10 21:44:52',	'2020-06-10 21:44:52'),
(104,	'111',	NULL,	'Drawable Folder',	'When developing an Android application, you will always need to add images to it. Images in Android applications are commonly saved in Android project drawable folders.&nbsp;<br /><br />Android Studio generates a <strong><font color=\"#078ef9\">drawable</font></strong> id for each added image in R class. Then R.drawable.imageId to refer that image in your Java code.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	11,	'2020-06-10 21:45:06',	'2020-06-10 21:45:06'),
(105,	'111',	NULL,	'Layout Folder',	'The <strong><font color=\"#078ef9\">layout</font></strong> folder contains XML files used for your layouts. These files are used to set up the layout for your Activity.&nbsp;<br /><br />They are used for the basic alignment of your layouts, components, widgets, and similar resources that are used for the UI of your application.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	11,	'2020-06-10 21:45:20',	'2020-06-10 21:45:20'),
(106,	'111',	NULL,	'Mipmap Folder',	'The <strong><font color=\"#078ef9\">mipmap</font></strong> folder contains the launcher icon files for the app. A launcher icon is a graphic that represents your app to users.<br /><br />The contents of ic_launcher are the graphics for the regular launcher icon we see in the app drawer/home screen of the device. It holds the graphics for devices that use round icons.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	11,	'2020-06-10 21:45:38',	'2020-06-10 21:45:38'),
(107,	'111',	NULL,	'Values Folder',	'Open the res/values folder to reveal 3 files that we can talk about later.<br /><br />The values folder contains XML files that contain simple values, such as strings, integers, and colors. The values folder is used to keep track of the values you will be using in your application.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	11,	'2020-06-10 21:45:52',	'2020-06-10 21:45:52'),
(108,	NULL,	NULL,	'Quiz',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	NULL,	NULL,	'{\"solution\":\"True\",\"question\":\"The mipmap folder is used for launcher icons.\",\"code\":null,\"option\":{\"1\":\"True\",\"2\":\"False\",\"3\":\"None\"}}',	NULL,	11,	'2020-06-10 21:46:21',	'2020-06-10 21:46:21'),
(109,	NULL,	NULL,	'take',	'Folders are used to organize your project.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	11,	'2020-06-10 21:46:31',	'2020-06-10 21:46:31'),
(110,	'111',	NULL,	'Introduction',	'Let&#39;s learn what the color.xml file means in our project folder.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	12,	'2020-06-10 21:46:58',	'2020-06-10 21:46:58'),
(111,	'111',	NULL,	'Color',	'We use color for many things. In fact, color is everywhere and we sometimes don&#39;t notice how amazing it is. Imagine looking at everything black and white, we feel old just thinking about it!',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	12,	'2020-06-10 21:47:32',	'2020-06-10 21:47:32'),
(112,	'111',	NULL,	'Application',	'Therefore, if color is present in almost everything, we should be able to implement color into our app.&nbsp;<br /><br />Luckily, the colors.xml gives us the possibility to put any color we want into our app. 16,581,375 different colors. Just let that sync in!',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	12,	'2020-06-10 21:47:49',	'2020-06-10 21:47:49'),
(113,	'111',	NULL,	'Contents',	'The file might not make much sense when we first open, but we will give you more context. The XML file, when opened, contains the following code.',	NULL,	'',	NULL,	'<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<resources>\n  <color name=\"colorPrimary\">#008577</color>\n  <color name=\"colorPrimaryDark\">#00574B</color>\n  <color name=\"colorAccent\">#D81B60</color>\n</resources>',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	12,	'2020-06-10 21:48:19',	'2020-06-10 21:48:19'),
(114,	'111',	NULL,	'Context',	'Notice the starting and closing tags take the usual pattern we have come to expect from XML files. There is an opening &lt;resources&gt; tag and a closing &lt;/resources&gt; tag.&nbsp;<br /><br />As children of resources, there are three pairs of &lt;color&gt;...&lt;/color&gt; tags.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	12,	'2020-06-10 21:48:33',	'2020-06-10 21:48:33'),
(115,	'111',	NULL,	'Color Tags',	'Within each color tag, there contained a name attribute and some curious-looking code consisting of numbers and letters.&nbsp;<br /><br />The name attribute is the name of a color.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	12,	'2020-06-10 21:48:48',	'2020-06-10 21:48:48'),
(116,	'111',	NULL,	'Hex',	'The code is what defines an actual color itself. Therefore, when the name is referred to, the color defined by the related code is what produced on the screen.<br /><br />The numbers, however, mean the hex value. The hex value represents the color, and 0 means the color is dark and F means it is light. 000000 is black and FFFFFF is white.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	12,	'2020-06-10 21:49:01',	'2020-06-10 21:49:01'),
(117,	NULL,	NULL,	'Quiz',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	NULL,	NULL,	'{\"solution\":\"Both\",\"question\":\"What do the numbers in the color tags represent?\",\"code\":null,\"option\":{\"1\":\"Hex Values\",\"2\":\"Colors\",\"3\":\"Both\"}}',	NULL,	12,	'2020-06-10 21:49:27',	'2020-06-10 21:49:27'),
(118,	NULL,	NULL,	'take',	'Use colors.xml for a color generation.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	12,	'2020-06-10 21:49:35',	'2020-06-10 21:49:35'),
(119,	'111',	NULL,	'Introduction',	'In this lesson, we will talk about what the purpose of the strings.xml file is and its context.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	13,	'2020-06-10 21:49:57',	'2020-06-10 21:49:57'),
(120,	'111',	NULL,	'Categorization',	'We will usually be creating apps with a lot of memory used up. All that memory can be hard to manage when having a lot of code.<br /><br />Making updates would take a really long time. That is why there is a file with all the app context.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	13,	'2020-06-10 21:50:10',	'2020-06-10 21:50:10'),
(121,	'111',	NULL,	'Strings.xml',	'By separating the content of the app from the programming of the app, it is easier to make changes at any time, and it is also possible to create content for multiple different languages without altering the Java code for each change.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	13,	'2020-06-10 21:50:28',	'2020-06-10 21:50:28'),
(122,	'111',	NULL,	'Syntax',	'If you open the<strong><font color=\"#078ef9\"> strings.xml</font></strong> file, you&#39;ll see the following syntax-',	NULL,	'',	NULL,	'<resources>\n  <string name=\"app_name\">My Application</string>\n</resources>',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	13,	'2020-06-10 21:50:49',	'2020-06-10 21:50:49'),
(123,	'111',	NULL,	'Explanation',	'We can see that, within the now-familiar &lt;resources&gt;...&lt;/resources&gt; tags, we have a &lt;string&gt;...&lt;/string&gt; tag.&nbsp;<br /><br />Within the string tag, there is an attribute called name with an <strong><font color=\"#078ef9\">app_name</font></strong> value and then further value of My Application.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	13,	'2020-06-10 21:51:03',	'2020-06-10 21:51:03'),
(124,	'111',	NULL,	'Manifest.xml',	'When we have strings in the strings.xml file, it automatically is accessed and in the manifest.xml file.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	13,	'2020-06-10 21:51:17',	'2020-06-10 21:51:17'),
(125,	'111',	NULL,	'Strings to Manifest',	'The following code will be written on there-<br /><br />android:label=&quot;@string/app_name&quot;<br /><br />The android:label attribute is being assigned a value of<strong><font color=\"#078ef9\"> @string/app_name</font></strong>. In Android, @string refers to all the strings in the strings.xml file.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	'In a specific app, the string attribute with the<strong> app_name </strong>label has the value My Application.&nbsp;<br />\r\n<br />\r\nThe content in that is moved to the file and can be implemented using the manifest.xml file.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	13,	'2020-06-10 21:51:52',	'2020-06-10 21:51:52'),
(126,	NULL,	NULL,	'Quiz',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	NULL,	NULL,	'{\"solution\":\"True\",\"question\":\"The strings.xml file cannot contain anything other than app context as Strings.\",\"code\":null,\"option\":{\"1\":\"True\",\"2\":\"False\",\"3\":\"None\"}}',	NULL,	13,	'2020-06-10 21:52:18',	'2020-06-10 21:52:18'),
(127,	NULL,	NULL,	'take',	'strings.xml contains the app content.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	13,	'2020-06-10 21:52:52',	'2020-06-10 21:52:52'),
(128,	'111',	NULL,	'Introduction',	'Sometimes we want to automate a task. We have done that in many different ways, but it is also important you understand how to do it outside of a programming language like Java or Kotlin.<br /><br />Thankfully, <strong><font color=\"#078ef9\">Gradle </font></strong>was developed just for that.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	14,	'2020-06-10 21:53:44',	'2020-06-10 21:53:44'),
(129,	'111',	NULL,	'Gradle',	'before Android Studio you were using Eclipse for your development purposes. Chances are, you don&#39;t know how to build your <strong><font color=\"#078ef9\">APK</font></strong>.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	'APK is a file type that stores all the basic resources for our Android application.<br />\r\n<br />\r\nIt has the .apk file extension and is similar to a .zip file. In fact, if you change the .apk file extension to .zip, you will be able to access the files inside it.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	14,	'2020-06-10 21:54:04',	'2020-06-10 21:54:04'),
(130,	'111',	NULL,	'Source',	'Now, have you ever wondered why the <strong><font color=\"#078ef9\">res </font></strong>folder is in the same directory as your <strong><font color=\"#078ef9\">src </font></strong>folder?<br /><br />This is where the build system enters the picture. This build system automatically takes all the source files, then applies the appropriate tools.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	14,	'2020-06-10 21:54:19',	'2020-06-10 21:54:19'),
(131,	'111',	NULL,	'Compression',	'The files from the sources and all Java and XML files are grouped together. All of them are grouped and compressed into one file, which is the APK.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	14,	'2020-06-10 21:54:33',	'2020-06-10 21:54:33'),
(132,	'111',	NULL,	'Gradle Builder',	'Gradle is another build system that takes the best features from other build systems and combines them into one.&nbsp;<br /><br />It improves based on their shortcomings. It is a JVM based build system, which means that you can write your own script in Java.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	14,	'2020-06-10 21:54:47',	'2020-06-10 21:54:47'),
(133,	'111',	NULL,	'Platform',	'One cool thing about Gradle is that it is a plugin-based system.&nbsp;<br /><br />This means if you have your own programming language and you want to automate the task of building some packages from sources.&nbsp;<br /><br />Then you can write a complete plugin in Java, Groovy, or Kotlin, and distribute it to the rest of the world.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	14,	'2020-06-10 21:55:01',	'2020-06-10 21:55:01'),
(134,	'111',	NULL,	'Why',	'A simple example of why to use it is that you have to copy some files from one directory to another before the actual process happens.&nbsp;<br /><br />A Gradle build script can do this. It contains Top-level and Module-level build-gradle scripts.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	14,	'2020-06-10 21:55:14',	'2020-06-10 21:55:14'),
(135,	NULL,	NULL,	'Quiz',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	NULL,	NULL,	'{\"solution\":\"Build\",\"question\":\"Gradle helps you automatically do what?\",\"code\":null,\"option\":{\"1\":\"Compile\",\"2\":\"Debug\",\"3\":\"Build\"}}',	NULL,	14,	'2020-06-10 21:55:40',	'2020-06-10 21:55:40'),
(136,	NULL,	NULL,	'take',	'Use Gradle to build your application automatically.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	14,	'2020-06-10 21:56:09',	'2020-06-10 21:56:09'),
(137,	'111',	NULL,	'Introduction',	'Let&#39;s see what app-level Gradle is and one of the 2 files in it.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	15,	'2020-06-10 21:56:38',	'2020-06-10 21:56:38'),
(138,	'111',	NULL,	'Top-level',	'The top-level is located in the root project directory and its main function is to define the build configurations that will be applied to all the modules in the project.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	15,	'2020-06-10 21:56:47',	'2020-06-10 21:56:47'),
(139,	'111',	NULL,	'Implementation',	'It is implemented using code at the top of the file.',	NULL,	'',	NULL,	'buildscript {\n    repositories {\n        google()\n        jcenter()\n    }\n\n    dependencies {\n        classpath \'com.android.tools.build:gradle:3.5.1\'\n    }\n}\n\nallprojects {\n    repositories {\n        google()\n        jcenter()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	15,	'2020-06-10 21:57:29',	'2020-06-10 21:57:29'),
(140,	'111',	NULL,	'Explanation',	'The top-level build-gradle supports various build configurations like:<br /><br /><strong><font color=\"#078ef9\">buildscript: </font></strong>This block is used to configure the repositories and dependencies for Gradle.<br /><br /><strong><font color=\"#078ef9\">dependencies: </font></strong>This block in buildscript is used to configure dependency that the Gradle needs to build during the project.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	'<strong>allprojects: </strong>This is the block where one can configure the third-party plugins or libraries. For created projects, Android Studio includes JCenter and Google&#39;s maven repositories by default.<br />\r\n<br />\r\n<strong>task clean(type: Delete): </strong>This block is used to delete the directory every time the project is run. This way the projects keep clean when someone modifies some config files like, during setting.gradle which requires a complete clean.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	15,	'2020-06-10 21:58:12',	'2020-06-10 21:58:12'),
(141,	NULL,	NULL,	'Quiz',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	NULL,	NULL,	'{\"solution\":\"Configuring\",\"question\":\"What is the buildscript&#39;s task?\",\"code\":null,\"option\":{\"1\":\"Building\",\"2\":\"Configuring\",\"3\":\"Cleaning\"}}',	NULL,	15,	'2020-06-10 21:58:38',	'2020-06-10 21:58:38'),
(142,	NULL,	NULL,	'Quiz',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	NULL,	NULL,	'{\"solution\":\"False\",\"question\":\"You will always need to add dependencies, otherwise, it will not work.\",\"code\":null,\"option\":{\"1\":\"True\",\"2\":\"False\",\"3\":\"None\"}}',	NULL,	15,	'2020-06-10 21:59:06',	'2020-06-10 21:59:06'),
(143,	NULL,	NULL,	'take',	'Use Top-level Gradle for build configurations.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	15,	'2020-06-10 21:59:12',	'2020-06-10 21:59:12'),
(144,	'111',	NULL,	'Introduction',	'Let&#39;s learn another type of Gradle. This is called <strong><font color=\"#078ef9\">Project Level Gradle</font></strong>.<br /><br />We will see what it is and what we can use it for.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	16,	'2020-06-10 21:59:48',	'2020-06-10 21:59:48'),
(145,	'111',	NULL,	'Project Level Gradle',	'The location for this is in the project/module directory of the project.&nbsp;<br /><br />This Gradle script is where all the dependencies are defined and where the <strong><font color=\"#078ef9\">SDK</font></strong> versions are declared.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	16,	'2020-06-10 22:00:04',	'2020-06-10 22:00:04'),
(146,	'111',	NULL,	'Function',	'This script has many functions in the project which include additional build types and override settings in the main/app manifest or <strong><font color=\"#078ef9\">top-level build.gradle </font></strong>file.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	16,	'2020-06-10 22:00:19',	'2020-06-10 22:00:19'),
(147,	'111',	NULL,	'Implementation',	'The Project Level Gradle is implemented in the file using the following-',	NULL,	'',	NULL,	'android {\n    compileSdkVersion 29\n    buildToolsVersion \"29.0.2\"\n    defaultConfig {\n        applicationId \"com.programminghero.myapplication\"\n        minSdkVersion 15\n        targetSdkVersion 29\n        versionCode 1\n        versionName \"1.0\"\n        testInstrumentationRunner \"androidX.test.runner.AndroidJUnitRunner\"\n    }\n    BuildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile(\'proguard-android-optimize.txt\'), \'proguard-rules.pro\'\n        }\n    }\n}\ndependencies {\n    implementation fileTree(dir: \'libs\', include: [\'*.jar\'])\n    implementation \'androidx.appcompat:appcompat:1.0.2\'\n    implementation \'androidx.constraintlayout:contraintlayout:1.1.3\'\n    testImplementation \'junit:junit:4.12\'\n    androidTestImplementation \'androidx.test.ext:junit:1.1.0\'\n    androidTestImplementation \'androidx.test.espresso:espresso-core:3.1.1\'\n}',	NULL,	'Let&#39;s see what the different parts are all about.',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	16,	'2020-06-10 22:00:57',	'2020-06-10 22:00:57'),
(148,	'111',	NULL,	'Explanation',	'The first line of the <strong><font color=\"#078ef9\">Android</font></strong> block contains the version of the SDK to be used when building modules.<br /><br />Then the <strong><font color=\"#078ef9\">Default Config</font></strong> block defines elements that are to be generated into the module&#39;s AndroidManifest.xml file during the build.&nbsp;<br /><br />These settings, which may be modified in the build file, are taken from the settings entered within Android Studio when the module was first created.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	'The <strong>BuildTypes </strong>block contains instructions on whether and how to run ProGuard on the APK file when a release version of the application is built. As currently configured, ProGuard will not be running when modules are built.&nbsp;<br />\r\n<br />\r\nTo enable ProGuard, the runProguard entry needs to be changed from false to true. The proguard-rules.pro file can be found in the module directory of the project.<br />\r\n<br />\r\nThe dependencies block lists any local and remote dependencies on which the module is dependent on.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	16,	'2020-06-10 22:01:41',	'2020-06-10 22:01:41'),
(149,	'111',	NULL,	'Dependencies',	'The first dependency reads as follows-<br /><br />implementation fileTree(dir: &#39;libs&#39;, include: [&#39;*.jar&#39;])<br /><br />This is a standard line that tells the Gradle system that any <strong><font color=\"#078ef9\">JAR </font></strong>file located in the module&#39;s lib subdirectory is to be included in the project build.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	'If for example, a JAR file named myclasses.jar was present in the GradleDemo/Module/lib folder of the project, that JAR file would be treated as a module dependency and included in the build process.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	16,	'2020-06-10 22:02:05',	'2020-06-10 22:02:05'),
(150,	'111',	NULL,	'Android Repository',	'The last dependency lines in the example file designate the Android libraries that need to be included from the <strong><font color=\"#078ef9\">Android Repository</font></strong>:<br /><br />implementation &#39;androidx.appcompat:appcompat:1.0.2&#39;<br />implementation &#39;androidx.constraintlayout:contraintlayout:1.1.3&#39;',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	16,	'2020-06-10 22:02:28',	'2020-06-10 22:02:28'),
(151,	NULL,	NULL,	'Quiz',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	NULL,	NULL,	'{\"solution\":\"Default Config\",\"question\":\"Which part of our Project Level Gradle configures the basic application settings?\",\"code\":null,\"option\":{\"1\":\"Android Repositories\",\"2\":\"Default Config\",\"3\":\"BuildTypes\"}}',	NULL,	16,	'2020-06-10 22:03:06',	'2020-06-10 22:03:06'),
(152,	NULL,	NULL,	'take',	'Use<strong><font color=\"#078ef9\"> Project Level Gradle</font></strong> for Project configuration.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	16,	'2020-06-10 22:03:18',	'2020-06-10 22:03:18'),
(153,	'112',	NULL,	'Introduction',	'In this lesson, we will learn about layouts and the types of layouts.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	17,	'2020-06-10 23:33:30',	'2020-06-10 23:33:30'),
(154,	'112',	NULL,	'Organization',	'We will like to <strong><font color=\"#078ef9\">organize</font></strong> our room in different ways. We don&#39;t just stack things on time with each other.&nbsp;<br /><br />We can&#39;t have all of our clothing on the bed, because it would take up our space to sleep. It calls for some amount of organization.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	17,	'2020-06-10 23:33:43',	'2020-06-10 23:33:43'),
(155,	'112',	NULL,	'Layouts',	'Similarly, our Android application needs to be organized so it can be pleasing to the eye.&nbsp;<br /><br />Thankfully we have layouts for that. <strong><font color=\"#078ef9\">Layouts</font></strong> allow you to organize activities, UI, elements, and more.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	17,	'2020-06-10 23:33:57',	'2020-06-10 23:33:57'),
(156,	'112',	NULL,	'Types',	'Almost unlimited potential comes with a bit of complexity. However, the best way to start to get to grips with this is to build some working examples of several types.<br /><br />There are 3 types of layouts being-<ul>	<li>Linear</li>	<li>Relative</li>	<li>Constraint</li></ul>',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	17,	'2020-06-10 23:34:12',	'2020-06-10 23:34:12'),
(157,	'112',	NULL,	'XML',	'Creating layouts is much easier if we use <strong><font color=\"#078ef9\">XML</font></strong>. We can use many distinctive features of the visual designer, and we will also be able to pay attention to the XML that is auto-generated.<br /><br />This can make our understanding more rounded.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	17,	'2020-06-10 23:34:27',	'2020-06-10 23:34:27'),
(158,	'112',	NULL,	'Usage',	'If you play with the designer by dragging and dropping widgets onto the design, the XML code that is generated will vary quite considerably depending upon which layout type we use.<br /><br />The way that a given widget&#39;s <strong><font color=\"#078ef9\">x attribute</font></strong> will influence its appearance might depend on a widget&#39;s <strong><font color=\"#078ef9\">y attribute</font></strong> or even on an attribute on another widget.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	17,	'2020-06-10 23:34:42',	'2020-06-10 23:34:42'),
(159,	'112',	NULL,	'Creating',	'In the project window, expand the <strong><font color=\"#078ef9\">res</font></strong> folder. Now right-click the <strong><font color=\"#078ef9\">layout folder</font></strong> and select <strong><font color=\"#078ef9\">New</font></strong>. Notice that there is an option for <strong><font color=\"#078ef9\">Layout resource file</font></strong>.&nbsp;<br /><br />Select <strong><font color=\"#078ef9\">Layout recourse file</font></strong> and you will see the <strong><font color=\"#078ef9\">New Resource File</font></strong> dialog window. Then specify the name for your layout file, and click <strong><font color=\"#078ef9\">OK</font></strong>.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	17,	'2020-06-10 23:34:56',	'2020-06-10 23:34:56'),
(160,	NULL,	NULL,	'Quiz',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	NULL,	NULL,	'{\"solution\":\"XML\",\"question\":\"What type of file is used for a Layout?\",\"code\":null,\"option\":{\"1\":\"Java\",\"2\":\"Layout\",\"3\":\"XML\"}}',	NULL,	17,	'2020-06-10 23:35:19',	'2020-06-10 23:35:19'),
(161,	NULL,	NULL,	'take',	'Use <strong><font color=\"#078ef9\">Layout</font></strong> files for UI organization.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	17,	'2020-06-10 23:35:27',	'2020-06-10 23:35:27'),
(162,	'112',	NULL,	'Introduction',	'Let&#39;s learn about the first and simplest layout being Linear.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	18,	'2020-06-10 23:35:53',	'2020-06-10 23:35:53'),
(163,	'112',	NULL,	'Linear',	'If you have taken a more advanced math class, you probably know what <strong><font color=\"#078ef9\">linear</font></strong> and linear equations are.&nbsp;<br /><br />They are equations that end up being a <strong><font color=\"#078ef9\">straight line</font></strong>. That is why they are simple.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	18,	'2020-06-10 23:36:04',	'2020-06-10 23:36:04'),
(164,	'112',	NULL,	'Linear Layout',	'<strong><font color=\"#078ef9\">Linear Layouts</font></strong> are probably the simplest layout that Android offers. As the name suggests, all the UI items are laid linearly.<br /><br />You have just 2 choices - <strong><font color=\"#078ef9\">vertical and horizontal</font></strong>.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	18,	'2020-06-10 23:36:16',	'2020-06-10 23:36:16'),
(165,	'112',	NULL,	'Attributes',	'By adding a single line of code or editing it through the <strong><font color=\"#078ef9\">Attribute</font></strong> window, you can configure a Linear Layout to lay things out vertically.<br /><br />Linear Layouts arrange all layout elements next to each other, element by element. They could be set horizontally or vertically.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	18,	'2020-06-10 23:36:29',	'2020-06-10 23:36:29'),
(166,	'112',	NULL,	'Elements',	'It is easier to understand when you look at the illustration. Let&#39;s imagine that our layout includes 3 elements. By the way. those elements could be <strong><font color=\"#078ef9\">TextViews, but also images, buttons, etc</font></strong>.<br /><br />Linear Layout could arrange elements horizontally from left to right or vertically from top to bottom.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	18,	'2020-06-10 23:36:40',	'2020-06-10 23:36:40'),
(167,	'112',	NULL,	'Code',	'By adding the following code, we can layout vertically-<br /><br />android:orientation=&quot;vertical&quot;<br /><br />You can then change <strong><font color=\"#078ef9\">vertical</font></strong> to <strong><font color=\"#078ef9\">horizontal</font></strong> to lay things out horizontally.<br /><br />Let&#39;s set height and width-<br /><br />android:layout_width=&quot;match_parent&quot;<br />android:layout_height=&quot;match_parent&quot;<br /><br />They are attributes to configure the layout.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	18,	'2020-06-10 23:37:09',	'2020-06-10 23:37:09'),
(168,	NULL,	NULL,	'Quiz',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	NULL,	NULL,	'{\"solution\":\"Attribute Window\",\"question\":\"What can we use to customize and configure the Linear Layout?\",\"code\":null,\"option\":{\"1\":\"Edit Window\",\"2\":\"Attribute Window\",\"3\":\"XML\"}}',	NULL,	18,	'2020-06-10 23:37:35',	'2020-06-10 23:37:35'),
(169,	NULL,	NULL,	'take',	'Use<strong><font color=\"#078ef9\"> Linear Layouts </font></strong>for simplicity.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	18,	'2020-06-10 23:37:45',	'2020-06-10 23:37:45'),
(170,	'112',	NULL,	'Introduction',	'In this lesson, we will learn about Relative Layouts, and how to create them.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	19,	'2020-06-10 23:38:11',	'2020-06-10 23:38:11'),
(171,	'112',	NULL,	'Relative',	'Have you ever driven a car? If you have, then you know that when you have a car in front of you, you have to leave distance between each other.<br /><br />Your position is <strong><font color=\"#078ef9\">relative</font></strong> to the car in front of you. If it were not, cars would probably be banned.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	19,	'2020-06-10 23:38:25',	'2020-06-10 23:38:25'),
(172,	'112',	NULL,	'Relative Layout',	'As the name implies, this layout will set its inner child views in relative positions. This can keep your layout hierarchy flat with no nested view groups.<br /><br />At the same time, however, each Relative Layout must undergo a process of who <strong><font color=\"#078ef9\">Measure</font></strong> passes, which can impact performance.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	19,	'2020-06-10 23:38:38',	'2020-06-10 23:38:38'),
(173,	'112',	NULL,	'Relation',	'Relative Layouts enforce to display elements in relations to each other. You can specify that, for instance, one UI element can be said to be placed on the left of another element.<br /><br />Or the element can be placed on the bottom of another. Each UI element can also be positioned according to the<strong><font color=\"#078ef9\"> layout&#39;s borders</font></strong>.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	19,	'2020-06-10 23:38:51',	'2020-06-10 23:38:51'),
(174,	'112',	NULL,	'Powerful',	'Relative Layouts are very powerful. Consider that for building mobile apps&#39; interfaces these can be run on multiple devices with different screen resolutions.&nbsp;<br /><br />Relative Layouts allow you to adjust your set of controls easily at almost every type of screen. It&#39;s quite specific and it can be found <strong><font color=\"#078ef9\">difficult</font></strong> to understand and use initially.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	19,	'2020-06-10 23:39:03',	'2020-06-10 23:39:03'),
(175,	'112',	NULL,	'Creation',	'One useful feature of a <strong><font color=\"#078ef9\">Relative Layout </font></strong>is the activity to center a child view by using the <strong><font color=\"#078ef9\">centerInParent</font></strong> attribute.<br /><br />A look at <strong><font color=\"#078ef9\">RelativeLayout.LayoutParent</font></strong> shows a large amount of attributes all focused around positioning children relative to the edges or center of Relative Layout, but relative to one another.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	19,	'2020-06-10 23:39:18',	'2020-06-10 23:39:18'),
(176,	NULL,	NULL,	'Quiz',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	NULL,	NULL,	'{\"solution\":\"relative_layout.xml\",\"question\":\"What file can you use to add Relative Layout attributes?\",\"code\":null,\"option\":{\"1\":\"relative_layout.xml\",\"2\":\"layout.xml\",\"3\":\"Attribute Window\"}}',	NULL,	19,	'2020-06-10 23:39:49',	'2020-06-10 23:39:49'),
(177,	NULL,	NULL,	'take',	'Use <strong><font color=\"#078ef9\">Relative Layouts </font></strong>for relative positioning.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	19,	'2020-06-10 23:39:57',	'2020-06-10 23:39:57'),
(178,	'112',	NULL,	'Introduction',	'Let&#39;s learn about the third type of layout which is the Constraint Layout.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	20,	'2020-06-10 23:40:22',	'2020-06-10 23:40:22'),
(179,	'112',	NULL,	'Constraint Layout',	'Similarly, a <strong><font color=\"#078ef9\">constraint layout </font></strong>constraints its views and childs to align in different ways. They are connections or an alignment to the element the constraint is tied to.<br /><br />You define various constraints for every child view relative to other views present. This gives you the ability to construct complex layouts with a flat view hierarchy.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	20,	'2020-06-10 23:41:11',	'2020-06-10 23:41:11'),
(180,	'112',	NULL,	'Simplicity',	'Constraint Layout allows you to create large and complex layouts with a flat view. It&#39;s similar to Relative Layout views and the parent layout, but it&#39;s more flexible.<br /><br />It is also easier to use with Android Studio&#39;s <strong><font color=\"#078ef9\">Layout Editor</font></strong>.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	20,	'2020-06-10 23:43:03',	'2020-06-10 23:43:03'),
(181,	'112',	NULL,	'XML',	'All the power of Constraint Layout is available directly from the Layout Editor&#39;s visual tools, because the layout API and the Layout Editor were specially built for each other.&nbsp;<br /><br />So, you can build your layout with Constraint Layout entirely by drag-and-dropping instead of editing the <strong><font color=\"#078ef9\">XML</font></strong>.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	20,	'2020-06-10 23:43:18',	'2020-06-10 23:43:18'),
(182,	'112',	NULL,	'How it works?',	'To define a view&#39;s position in Constraint Layouts, you must add at least one horizontal and one vertical constraint for the view.&nbsp;<br /><br />Each constraint represents a connection or alignment to another view, the parent layout, or an invisible guideline.',	NULL,	'',	NULL,	'code block',	NULL,	'',	'',	NULL,	'Each constraint defines the view&#39;s position along either the vertical or horizontal axis; so each view must have a minimum of one constraint for each axis, but often more are necessary.<br />\r\n<br />\r\nWhen you drop a view into the <strong>Layout Editor</strong>, it stays where you leave it even if it has no constraint. However, this is only to make editing easier.<br />\r\n<br />\r\nIf a view has <strong>no constraint</strong> when you run your layout on a device, it is drawn at position [0, 0], which is the top-left corner.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	20,	'2020-06-10 23:43:33',	'2020-06-10 23:43:49'),
(183,	'112',	NULL,	'Library',	'To use Constraint Layout in your project, proceed as follows:<br /><br />Add the constraint layout <strong><font color=\"#078ef9\">dependency</font></strong> to our gradle file.&nbsp;<br /><br />dependencies {<br />&nbsp;&nbsp;implementation &#39;com.android.support.constraint:constraint-layout:1.1.2&#39;<br />}<br /><br />In the <strong><font color=\"#078ef9\">toolbar</font></strong> or <strong><font color=\"#078ef9\">sync notification</font></strong>, click <strong><font color=\"#078ef9\">Sync Project with Gradle Files</font></strong>.<br /><br />Now you&#39;re ready to build your layout with Constraint Layout.',	NULL,	'',	NULL,	'',	NULL,	'',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	20,	'2020-06-10 23:44:13',	'2020-06-10 23:44:13'),
(184,	NULL,	NULL,	'Quiz',	'',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	'quiz',	NULL,	NULL,	NULL,	NULL,	'{\"solution\":\"It is powerful and complex.\",\"question\":\"What is the main feature of the Constraint Layout?\",\"code\":null,\"option\":{\"1\":\"It is easy to build.\",\"2\":\"It is powerful and complex.\",\"3\":\"It can extend your video game screen time.\"}}',	NULL,	20,	'2020-06-10 23:44:40',	'2020-06-10 23:44:40'),
(185,	NULL,	NULL,	'take',	'Use <strong><font color=\"#078ef9\">Constraint Layouts</font></strong> to add constraints to your layouts.',	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	NULL,	20,	'2020-06-10 23:44:50',	'2020-06-10 23:44:50');

DROP TABLE IF EXISTS `sub_planets`;
CREATE TABLE `sub_planets` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT,
  `sid` bigint unsigned NOT NULL,
  `mtitle` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `fmodule` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'false',
  `total` int unsigned NOT NULL,
  `status` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'lock',
  `planet_id` int unsigned NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO `sub_planets` (`id`, `sid`, `mtitle`, `fmodule`, `total`, `status`, `planet_id`, `created_at`, `updated_at`) VALUES
(1,	105,	'For Loop',	'false',	0,	'lock',	9,	'2020-04-19 01:18:23',	'2020-04-19 01:18:23'),
(2,	105,	'While Loop',	'false',	0,	'lock',	9,	'2020-04-19 01:18:23',	'2020-04-19 01:18:23'),
(3,	105,	'Storing Words(String)',	'false',	0,	'lock',	48,	'2020-04-26 01:53:05',	'2020-04-26 01:53:05'),
(4,	105,	'True Or False(Boolean)',	'false',	0,	'lock',	48,	'2020-04-26 01:53:05',	'2020-04-26 01:53:05'),
(5,	105,	'Storing Numbers(val)',	'false',	0,	'lock',	48,	'2020-04-26 01:53:05',	'2020-04-26 01:53:05'),
(6,	105,	'Operations',	'false',	0,	'lock',	48,	'2020-04-26 01:53:05',	'2020-04-26 01:53:05'),
(7,	108,	'Data Types 1',	'false',	0,	'lock',	56,	'2020-06-08 02:59:15',	'2020-06-08 02:59:15'),
(8,	105,	'Data Types 2',	'false',	0,	'lock',	56,	'2020-06-08 02:59:15',	'2020-06-08 02:59:15'),
(9,	105,	'Data Types 3',	'false',	0,	'lock',	56,	'2020-06-08 02:59:15',	'2020-06-08 02:59:15'),
(10,	105,	'Strings',	'false',	0,	'lock',	56,	'2020-06-08 02:59:15',	'2020-06-08 02:59:15'),
(11,	111,	'Folders',	'false',	0,	'lock',	79,	'2020-06-10 21:27:30',	'2020-06-10 21:27:30'),
(12,	111,	'Colors.xml',	'false',	0,	'lock',	79,	'2020-06-10 21:27:30',	'2020-06-10 21:27:30'),
(13,	111,	'Strings.xml',	'false',	0,	'lock',	79,	'2020-06-10 21:27:30',	'2020-06-10 21:27:30'),
(14,	111,	'Gradle',	'false',	0,	'lock',	80,	'2020-06-10 21:28:18',	'2020-06-10 21:28:18'),
(15,	111,	'App Level Gradle',	'false',	0,	'lock',	80,	'2020-06-10 21:28:18',	'2020-06-10 21:28:18'),
(16,	111,	'Project Level Gradle',	'false',	0,	'lock',	80,	'2020-06-10 21:28:18',	'2020-06-10 21:28:18'),
(17,	112,	'Layouts',	'false',	0,	'lock',	87,	'2020-06-10 23:07:13',	'2020-06-10 23:07:13'),
(18,	112,	'Linear Layout',	'false',	0,	'lock',	87,	'2020-06-10 23:07:13',	'2020-06-10 23:07:13'),
(19,	105,	'Relative Layout',	'false',	0,	'lock',	87,	'2020-06-10 23:07:13',	'2020-06-10 23:07:13'),
(20,	105,	'Constrain Layout',	'false',	0,	'lock',	87,	'2020-06-10 23:07:13',	'2020-06-10 23:07:13');

DROP TABLE IF EXISTS `units`;
CREATE TABLE `units` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT,
  `unit_title` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO `units` (`id`, `unit_title`, `created_at`, `updated_at`) VALUES
(4,	'Quiz 18.1',	'2020-07-15 05:26:53',	'2020-07-15 05:26:53'),
(5,	'Quiz 18.2',	'2020-07-15 05:29:08',	'2020-07-15 05:29:08');

DROP TABLE IF EXISTS `users`;
CREATE TABLE `users` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `email` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `email_verified_at` timestamp NULL DEFAULT NULL,
  `password` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,
  `remember_token` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `users_email_unique` (`email`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO `users` (`id`, `name`, `email`, `email_verified_at`, `password`, `remember_token`, `created_at`, `updated_at`) VALUES
(1,	'Programming Hero',	'admin@programming-hero.com',	NULL,	'$2y$10$bcjnP8ldTvEC4JW91RRyCOYwUfq6P3EY6fx8Icd4m49oqEMAzwpJ6',	'DUrlJBhzCfRwasvjDx6NDJSxmGTvu8Rpi32Q3rQ78PTdgrtpaZZlif5zkR58',	'2020-04-17 09:46:17',	'2020-04-17 09:46:17');

-- 2021-06-17 07:10:08
